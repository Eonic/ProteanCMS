/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/codemirror@5.65.4/src/display/scrolling.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Pos}from"../line/pos.js";import{cursorCoords,displayHeight,displayWidth,estimateCoords,paddingTop,paddingVert,scrollGap,textHeight}from"../measurement/position_measurement.js";import{gecko,phantom}from"../util/browser.js";import{elt}from"../util/dom.js";import{signalDOMEvent}from"../util/event.js";import{startWorker}from"./highlight_worker.js";import{alignHorizontally}from"./line_numbers.js";import{updateDisplaySimple}from"./update_display.js";export function maybeScrollWindow(o,l){if(signalDOMEvent(o,"scrollCursorIntoView"))return;let t=o.display,r=t.sizer.getBoundingClientRect(),e=null;if(l.top+r.top<0?e=!0:l.bottom+r.top>(window.innerHeight||document.documentElement.clientHeight)&&(e=!1),null!=e&&!phantom){let r=elt("div","â€‹",null,`position: absolute;\n                         top: ${l.top-t.viewOffset-paddingTop(o.display)}px;\n                         height: ${l.bottom-l.top+scrollGap(o)+t.barHeight}px;\n                         left: ${l.left}px; width: ${Math.max(2,l.right-l.left)}px;`);o.display.lineSpace.appendChild(r),r.scrollIntoView(e),o.display.lineSpace.removeChild(r)}}export function scrollPosIntoView(o,l,t,r){let e;null==r&&(r=0),o.options.lineWrapping||l!=t||(t="before"==l.sticky?Pos(l.line,l.ch+1,"before"):l,l=l.ch?Pos(l.line,"before"==l.sticky?l.ch-1:l.ch,"after"):l);for(let s=0;s<5;s++){let s=!1,c=cursorCoords(o,l),i=t&&t!=l?cursorCoords(o,t):c;e={left:Math.min(c.left,i.left),top:Math.min(c.top,i.top)-r,right:Math.max(c.left,i.left),bottom:Math.max(c.bottom,i.bottom)+r};let p=calculateScrollPos(o,e),n=o.doc.scrollTop,a=o.doc.scrollLeft;if(null!=p.scrollTop&&(updateScrollTop(o,p.scrollTop),Math.abs(o.doc.scrollTop-n)>1&&(s=!0)),null!=p.scrollLeft&&(setScrollLeft(o,p.scrollLeft),Math.abs(o.doc.scrollLeft-a)>1&&(s=!0)),!s)break}return e}export function scrollIntoView(o,l){let t=calculateScrollPos(o,l);null!=t.scrollTop&&updateScrollTop(o,t.scrollTop),null!=t.scrollLeft&&setScrollLeft(o,t.scrollLeft)}function calculateScrollPos(o,l){let t=o.display,r=textHeight(o.display);l.top<0&&(l.top=0);let e=o.curOp&&null!=o.curOp.scrollTop?o.curOp.scrollTop:t.scroller.scrollTop,s=displayHeight(o),c={};l.bottom-l.top>s&&(l.bottom=l.top+s);let i=o.doc.height+paddingVert(t),p=l.top<r,n=l.bottom>i-r;if(l.top<e)c.scrollTop=p?0:l.top;else if(l.bottom>e+s){let o=Math.min(l.top,(n?i:l.bottom)-s);o!=e&&(c.scrollTop=o)}let a=o.options.fixedGutter?0:t.gutters.offsetWidth,f=o.curOp&&null!=o.curOp.scrollLeft?o.curOp.scrollLeft:t.scroller.scrollLeft-a,u=displayWidth(o)-t.gutters.offsetWidth,d=l.right-l.left>u;return d&&(l.right=l.left+u),l.left<10?c.scrollLeft=0:l.left<f?c.scrollLeft=Math.max(0,l.left+a-(d?0:10)):l.right>u+f-3&&(c.scrollLeft=l.right+(d?0:10)-u),c}export function addToScrollTop(o,l){null!=l&&(resolveScrollToPos(o),o.curOp.scrollTop=(null==o.curOp.scrollTop?o.doc.scrollTop:o.curOp.scrollTop)+l)}export function ensureCursorVisible(o){resolveScrollToPos(o);let l=o.getCursor();o.curOp.scrollToPos={from:l,to:l,margin:o.options.cursorScrollMargin}}export function scrollToCoords(o,l,t){null==l&&null==t||resolveScrollToPos(o),null!=l&&(o.curOp.scrollLeft=l),null!=t&&(o.curOp.scrollTop=t)}export function scrollToRange(o,l){resolveScrollToPos(o),o.curOp.scrollToPos=l}function resolveScrollToPos(o){let l=o.curOp.scrollToPos;if(l){o.curOp.scrollToPos=null,scrollToCoordsRange(o,estimateCoords(o,l.from),estimateCoords(o,l.to),l.margin)}}export function scrollToCoordsRange(o,l,t,r){let e=calculateScrollPos(o,{left:Math.min(l.left,t.left),top:Math.min(l.top,t.top)-r,right:Math.max(l.right,t.right),bottom:Math.max(l.bottom,t.bottom)+r});scrollToCoords(o,e.scrollLeft,e.scrollTop)}export function updateScrollTop(o,l){Math.abs(o.doc.scrollTop-l)<2||(gecko||updateDisplaySimple(o,{top:l}),setScrollTop(o,l,!0),gecko&&updateDisplaySimple(o),startWorker(o,100))}export function setScrollTop(o,l,t){l=Math.max(0,Math.min(o.display.scroller.scrollHeight-o.display.scroller.clientHeight,l)),(o.display.scroller.scrollTop!=l||t)&&(o.doc.scrollTop=l,o.display.scrollbars.setScrollTop(l),o.display.scroller.scrollTop!=l&&(o.display.scroller.scrollTop=l))}export function setScrollLeft(o,l,t,r){l=Math.max(0,Math.min(l,o.display.scroller.scrollWidth-o.display.scroller.clientWidth)),(t?l==o.doc.scrollLeft:Math.abs(o.doc.scrollLeft-l)<2)&&!r||(o.doc.scrollLeft=l,alignHorizontally(o),o.display.scroller.scrollLeft!=l&&(o.display.scroller.scrollLeft=l),o.display.scrollbars.setScrollLeft(l))}
//# sourceMappingURL=/sm/9e761a13985a84b504c95a116eb7513afb5446d78f9962983fc3e683d9647c22.map
/**
 * Minified by jsDelivr using Terser v5.13.1.
 * Original file: /npm/codemirror@5.65.4/src/modes.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{copyObj,createObj}from"./util/misc.js";export let modes={},mimeModes={};export function defineMode(e,t){arguments.length>2&&(t.dependencies=Array.prototype.slice.call(arguments,2)),modes[e]=t}export function defineMIME(e,t){mimeModes[e]=t}export function resolveMode(e){if("string"==typeof e&&mimeModes.hasOwnProperty(e))e=mimeModes[e];else if(e&&"string"==typeof e.name&&mimeModes.hasOwnProperty(e.name)){let t=mimeModes[e.name];"string"==typeof t&&(t={name:t}),(e=createObj(t,e)).name=t.name}else{if("string"==typeof e&&/^[\w\-]+\/[\w\-]+\+xml$/.test(e))return resolveMode("application/xml");if("string"==typeof e&&/^[\w\-]+\/[\w\-]+\+json$/.test(e))return resolveMode("application/json")}return"string"==typeof e?{name:e}:e||{name:"null"}}export function getMode(e,t){t=resolveMode(t);let o=modes[t.name];if(!o)return getMode(e,"text/plain");let n=o(e,t);if(modeExtensions.hasOwnProperty(t.name)){let e=modeExtensions[t.name];for(let t in e)e.hasOwnProperty(t)&&(n.hasOwnProperty(t)&&(n["_"+t]=n[t]),n[t]=e[t])}if(n.name=t.name,t.helperType&&(n.helperType=t.helperType),t.modeProps)for(let e in t.modeProps)n[e]=t.modeProps[e];return n}export let modeExtensions={};export function extendMode(e,t){let o=modeExtensions.hasOwnProperty(e)?modeExtensions[e]:modeExtensions[e]={};copyObj(t,o)}export function copyState(e,t){if(!0===t)return t;if(e.copyState)return e.copyState(t);let o={};for(let e in t){let n=t[e];n instanceof Array&&(n=n.concat([])),o[e]=n}return o}export function innerMode(e,t){let o;for(;e.innerMode&&(o=e.innerMode(t),o&&o.mode!=e);)t=o.state,e=o.mode;return o||{mode:e,state:t}}export function startState(e,t,o){return!e.startState||e.startState(t,o)}
//# sourceMappingURL=/sm/bbf7f62d259072c3a9754035d9c3fbd643234321f763e409cbff584d89754872.map
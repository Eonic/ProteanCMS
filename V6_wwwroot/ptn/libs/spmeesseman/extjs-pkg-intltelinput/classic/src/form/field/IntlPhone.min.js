/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@spmeesseman/extjs-pkg-intltelinput@0.1.2/classic/src/form/field/IntlPhone.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
Ext.define("Ext.ux.form.field.IntlPhone",{extend:"Ext.form.field.Text",xtype:"intlphonefield",requires:[],inputWrapCls:void 0,inputWrapFocusCls:void 0,inputWrapInvalidCls:void 0,liquidLayout:!1,fieldLabel:"Phone Number",tooltip:"Select your country and phone numnber.  Your country code will be automatically determined",input:null,inputId:"intltelinput",inputType:"tel",iti:null,itiInstanceNumber:0,config:{cleanRawValue:!0,logFn:Ext.emptyFn,logValueFn:Ext.emptyFn},statics:{idCounter:0},initComponent:function(){this.callParent(arguments),this.itiInstanceNumber=Ext.ux.form.field.IntlPhone.idCounter,Ext.ux.form.field.IntlPhone.idCounter++,this.inputId="intltelinput-el-"+this.itiInstanceNumber.toString()},listeners:{afterrender:function(n,t){if(n.logFn("IntlTelField after render event",1),n.logValueFn("   cmp",n,3),window.intlTelInput)if(n.input=document.querySelector("#"+n.inputId),n.input){var e={separateDialCode:!0,preferredCountries:["us","ca","gb"],utilsScript:Ext.manifest.resources.base+"/resources/intltelinput/js/utils.js"};if(n.logFn("   initializing intl-tel-input element",1),n.logValueFn("      inputId",n.inputId,2),n.logValueFn("      utils script location",e.utilsScript,2),n.logValueFn("      options",e,3),window.intlTelInput(n.input,e),!window.intlTelInputGlobals||!window.intlTelInputGlobals.instances||!window.intlTelInputGlobals.instances[n.itiInstanceNumber])return void console.error("Could not create intl-tel-input element");n.iti=window.intlTelInputGlobals.instances[n.itiInstanceNumber],n.iti.extCmp=n,n.logFn("   intl-tel-input created successfully",2),n.logValueFn("   iti",n.iti,3),n.input.addEventListener("countrychange",n.onCountryChange),n.input.addEventListener("open:countrydropdown",n.onCountryExpand),n.input.addEventListener("close:countrydropdown",n.onCountryCollapse)}else console.error("Could not find intl-tel-input element");else console.error("Could not find intl-tel-input window definition")},beforedestroy:function(n){n.input&&window.iti&&(n.input.removeEventListener("countrychange",n.onCountryChange),n.input.removeEventListener("open:countrydropdown",n.onCountryExpand),n.input.removeEventListener("close:countrydropdown",n.onCountryCollapse))}},onCountryChange:function(){var n,t=this;t.iti&&(n=t.iti.getSelectedCountryData(),t.logFn("IntlTelField:  Country change",2),t.logValueFn("   ",n,3))},onCountryCollapse:function(){this.iti&&this.logFn("IntlTelField:  Country dropdown collapse",4)},onCountryExpand:function(){this.iti&&this.logFn("IntlTelField:  Country dropdown expand",4)},getNumber:function(){var n=this;if(!n.iti)return"";var t=n.iti.getNumber();return n.logValueFn("IntlTelField:  Tel get number",t,3),t},getRawValue:function(){var n=this,t=n.inputEl?n.inputEl.getValue():Ext.valueFrom(n.rawValue,"");return n.iti&&(t=n.iti.getNumber(),n.cleanRawValue&&(t=t.replace(/[-\()\+]/g,""))),n.rawValue=t,t},setRawValue:function(n){var t=this,e=t.rawValue;return t.transformRawValue.$nullFn||(n=t.transformRawValue(n)),n=Ext.valueFrom(n,""),void 0!==e&&e===n||(t.rawValue=n,t.inputEl&&(t.bindChangeEvents(!1),t.inputEl.dom.value=n,t.bindChangeEvents(!0))),t.rendered&&t.reference&&t.publishState("rawValue",n),t.iti&&t.iti.setNumber(n),n}});
//# sourceMappingURL=/sm/1bd169a24ef5366ea5c1450159f768ce5f8b2b5e572d8b6d3a49d4ad09195bd7.map
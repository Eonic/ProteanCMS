/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/leaflet@1.9.4/src/geometry/LineUtil.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Point,toPoint}from"./Point";import*as Util from"../core/Util";import{toLatLng}from"../geo/LatLng";import{centroid}from"./PolyUtil";import{toLatLngBounds}from"../geo/LatLngBounds";export function simplify(t,e){if(!e||!t.length)return t.slice();var n=e*e;return t=_simplifyDP(t=_reducePoints(t,n),n)}export function pointToSegmentDistance(t,e,n){return Math.sqrt(_sqClosestPointOnSegment(t,e,n,!0))}export function closestPointOnSegment(t,e,n){return _sqClosestPointOnSegment(t,e,n)}function _simplifyDP(t,e){var n=t.length,o=new(typeof Uint8Array!=void 0+""?Uint8Array:Array)(n);o[0]=o[n-1]=1,_simplifyDPStep(t,o,e,0,n-1);var r,i=[];for(r=0;r<n;r++)o[r]&&i.push(t[r]);return i}function _simplifyDPStep(t,e,n,o,r){var i,s,a,l=0;for(s=o+1;s<=r-1;s++)(a=_sqClosestPointOnSegment(t[s],t[o],t[r],!0))>l&&(i=s,l=a);l>n&&(e[i]=1,_simplifyDPStep(t,e,n,o,i),_simplifyDPStep(t,e,n,i,r))}function _reducePoints(t,e){for(var n=[t[0]],o=1,r=0,i=t.length;o<i;o++)_sqDist(t[o],t[r])>e&&(n.push(t[o]),r=o);return r<i-1&&n.push(t[i-1]),n}var _lastCode;export function clipSegment(t,e,n,o,r){var i,s,a,l=o?_lastCode:_getBitCode(t,n),f=_getBitCode(e,n);for(_lastCode=f;;){if(!(l|f))return[t,e];if(l&f)return!1;a=_getBitCode(s=_getEdgeIntersection(t,e,i=l||f,n,r),n),i===l?(t=s,l=a):(e=s,f=a)}}export function _getEdgeIntersection(t,e,n,o,r){var i,s,a=e.x-t.x,l=e.y-t.y,f=o.min,u=o.max;return 8&n?(i=t.x+a*(u.y-t.y)/l,s=u.y):4&n?(i=t.x+a*(f.y-t.y)/l,s=f.y):2&n?(i=u.x,s=t.y+l*(u.x-t.x)/a):1&n&&(i=f.x,s=t.y+l*(f.x-t.x)/a),new Point(i,s,r)}export function _getBitCode(t,e){var n=0;return t.x<e.min.x?n|=1:t.x>e.max.x&&(n|=2),t.y<e.min.y?n|=4:t.y>e.max.y&&(n|=8),n}function _sqDist(t,e){var n=e.x-t.x,o=e.y-t.y;return n*n+o*o}export function _sqClosestPointOnSegment(t,e,n,o){var r,i=e.x,s=e.y,a=n.x-i,l=n.y-s,f=a*a+l*l;return f>0&&((r=((t.x-i)*a+(t.y-s)*l)/f)>1?(i=n.x,s=n.y):r>0&&(i+=a*r,s+=l*r)),a=t.x-i,l=t.y-s,o?a*a+l*l:new Point(i,s)}export function isFlat(t){return!Util.isArray(t[0])||"object"!=typeof t[0][0]&&void 0!==t[0][0]}export function _flat(t){return console.warn("Deprecated use of _flat, please use L.LineUtil.isFlat instead."),isFlat(t)}export function polylineCenter(t,e){var n,o,r,i,s,a,l,f;if(!t||0===t.length)throw new Error("latlngs not passed");isFlat(t)||(console.warn("latlngs are not flat! Only the first ring will be used"),t=t[0]);var u=toLatLng([0,0]),g=toLatLngBounds(t);g.getNorthWest().distanceTo(g.getSouthWest())*g.getNorthEast().distanceTo(g.getNorthWest())<1700&&(u=centroid(t));var p=t.length,y=[];for(n=0;n<p;n++){var x=toLatLng(t[n]);y.push(e.project(toLatLng([x.lat-u.lat,x.lng-u.lng])))}for(n=0,o=0;n<p-1;n++)o+=y[n].distanceTo(y[n+1])/2;if(0===o)f=y[0];else for(n=0,i=0;n<p-1;n++)if(s=y[n],a=y[n+1],(i+=r=s.distanceTo(a))>o){l=(i-o)/r,f=[a.x-l*(a.x-s.x),a.y-l*(a.y-s.y)];break}var c=e.unproject(toPoint(f));return toLatLng([c.lat+u.lat,c.lng+u.lng])}
//# sourceMappingURL=/sm/a8c86bfcaf0a4308fa45eb04dde2dfbe53206216ab70a448897fc576ee426af6.map
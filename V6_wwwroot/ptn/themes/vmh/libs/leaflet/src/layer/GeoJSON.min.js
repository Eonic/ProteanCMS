/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/leaflet@1.9.4/src/layer/GeoJSON.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{LayerGroup}from"./LayerGroup";import{FeatureGroup}from"./FeatureGroup";import*as Util from"../core/Util";import{Marker}from"./marker/Marker";import{Circle}from"./vector/Circle";import{CircleMarker}from"./vector/CircleMarker";import{Polyline}from"./vector/Polyline";import{Polygon}from"./vector/Polygon";import{LatLng}from"../geo/LatLng";import*as LineUtil from"../geometry/LineUtil";import{toLatLng}from"../geo/LatLng";export var GeoJSON=FeatureGroup.extend({initialize:function(t,e){Util.setOptions(this,e),this._layers={},t&&this.addData(t)},addData:function(t){var e,o,r,n=Util.isArray(t)?t:t.features;if(n){for(e=0,o=n.length;e<o;e++)((r=n[e]).geometries||r.geometry||r.features||r.coordinates)&&this.addData(r);return this}var i=this.options;if(i.filter&&!i.filter(t))return this;var a=geometryToLayer(t,i);return a?(a.feature=asFeature(t),a.defaultOptions=a.options,this.resetStyle(a),i.onEachFeature&&i.onEachFeature(t,a),this.addLayer(a)):this},resetStyle:function(t){return void 0===t?this.eachLayer(this.resetStyle,this):(t.options=Util.extend({},t.defaultOptions),this._setLayerStyle(t,this.options.style),this)},setStyle:function(t){return this.eachLayer((function(e){this._setLayerStyle(e,t)}),this)},_setLayerStyle:function(t,e){t.setStyle&&("function"==typeof e&&(e=e(t.feature)),t.setStyle(e))}});export function geometryToLayer(t,e){var o,r,n,i,a="Feature"===t.type?t.geometry:t,s=a?a.coordinates:null,u=[],l=e&&e.pointToLayer,c=e&&e.coordsToLatLng||coordsToLatLng;if(!s&&!a)return null;switch(a.type){case"Point":return _pointToLayer(l,t,o=c(s),e);case"MultiPoint":for(n=0,i=s.length;n<i;n++)o=c(s[n]),u.push(_pointToLayer(l,t,o,e));return new FeatureGroup(u);case"LineString":case"MultiLineString":return r=coordsToLatLngs(s,"LineString"===a.type?0:1,c),new Polyline(r,e);case"Polygon":case"MultiPolygon":return r=coordsToLatLngs(s,"Polygon"===a.type?1:2,c),new Polygon(r,e);case"GeometryCollection":for(n=0,i=a.geometries.length;n<i;n++){var g=geometryToLayer({geometry:a.geometries[n],type:"Feature",properties:t.properties},e);g&&u.push(g)}return new FeatureGroup(u);case"FeatureCollection":for(n=0,i=a.features.length;n<i;n++){var y=geometryToLayer(a.features[n],e);y&&u.push(y)}return new FeatureGroup(u);default:throw new Error("Invalid GeoJSON object.")}}function _pointToLayer(t,e,o,r){return t?t(e,o):new Marker(o,r&&r.markersInheritOptions&&r)}export function coordsToLatLng(t){return new LatLng(t[1],t[0],t[2])}export function coordsToLatLngs(t,e,o){for(var r,n=[],i=0,a=t.length;i<a;i++)r=e?coordsToLatLngs(t[i],e-1,o):(o||coordsToLatLng)(t[i]),n.push(r);return n}export function latLngToCoords(t,e){return void 0!==(t=toLatLng(t)).alt?[Util.formatNum(t.lng,e),Util.formatNum(t.lat,e),Util.formatNum(t.alt,e)]:[Util.formatNum(t.lng,e),Util.formatNum(t.lat,e)]}export function latLngsToCoords(t,e,o,r){for(var n=[],i=0,a=t.length;i<a;i++)n.push(e?latLngsToCoords(t[i],LineUtil.isFlat(t[i])?0:e-1,o,r):latLngToCoords(t[i],r));return!e&&o&&n.length>0&&n.push(n[0].slice()),n}export function getFeature(t,e){return t.feature?Util.extend({},t.feature,{geometry:e}):asFeature(e)}export function asFeature(t){return"Feature"===t.type||"FeatureCollection"===t.type?t:{type:"Feature",properties:{},geometry:t}}var PointToGeoJSON={toGeoJSON:function(t){return getFeature(this,{type:"Point",coordinates:latLngToCoords(this.getLatLng(),t)})}};Marker.include(PointToGeoJSON),Circle.include(PointToGeoJSON),CircleMarker.include(PointToGeoJSON),Polyline.include({toGeoJSON:function(t){var e=!LineUtil.isFlat(this._latlngs);return getFeature(this,{type:(e?"Multi":"")+"LineString",coordinates:latLngsToCoords(this._latlngs,e?1:0,!1,t)})}}),Polygon.include({toGeoJSON:function(t){var e=!LineUtil.isFlat(this._latlngs),o=e&&!LineUtil.isFlat(this._latlngs[0]),r=latLngsToCoords(this._latlngs,o?2:e?1:0,!0,t);return e||(r=[r]),getFeature(this,{type:(o?"Multi":"")+"Polygon",coordinates:r})}}),LayerGroup.include({toMultiPoint:function(t){var e=[];return this.eachLayer((function(o){e.push(o.toGeoJSON(t).geometry.coordinates)})),getFeature(this,{type:"MultiPoint",coordinates:e})},toGeoJSON:function(t){var e=this.feature&&this.feature.geometry&&this.feature.geometry.type;if("MultiPoint"===e)return this.toMultiPoint(t);var o="GeometryCollection"===e,r=[];return this.eachLayer((function(e){if(e.toGeoJSON){var n=e.toGeoJSON(t);if(o)r.push(n.geometry);else{var i=asFeature(n);"FeatureCollection"===i.type?r.push.apply(r,i.features):r.push(i)}}})),o?getFeature(this,{geometries:r,type:"GeometryCollection"}):{type:"FeatureCollection",features:r}}});export function geoJSON(t,e){return new GeoJSON(t,e)}export var geoJson=geoJSON;
//# sourceMappingURL=/sm/abed259d028aa5f45fbedca775c21aa6df68ba90a93d8b45b31d731f620625b5.map
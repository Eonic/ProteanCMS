<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClearScript.Windows.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker">
            <summary>
            Represents an object that enforces thread affinity for a Windows Script engine.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.ISyncInvoker.CheckAccess">
            <summary>
            Determines whether the calling thread has access to the script engine.
            </summary>
            <returns><c>True</c> if the calling thread has access to the script engine, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.ISyncInvoker.VerifyAccess">
            <summary>
            Enforces that the calling thread has access to the script engine.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.ISyncInvoker.Invoke(System.Action)">
            <summary>
            Invokes a delegate that returns no value on the script engine's thread.
            </summary>
            <param name="action">The delegate to invoke on the script engine's thread.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.ISyncInvoker.Invoke``1(System.Func{``0})">
            <summary>
            Invokes a delegate that returns a value on the script engine's thread.
            </summary>
            <typeparam name="T">The delegate's return value type.</typeparam>
            <param name="func">The delegate to invoke on the script engine's thread.</param>
            <returns>The delegate's return value.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker">
            <summary>
            Provides a null <c><see cref="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker"/></c> implementation.
            </summary>
            <remarks>
            This class does not enforce thread affinity and should be used with caution. Windows Script
            engines can behave unpredictably when thread affinity is violated.
            </remarks>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.Core.NullSyncInvoker.Instance">
            <summary>
            The sole instance of the <c><see cref="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker"/></c> class.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.NullSyncInvoker.CheckAccess">
            <summary>
            Determines whether the calling thread has access to the script engine.
            </summary>
            <returns><c>True</c> if the calling thread has access to the script engine, <c>false</c> otherwise.</returns>
            <remarks>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker"/></c> implementation of this method always returns <c>true</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.NullSyncInvoker.VerifyAccess">
            <summary>
            Enforces that the calling thread has access to the script engine.
            </summary>
            <remarks>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker"/></c> implementation of this method performs no action.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.NullSyncInvoker.Invoke(System.Action)">
            <summary>
            Invokes a delegate that returns no value on the script engine's thread.
            </summary>
            <param name="action">The delegate to invoke on the script engine's thread.</param>
            <remarks>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker"/></c> implementation of this method invokes
            <paramref name="action"></paramref> without synchronization.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.NullSyncInvoker.Invoke``1(System.Func{``0})">
            <summary>
            Invokes a delegate that returns a value on the script engine's thread.
            </summary>
            <typeparam name="T">The delegate's return value type.</typeparam>
            <param name="func">The delegate to invoke on the script engine's thread.</param>
            <returns>The delegate's return value.</returns>
            <remarks>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.NullSyncInvoker"/></c> implementation of this method invokes
            <paramref name="func"></paramref> without synchronization.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.Core.JScriptEngine">
            <summary>
            Represents an instance of the JScript engine.
            </summary>
            <remarks>
            This class can be used in non-desktop environments such as server applications. An
            implementation of <c><see cref="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker"/></c> is required to enforce thread affinity.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.#ctor(Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new JScript engine instance.
            </summary>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.#ctor(System.String,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new JScript engine instance with the specified name.
            </summary>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.#ctor(Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new JScript engine instance with the specified options.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.#ctor(System.String,Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new JScript engine instance with the specified name, options, and
            synchronous invoker.
            </summary>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.#ctor(System.String,System.String,System.String,Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new JScript engine instance with the specified programmatic
            identifier, name, list of supported file name extensions, options, and synchronous
            invoker.
            </summary>
            <param name="progID">The programmatic identifier (ProgID) of the JScript engine class.</param>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="fileNameExtensions">A semicolon-delimited list of supported file name extensions.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
            <remarks>
            The <paramref name="progID"/> argument can be a class identifier (CLSID) in standard
            GUID format with braces (e.g., "{F414C260-6AC0-11CF-B6D1-00AA00BBBB58}").
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.JScriptEngine.FileNameExtension">
            <summary>
            Gets the script engine's recommended file name extension for script files.
            </summary>
            <remarks>
            <c><see cref="T:Microsoft.ClearScript.Windows.Core.JScriptEngine"/></c> instances return "js" for this property.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.JScriptEngine.ExecuteCommand(System.String)">
            <summary>
            Executes script code as a command.
            </summary>
            <param name="command">The script command to execute.</param>
            <returns>The command output.</returns>
            <remarks>
            <para>
            This method is similar to <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Evaluate(System.String)"/></c> but optimized for
            command consoles. The specified command must be limited to a single expression or
            statement. Script engines can override this method to customize command execution as
            well as the process of converting the result to a string for console output.
            </para>
            <para>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.JScriptEngine"/></c> version of this method attempts to use
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/tostring">toString</see></c>
            to convert the return value.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.Core.VBScriptEngine">
            <summary>
            Represents an instance of the VBScript engine.
            </summary>
            <remarks>
            This class can be used in non-desktop environments such as server applications. An
            implementation of <c><see cref="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker"/></c> is required to enforce thread affinity.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.#ctor(Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new VBScript engine instance.
            </summary>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.#ctor(System.String,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new VBScript engine instance with the specified name.
            </summary>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.#ctor(Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new VBScript engine instance with the specified options.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.#ctor(System.String,Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new VBScript engine instance with the specified name, options, and synchronous invoker.
            </summary>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.#ctor(System.String,System.String,System.String,Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new VBScript engine instance with the specified programmatic
            identifier, name, list of supported file name extensions, options, and synchronous
            invoker.
            </summary>
            <param name="progID">The programmatic identifier (ProgID) of the VBScript engine class.</param>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="fileNameExtensions">A semicolon-delimited list of supported file name extensions.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
            <remarks>
            The <paramref name="progID"/> argument can be a class identifier (CLSID) in standard
            GUID format with braces (e.g., "{F414C260-6AC0-11CF-B6D1-00AA00BBBB58}").
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.VBScriptEngine.FileNameExtension">
            <summary>
            Gets the script engine's recommended file name extension for script files.
            </summary>
            <remarks>
            <c><see cref="T:Microsoft.ClearScript.Windows.Core.VBScriptEngine"/></c> instances return "vbs" for this property.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.VBScriptEngine.ExecuteCommand(System.String)">
            <summary>
            Executes script code as a command.
            </summary>
            <param name="command">The script command to execute.</param>
            <returns>The command output.</returns>
            <remarks>
            <para>
            This method is similar to <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Evaluate(System.String)"/></c> but optimized for
            command consoles. The specified command must be limited to a single expression or
            statement. Script engines can override this method to customize command execution as
            well as the process of converting the result to a string for console output.
            </para>
            <para>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.VBScriptEngine"/></c> version of this method supports both expressions and
            statements. If the specified command begins with "eval " (not case-sensitive), the
            engine executes the remainder as an expression and attempts to use
            <c><see href="https://docs.microsoft.com/en-us/previous-versions//0zk841e9(v=vs.85)">CStr</see></c>
            to convert the result value. Otherwise, it executes the command as a statement and does
            not return a value.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine">
            <summary>
            Provides the core implementation for all Windows Script engines.
            </summary>
            <remarks>
            This class can be used in non-desktop environments such as server applications. An
            implementation of <c><see cref="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker"/></c> is required to enforce thread affinity.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.#ctor(System.String,System.String,System.String,Microsoft.ClearScript.Windows.WindowsScriptEngineFlags,Microsoft.ClearScript.Windows.Core.ISyncInvoker)">
            <summary>
            Initializes a new Windows Script engine instance with the specified list of supported file name extensions and synchronous invoker.
            </summary>
            <param name="progID">The programmatic identifier (ProgID) of the Windows Script engine class.</param>
            <param name="name">A name to associate with the instance. Currently this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="fileNameExtensions">A semicolon-delimited list of supported file name extensions.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="syncInvoker">An object that enforces thread affinity for the instance.</param>
            <remarks>
            The <paramref name="progID"/> argument can be a class identifier (CLSID) in standard
            GUID format with braces (e.g., "{F414C260-6AC0-11CF-B6D1-00AA00BBBB58}").
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.SyncInvoker">
            <summary>
            Gets the <c><see cref="T:Microsoft.ClearScript.Windows.Core.ISyncInvoker"/></c> implementation associated with the current script engine.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.CheckAccess">
            <summary>
            Determines whether the calling thread has access to the current script engine.
            </summary>
            <returns><c>True</c> if the calling thread has access to the current script engine, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.VerifyAccess">
            <summary>
            Enforces that the calling thread has access to the current script engine.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.HostWindow">
            <summary>
            Gets or sets an interface that supports the display of dialogs on behalf of script code.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.Script">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.Global">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.GetStackTrace">
            <summary>
            Gets a string representation of the script call stack.
            </summary>
            <returns>The script call stack formatted as a string.</returns>
            <remarks>
            <para>
            This method returns an empty string if the script engine is not executing script code.
            The stack trace text format is defined by the script engine.
            </para>
            <para>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine"/></c> version of this method returns the empty string
            if script debugging features have not been enabled for the instance.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.Interrupt">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.CollectGarbage(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the script engine and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
            <remarks>
            This method is called by the public <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Dispose"/></c> method and the
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Finalize">Finalize</see></c> method.
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Dispose"/></c> invokes the protected <c>Dispose(Boolean)</c>
            method with the <paramref name="disposing"/> parameter set to <c>true</c>.
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Finalize">Finalize</see></c> invokes <c>Dispose(Boolean)</c> with
            <paramref name="disposing"/> set to <c>false</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.IHostWindow">
            <summary>
            Allows Windows Script engines to display dialogs within the host's user interface.
            </summary>
            <c><seealso cref="P:Microsoft.ClearScript.Windows.Core.WindowsScriptEngine.HostWindow"/></c>
        </member>
        <member name="P:Microsoft.ClearScript.Windows.IHostWindow.OwnerHandle">
            <summary>
            Gets the handle of an owner window for displaying dialogs on behalf of script code.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.IHostWindow.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables the host's modeless dialogs.
            </summary>
            <param name="enable"><c>True</c> to enable the host's modeless dialogs, <c>false</c> otherwise.</param>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.IWindowsScriptObject">
            <summary>
            Represents a Windows Script object.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.IWindowsScriptObject.GetUnderlyingObject">
            <summary>
            Provides access to the underlying unmanaged COM object.
            </summary>
            <returns>An object that represents the underlying unmanaged COM object.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.Nothing">
            <summary>
            Represents an empty object reference.
            </summary>
            <remarks>
            When passed to a Windows Script engine, an instance of this class is marshaled as an empty
            variant of type <c>VT_DISPATCH</c>. VBScript interprets this as the special object
            reference
            <c><see href="https://docs.microsoft.com/en-us/previous-versions//f8tbc79x(v=vs.85)">Nothing</see></c>.
            In JScript it appears as a value that is equal to, but not strictly equal to,
            <c><see href="https://developer.mozilla.org/en-US/docs/Glossary/Undefined">undefined</see></c>.
            </remarks>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.Nothing.Value">
            <summary>
            The sole instance of the <c><see cref="T:Microsoft.ClearScript.Windows.Nothing"/></c> class.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.Windows.Nothing.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <remarks>
            The <c><see cref="T:Microsoft.ClearScript.Windows.Nothing"/></c> version of this method returns "[nothing]".
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags">
            <summary>
            Defines options for initializing a new Windows Script engine instance.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.None">
            <summary>
            Specifies that no options are selected.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableDebugging">
            <summary>
            Specifies that script debugging features are to be enabled.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableJITDebugging">
            <summary>
            Specifies that Just-In-Time script debugging is to be enabled. This option is ignored
            if <c><see cref="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableDebugging"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.DisableSourceManagement">
            <summary>
            Specifies that smart source document management is to be disabled. This option is
            ignored if <c><see cref="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableDebugging"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableStandardsMode">
            <summary>
            Specifies that script language features that enhance standards compliance are to be
            enabled. This option only affects <c><see cref="T:Microsoft.ClearScript.Windows.Core.JScriptEngine"/></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.MarshalNullAsDispatch">
            <summary>
            Specifies that <c>null</c> is to be marshaled as a variant of type <c>VT_DISPATCH</c>.
            This option does not affect field, property, or method return values declared as
            <c><see cref="T:System.Object"/></c>, <c><see cref="T:System.String"/></c>, nullable <c><see cref="T:System.Boolean"/></c>, or nullable
            numeric types.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.MarshalDecimalAsCurrency">
            <summary>
            Specifies that <c><see cref="T:System.Decimal"/></c> values are to be marshaled as variants of type
            <c>VT_CY</c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.MarshalArraysByValue">
            <summary>
            Specifies that managed arrays that are passed or returned to script code are to be
            converted to script arrays and marshaled as variants of type <c>VT_ARRAY</c>. In
            VBScript these objects are the native array type. JScript code can use the
            <c><see href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/scripting-articles/y39d47w8(v=vs.84)">VBArray</see></c>
            object to access them.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.DoNotEnableVTablePatching">
            <summary>
            When <c><see cref="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.EnableStandardsMode"/></c> is specified, the ClearScript library uses
            virtual method table patching to support JScript-specific
            <c><see href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/scripting-articles/sky96ah7(v=vs.94)">IDispatchEx</see></c>
            extensions that otherwise interfere with some host object functionality. Virtual method
            table patching is a very low-level mechanism with global effect. This option specifies
            that virtual method table patching is not to be enabled on behalf of the current
            <c><see cref="T:Microsoft.ClearScript.Windows.Core.JScriptEngine"/></c> instance.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.Windows.WindowsScriptEngineFlags.MarshalDateTimeAsDate">
            <summary>
            Specifies that <c><see cref="T:System.DateTime"/></c> values are to be marshaled as variants of type
            <c>VT_DATE</c>. In VBScript these objects are the native date-time type. JScript code
            can pass them to the
            <c><see href="https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2010/dca21baa(v=vs.100)">Date</see></c>
            constructor for property access.
            </summary>
        </member>
    </members>
</doc>

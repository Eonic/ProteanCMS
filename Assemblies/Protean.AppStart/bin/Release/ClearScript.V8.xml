<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClearScript.V8</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator">
            <summary>
            Represents a fast asynchronous enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator.GetCurrent(Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the item at the current position in the collection.
            </summary>
            <param name="item">On return, contains the item at the current position in the collection.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator.MoveNextAsync">
            <summary>
            Advances the enumerator asynchronously to the next position in the collection.
            </summary>
            <returns>A task structure whose result is <c>true</c> if the enumerator was advanced to the next position, <c>false</c> if it was already at the end of the collection.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator">
            <summary>
            Represents a fast enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator.GetCurrent(Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the item at the current position in the collection.
            </summary>
            <param name="item">On return, contains the item at the current position in the collection.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next position in the collection.
            </summary>
            <returns><c>True</c> if the enumerator was advanced to the next position, <c>false</c> if it is already at the end of the collection.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties">
            <summary>
            Represents a set of dynamic properties keyed by name or index.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.DynamicPropertyNames">
            <summary>
            Enumerates the names of all existing named dynamic properties.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.DynamicPropertyIndices">
            <summary>
            Enumerates the indices of all existing indexed dynamic properties.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.GetDynamicProperty(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the value of a named dynamic property.
            </summary>
            <param name="name">The name of the dynamic property to get.</param>
            <param name="value">On return, the value of the dynamic property if it was found.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.SetDynamicProperty(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of a named dynamic property.
            </summary>
            <param name="name">The name of the dynamic property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.GetDynamicProperty(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the value of an indexed dynamic property.
            </summary>
            <param name="index">The index of the dynamic property to get.</param>
            <param name="value">On return, the value of the dynamic property if it was found.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.SetDynamicProperty(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of an indexed dynamic property.
            </summary>
            <param name="index">The index of the dynamic property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.HasDynamicProperty(System.String)">
            <summary>
            Determines whether a dynamic property with the specified name exists.
            </summary>
            <param name="name">The name of the dynamic property for which to search.</param>
            <returns><c>True</c> if the dynamic property exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.HasDynamicProperty(System.Int32)">
            <summary>
            Determines whether a dynamic property exists at the specified index.
            </summary>
            <param name="index">The index of the dynamic property for which to search.</param>
            <returns><c>True</c> if the dynamic property exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.DeleteDynamicProperty(System.String)">
            <summary>
            Deletes a named dynamic property.
            </summary>
            <param name="name">The name of the dynamic property to delete.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties.DeleteDynamicProperty(System.Int32)">
            <summary>
            Deletes an indexed dynamic property.
            </summary>
            <param name="index">The index of the dynamic property to delete.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunction">
            <summary>
            Represents a fast host function.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunction.Operations">
            <summary>
            Gets the function's operations interface.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunctionOperations">
            <summary>
            Represents the operations supported by a fast host function.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunctionOperations.Invoke(System.Boolean,Microsoft.ClearScript.V8.FastProxy.V8FastArgs@,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Invokes the function.
            </summary>
            <param name="asConstructor"><c>True</c> to invoke the function as a constructor, <c>false</c> otherwise.</param>
            <param name="args">The arguments to pass to the function.</param>
            <param name="result">On return, the function's return value.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethod">
            <summary>
            Represents a fast host method.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethod.Operations">
            <summary>
            Gets the method's operations interface.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethodOperations">
            <summary>
            Represents the operations supported by a fast host method.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethodOperations.Invoke(Microsoft.ClearScript.V8.FastProxy.V8FastArgs@,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Invokes the method.
            </summary>
            <param name="args">The arguments to pass to the method.</param>
            <param name="result">On return, the method's return value.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject">
            <summary>
            Represents a fast host object.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject.Operations">
            <summary>
            Gets the object's operations interface.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations">
            <summary>
            Represents the operations supported by a fast host object.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.GetFriendlyName(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject)">
            <summary>
            Gets a human-readable name for the specified object.
            </summary>
            <param name="instance">The object for which to get a human-readable name.</param>
            <returns>A human-readable name for the specified object.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.GetProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastResult@,System.Boolean@)">
            <summary>
            Gets the value of a named property.
            </summary>
            <param name="instance">The object to search for the property.</param>
            <param name="name">The name of the property to get.</param>
            <param name="value">On return, the value of the property if it was found.</param>
            <param name="isCacheable">On return, <c>true</c> if the property value is a cacheable constant, <c>false</c> otherwise.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.SetProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of a named property.
            </summary>
            <param name="instance">The object whose property to set.</param>
            <param name="name">The name of the property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.QueryProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.String)">
            <summary>
            Gets the attributes of a named property.
            </summary>
            <param name="instance">The object to search for the property.</param>
            <param name="name">The name of the property to query.</param>
            <returns>A set of property attributes.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.DeleteProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.String)">
            <summary>
            Deletes a named property.
            </summary>
            <param name="instance">The object whose property to delete.</param>
            <param name="name">The name of the property to delete.</param>
            <returns><c>True</c> if the property was deleted or does not exist; <c>false</c> if the property exists but is not deletable.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.GetPropertyNames(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject)">
            <summary>
            Enumerates the names of all existing named properties.
            </summary>
            <param name="instance">The object to search for named properties.</param>
            <returns>A collection containing the names of all existing named properties.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.GetProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the value of an indexed property.
            </summary>
            <param name="instance">The object to search for the property.</param>
            <param name="index">The index of the property to get.</param>
            <param name="value">On return, the value of the property if it was found.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.SetProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of an indexed property.
            </summary>
            <param name="instance">The object whose property to set.</param>
            <param name="index">The index of the property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.QueryProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.Int32)">
            <summary>
            Gets the attributes of an indexed property.
            </summary>
            <param name="instance">The object to search for the property.</param>
            <param name="index">The index of the property to query.</param>
            <returns>A set of property attributes.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.DeleteProperty(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject,System.Int32)">
            <summary>
            Deletes an indexed property.
            </summary>
            <param name="instance">The object whose property to delete.</param>
            <param name="index">The index of the property to delete.</param>
            <returns><c>True</c> if the property was deleted or does not exist; <c>false</c> if the property exists but is not deletable.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.GetPropertyIndices(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject)">
            <summary>
            Enumerates the indices of all existing indexed properties.
            </summary>
            <param name="instance">The object to search for indexed properties.</param>
            <returns>A collection containing the indices of all existing indexed properties.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.CreateEnumerator(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject)">
            <summary>
            Creates a fast enumerator that iterates through the object's contents.
            </summary>
            <param name="instance">The object for which to create a fast enumerator.</param>
            <returns>A fast enumerator for the specified object's contents.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations.CreateAsyncEnumerator(Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject)">
            <summary>
            Creates a fast asynchronous enumerator that iterates through the object's contents.
            </summary>
            <param name="instance">The object for which to create a fast asynchronous enumerator.</param>
            <returns>A fast asynchronous enumerator for the specified object's contents.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastArg">
            <summary>
            Represents an argument passed to a fast host object from script code.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastArg.IsFalsy">
            <summary>
            Determines whether the argument is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy">falsy</see>.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastArg.IsTruthy">
            <summary>
            Determines whether the argument is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">truthy</see>.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastArg.IsUndefined">
            <summary>
            Determines whether the argument is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</see></c>.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastArg.IsNull">
            <summary>
            Determines whether the argument is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null">null</see></c>.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Boolean@)">
            <summary>
            Gets the <c><see cref="T:System.Boolean"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Boolean"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Char@)">
            <summary>
            Gets the <c><see cref="T:System.Char"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Char"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.SByte@)">
            <summary>
            Gets the <c><see cref="T:System.SByte"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.SByte"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Byte@)">
            <summary>
            Gets the <c><see cref="T:System.Byte"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Byte"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Int16@)">
            <summary>
            Gets the <c><see cref="T:System.Int16"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Int16"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.UInt16@)">
            <summary>
            Gets the <c><see cref="T:System.UInt16"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.UInt16"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Int32@)">
            <summary>
            Gets the <c><see cref="T:System.Int32"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Int32"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.UInt32@)">
            <summary>
            Gets the <c><see cref="T:System.UInt32"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.UInt32"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Int64@)">
            <summary>
            Gets the <c><see cref="T:System.Int64"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Int64"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.UInt64@)">
            <summary>
            Gets the <c><see cref="T:System.UInt64"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.UInt64"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Single@)">
            <summary>
            Gets the <c><see cref="T:System.Single"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Single"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Double@)">
            <summary>
            Gets the <c><see cref="T:System.Double"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Double"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Decimal@)">
            <summary>
            Gets the <c><see cref="T:System.Decimal"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Decimal"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.String@)">
            <summary>
            Gets the string value of the argument if possible.
            </summary>
            <param name="value">On return, the string value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.ReadOnlySpan{System.Char}@)">
            <summary>
            Gets the string value of the argument as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c> if possible.
            </summary>
            <param name="value">On return, the string value of the argument as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.DateTime@)">
            <summary>
            Gets the <c><see cref="T:System.DateTime"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.DateTime"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet(System.Numerics.BigInteger@)">
            <summary>
            Gets the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument if possible.
            </summary>
            <param name="value">On return, the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet``1(System.Nullable{``0}@)">
            <summary>
            Gets a nullable value of the given underlying type from the argument if possible.
            </summary>
            <typeparam name="T">The underlying type of the nullable value to get.</typeparam>
            <param name="value">On return, a nullable value of underlying type <typeparamref name="T"/> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.TryGet``1(``0@)">
            <summary>
            Gets a value of the given type from the argument if possible.
            </summary>
            <typeparam name="T">The type of value to get.</typeparam>
            <param name="value">On return, a value of type <typeparamref name="T"/> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetBoolean(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Boolean"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Boolean"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetChar(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Char"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Char"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetSByte(System.String)">
            <summary>
            Gets the <c><see cref="T:System.SByte"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.SByte"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetByte(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Byte"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Byte"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetInt16(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int16"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int16"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetUInt16(System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt16"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt16"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetInt32(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int32"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int32"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetUInt32(System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt32"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt32"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetInt64(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int64"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int64"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetUInt64(System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt64"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt64"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetSingle(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Single"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Single"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetDouble(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Double"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Double"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetDecimal(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Decimal"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Decimal"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetString(System.String)">
            <summary>
            Gets the string value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The string value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetCharSpan(System.String)">
            <summary>
            Gets the string value of the argument as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The string value of the argument as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetDateTime(System.String)">
            <summary>
            Gets the <c><see cref="T:System.DateTime"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.DateTime"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetBigInteger(System.String)">
            <summary>
            Gets the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument.
            </summary>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.GetNullable``1(System.String)">
            <summary>
            Gets a nullable value of the given underlying type from the argument.
            </summary>
            <typeparam name="T">The underlying type of the nullable value to get.</typeparam>
            <param name="name">An optional argument or property name.</param>
            <returns>A nullable value of underlying type <typeparamref name="T"/>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArg.Get``1(System.String)">
            <summary>
            Gets a value of the given type from the argument.
            </summary>
            <typeparam name="T">The type of value to get.</typeparam>
            <param name="name">An optional argument or property name.</param>
            <returns>A value of type <typeparamref name="T"/>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastArgs">
            <summary>
            Represents a list of arguments passed to a fast host object from script code.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.Count">
            <summary>
            Gets the number of arguments in the list.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.IsFalsy(System.Int32)">
            <summary>
            Determines whether the argument at the specified index is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy">falsy</see>.
            </summary>
            <param name="index">The argument index.</param>
            <returns><c>True</c> if the argument at the specified index is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy">falsy</see>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.IsTruthy(System.Int32)">
            <summary>
            Determines whether the argument at the specified index is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">truthy</see>.
            </summary>
            <param name="index">The argument index.</param>
            <returns><c>True</c> if the argument at the specified index is <see href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">truthy</see>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.IsUndefined(System.Int32)">
            <summary>
            Determines whether the argument at the specified index is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</see></c>.
            </summary>
            <param name="index">The argument index.</param>
            <returns><c>True</c> if the argument at the specified index is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</see></c>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.IsNull(System.Int32)">
            <summary>
            Determines whether the argument at the specified index is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null">null</see></c>.
            </summary>
            <param name="index">The argument index.</param>
            <returns><c>True</c> if the argument at the specified index is <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</see></c>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Boolean@)">
            <summary>
            Gets the <c><see cref="T:System.Boolean"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Boolean"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Char@)">
            <summary>
            Gets the <c><see cref="T:System.Char"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Char"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.SByte@)">
            <summary>
            Gets the <c><see cref="T:System.SByte"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.SByte"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Byte@)">
            <summary>
            Gets the <c><see cref="T:System.Byte"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Byte"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Int16@)">
            <summary>
            Gets the <c><see cref="T:System.Int16"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Int16"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.UInt16@)">
            <summary>
            Gets the <c><see cref="T:System.UInt16"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.UInt16"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Int32@)">
            <summary>
            Gets the <c><see cref="T:System.Int32"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Int32"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.UInt32@)">
            <summary>
            Gets the <c><see cref="T:System.UInt32"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.UInt32"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Int64@)">
            <summary>
            Gets the <c><see cref="T:System.Int64"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Int64"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.UInt64@)">
            <summary>
            Gets the <c><see cref="T:System.UInt64"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.UInt64"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Single@)">
            <summary>
            Gets the <c><see cref="T:System.Single"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Single"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Double@)">
            <summary>
            Gets the <c><see cref="T:System.Double"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Double"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Decimal@)">
            <summary>
            Gets the <c><see cref="T:System.Decimal"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Decimal"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.String@)">
            <summary>
            Gets the string value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the string value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Gets the string value of the argument at the specified index as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c> if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the string value of the argument at the specified index as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.DateTime@)">
            <summary>
            Gets the <c><see cref="T:System.DateTime"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.DateTime"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet(System.Int32,System.Numerics.BigInteger@)">
            <summary>
            Gets the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument at the specified index if possible.
            </summary>
            <param name="index">The argument index.</param>
            <param name="value">On return, the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument at the specified index if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet``1(System.Int32,System.Nullable{``0}@)">
            <summary>
            Gets a nullable value of the given underlying type from the argument at the specified index if possible.
            </summary>
            <typeparam name="T">The underlying type of the nullable value to get.</typeparam>
            <param name="index">The argument index.</param>
            <param name="value">On return, a nullable value of underlying type <typeparamref name="T"/> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.TryGet``1(System.Int32,``0@)">
            <summary>
            Gets a value of the given type from the argument at the specified index if possible.
            </summary>
            <typeparam name="T">The type of value to get.</typeparam>
            <param name="index">The argument index.</param>
            <param name="value">On return, a value of type <typeparamref name="T"/> if the operation succeeded.</param>
            <returns><c>True</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetBoolean(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Boolean"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Boolean"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetChar(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Char"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Char"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetSByte(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.SByte"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.SByte"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetByte(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Byte"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Byte"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetInt16(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int16"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int16"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetUInt16(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt16"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt16"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetInt32(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int32"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int32"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetUInt32(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt32"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt32"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetInt64(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Int64"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Int64"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetUInt64(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.UInt64"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.UInt64"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetSingle(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Single"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Single"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetDouble(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Double"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Double"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetDecimal(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Decimal"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Decimal"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetString(System.Int32,System.String)">
            <summary>
            Gets the string value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The string value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetCharSpan(System.Int32,System.String)">
            <summary>
            Gets the string value of the argument at the specified index as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The string value of the argument at the specified index as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetDateTime(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.DateTime"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.DateTime"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetBigInteger(System.Int32,System.String)">
            <summary>
            Gets the <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument at the specified index.
            </summary>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>The <c><see cref="T:System.Numerics.BigInteger"/></c> value of the argument at the specified index.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.GetNullable``1(System.Int32,System.String)">
            <summary>
            Gets a nullable value of the given underlying type from the argument at the specified index.
            </summary>
            <typeparam name="T">The underlying type of the nullable value to get.</typeparam>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>A nullable value of underlying type <typeparamref name="T"/>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastArgs.Get``1(System.Int32,System.String)">
            <summary>
            Gets a value of the given type from the argument at the specified index.
            </summary>
            <typeparam name="T">The type of value to get.</typeparam>
            <param name="index">The argument index.</param>
            <param name="name">An optional argument or property name.</param>
            <returns>A value of type <typeparamref name="T"/>.</returns>
            <remarks>
            This method throws an exception if the operation fails.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator`1">
            <summary>
            Represents a method that prepares a fast host object configuration.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <param name="configuration">The configuration associated with <typeparamref name="TObject"/>.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFieldAccessor`2">
            <summary>
            Represents a method that provides access to a field within a fast host object.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <typeparam name="TField">The field type.</typeparam>
            <param name="instance">The object whose field to access.</param>
            <returns>A reference to the field.</returns>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyGetter`1">
            <summary>
            Represents a method that gets the value of a fast host property.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <param name="instance">The object to search for the property.</param>
            <param name="value">On return, the property value if it was found.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertySetter`1">
            <summary>
            Represents a method that sets the value of a fast host property.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <param name="instance">The object whose property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker`1">
            <summary>
            Represents a method that invokes a fast host method.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <param name="instance">The object whose method to invoke.</param>
            <param name="args">The arguments to pass to the method.</param>
            <param name="result">On return, the method's return value.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker">
            <summary>
            Represents a method that invokes a fast host function.
            </summary>
            <param name="asConstructor"><c>True</c> to invoke the function as a constructor, <c>false</c> otherwise.</param>
            <param name="args">The arguments to pass to the function.</param>
            <param name="result">On return, the function's return value.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject"/></c> with a shared configuration and support for dynamic properties.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <remarks>
            This class is a generic base for fast host object classes derived from it via the
            <see href="https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern">Curiously Recurring Template Pattern (CRTP)</see>.
            It uses a shared instance of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1"/></c>
            for each unique type argument. Derived classes are therefore advised to use a static
            constructor to invoke the <c><see cref="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.Configure(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})"/></c> method.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.#ctor">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1"/></c> instance.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.Configure(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})">
            <summary>
            Prepares the shared configuration associated with <typeparamref name="TObject"/>.
            </summary>
            <param name="configurator">The configuration callback.</param>
            <remarks>
            Derived classes are advised to invoke this method from a static constructor. Once
            prepared, a fast host object configuration cannot be modified.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.DynamicPropertyNames">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.DynamicPropertyIndices">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.GetDynamicProperty(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the value of a named dynamic property.
            </summary>
            <param name="name">The name of the dynamic property to get.</param>
            <param name="value">On return, the value of the dynamic property if it was found.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.SetDynamicProperty(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of a named dynamic property.
            </summary>
            <param name="name">The name of the dynamic property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.GetDynamicProperty(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastResult@)">
            <summary>
            Gets the value of an indexed dynamic property.
            </summary>
            <param name="index">The index of the dynamic property to get.</param>
            <param name="value">On return, the value of the dynamic property if it was found.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.SetDynamicProperty(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastArg@)">
            <summary>
            Sets the value of an indexed dynamic property.
            </summary>
            <param name="index">The index of the dynamic property to set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.HasDynamicProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.HasDynamicProperty(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.DeleteDynamicProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostDynamicObject`1.DeleteDynamicProperty(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunction"/></c> with a private configuration.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance.
            </summary>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified name.
            </summary>
            <param name="name">The function name.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified required argument count.
            </summary>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified configuration callback.
            </summary>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified name and required argument count.
            </summary>
            <param name="name">The function name.</param>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified name and configuration callback.
            </summary>
            <param name="name">The function name.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified required argument count and configuration callback.
            </summary>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.#ctor(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction"/></c> instance with the specified name, required argument count, and configuration callback.
            </summary>
            <param name="name">The function name.</param>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.VerifyFunctionCall(System.Boolean)">
            <summary>
            Verifies that a fast host function was invoked as a function and not as a constructor.
            </summary>
            <param name="asConstructor"><c>True</c> if the function was invoked as a constructor, <c>false</c> otherwise.</param>
            <remarks>
            This is a simple utility method that checks <paramref name="asConstructor"/> and throws
            an exception if it is <c>true</c>. It is intended for use within fast host function
            invocation callbacks.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunction.VerifyConstructorCall(System.Boolean)">
            <summary>
            Verifies that a fast host function was invoked as a constructor and not as a function.
            </summary>
            <param name="asConstructor"><c>True</c> if the function was invoked as a constructor, <c>false</c> otherwise.</param>
            <remarks>
            This is a simple utility method that checks <paramref name="asConstructor"/> and throws
            an exception if it is <c>false</c>. It is intended for use within fast host function
            invocation callbacks.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostFunctionOperations"/></c> based on a private configuration.
            </summary>
            <typeparam name="TFunction">The fast host function type.</typeparam>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance.
            </summary>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified name.
            </summary>
            <param name="name">The function name.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified required argument count.
            </summary>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified configuration callback.
            </summary>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified name and required argument count.
            </summary>
            <param name="name">The function name.</param>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified name and configuration callback.
            </summary>
            <param name="name">The function name.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified required argument count and configuration callback.
            </summary>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1.#ctor(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionInvoker)">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostFunctionOperations`1"/></c> instance with the specified name, required argument count, and configuration callback.
            </summary>
            <param name="name">The function name.</param>
            <param name="requiredArgCount">The required argument count for the function.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The function invocation callback.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethod"/></c> with a private configuration.
            </summary>
            <typeparam name="TObject">The fast host object type that supports the method.</typeparam>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1.#ctor(`0,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1"/></c> instance.
            </summary>
            <param name="parent">The object whose method the instance represents.</param>
            <param name="name">The method name.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1.#ctor(`0,System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1"/></c> instance with the specified required argument count.
            </summary>
            <param name="parent">The object whose method the instance represents.</param>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1.#ctor(`0,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod{`0}},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1"/></c> instance with the specified configuration callback.
            </summary>
            <param name="parent">The object whose method the instance represents.</param>
            <param name="name">The method name.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1.#ctor(`0,System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod{`0}},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod`1"/></c> instance with the specified required argument count and configuration callback.
            </summary>
            <param name="parent">The object whose method the instance represents.</param>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostMethodOperations"/></c> based on a private configuration.
            </summary>
            <typeparam name="TObject">The fast host object type that supports the method.</typeparam>
            <typeparam name="TMethod">The fast host method type.</typeparam>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2.#ctor(`0,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2"/></c> instance.
            </summary>
            <param name="target">The object whose method the instance supports.</param>
            <param name="name">The method name.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2.#ctor(`0,System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2"/></c> instance with the specified required argument count.
            </summary>
            <param name="target">The object whose method the instance supports.</param>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2.#ctor(`0,System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`1},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2"/></c> instance with the specified configuration callback.
            </summary>
            <param name="target">The object whose method the instance supports.</param>
            <param name="name">The method name.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2.#ctor(`0,System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`1},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodOperations`2"/></c> instance with the specified required argument count and configuration callback.
            </summary>
            <param name="target">The object whose method the instance supports.</param>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
            <param name="invoker">The method invocation callback.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObject`1">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObject"/></c> with a shared configuration.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <remarks>
            This class is a generic base for fast host object classes derived from it via the
            <see href="https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern">Curiously Recurring Template Pattern (CRTP)</see>.
            It uses a shared instance of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1"/></c>
            for each unique type argument. Derived classes are therefore advised to use a static
            constructor to invoke the <c><see cref="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObject`1.Configure(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})"/></c> method.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObject`1.#ctor">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObject`1"/></c> instance.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObject`1.Configure(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})">
            <summary>
            Prepares the shared configuration associated with <typeparamref name="TObject"/>.
            </summary>
            <param name="configurator">The configuration callback.</param>
            <remarks>
            Derived classes are advised to invoke this method from a static constructor. Once
            prepared, a fast host object configuration cannot be modified.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1">
            <summary>
            Represents a fast host object configuration.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
            <remarks>
            This class provides a way to configure the scriptable capabilities of a fast host object or
            type. It is not a required part of the interface between V8 and fast host objects, but it
            is used extensively by ClearScript's fast host object implementation infrastructure.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.#ctor">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1"/></c> instance.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.EnumerateIndexedProperties">
            <summary>
            Controls whether indexed properties are enumerable.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyGetter``1(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFieldAccessor{`0,``0})">
            <summary>
            Adds a getter for a field-backed read-only property.
            </summary>
            <typeparam name="TField">The field type.</typeparam>
            <param name="name">The property name.</param>
            <param name="accessor">A callback that provides access to the field.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyGetter``1(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFieldAccessor{`0,``0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags)">
            <summary>
            Adds a getter for a field-backed read-only property with the specified attributes.
            </summary>
            <typeparam name="TField">The field type.</typeparam>
            <param name="name">The property name.</param>
            <param name="accessor">A callback that provides access to the field.</param>
            <param name="flags">The attributes of the property configured by this method.</param>
            <remarks>
            In the context of this method, the only effective property attributes are
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Cacheable"/></c> and
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Enumerable"/></c>. Properties configured by this
            method cannot be assigned or deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyGetter(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyGetter{`0})">
            <summary>
            Adds a getter for a read-only property.
            </summary>
            <param name="name">The property name.</param>
            <param name="getter">A callback that gets the property value.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyGetter(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyGetter{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags)">
            <summary>
            Adds a getter for a read-only property with the specified attributes.
            </summary>
            <param name="name">The property name.</param>
            <param name="getter">A callback that gets the property value.</param>
            <param name="flags">The attributes of the property configured by this method.</param>
            <remarks>
            In the context of this method, the only effective property attributes are
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Cacheable"/></c> and
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Enumerable"/></c>. Properties configured by this
            method cannot be assigned or deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyAccessors``1(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFieldAccessor{`0,``0})">
            <summary>
            Adds accessors for a field-backed property.
            </summary>
            <typeparam name="TField">The field type.</typeparam>
            <param name="name">The property name.</param>
            <param name="accessor">A callback that provides access to the field.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyAccessors``1(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostFieldAccessor{`0,``0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags)">
            <summary>
            Adds accessors for a field-backed property with the specified attributes.
            </summary>
            <typeparam name="TField">The field type.</typeparam>
            <param name="name">The property name.</param>
            <param name="accessor">A callback that provides access to the field.</param>
            <param name="flags">The attributes of the property configured by this method.</param>
            <remarks>
            In the context of this method, the only effective property attributes are
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Cacheable"/></c> and
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Enumerable"/></c>. Properties configured by this
            method cannot be deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyAccessors(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyGetter{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertySetter{`0})">
            <summary>
            Adds accessors for a property.
            </summary>
            <param name="name">The property name.</param>
            <param name="getter">A callback that gets the property value.</param>
            <param name="setter">A callback that sets the property value.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddPropertyAccessors(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyGetter{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertySetter{`0},Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags)">
            <summary>
            Adds accessors for a property with the specified attributes.
            </summary>
            <param name="name">The property name.</param>
            <param name="getter">A callback that gets the property value.</param>
            <param name="setter">A callback that sets the property value.</param>
            <param name="flags">The attributes of the property configured by this method.</param>
            <remarks>
            In the context of this method, the only effective property attributes are
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Cacheable"/></c> and
            <c><see cref="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Enumerable"/></c>. Properties configured by this
            method cannot be deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddMethodGetter(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Adds a getter for a method.
            </summary>
            <param name="name">The method name.</param>
            <param name="invoker">The method invocation callback.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddMethodGetter(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Adds a getter for a method with the specified required argument count.
            </summary>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="invoker">The method invocation callback.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddMethodGetter(System.String,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod{`0}},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Adds a getter for a method with the specified configuration callback.
            </summary>
            <param name="name">The method name.</param>
            <param name="configurator">A callback for preparing the method's configuration.</param>
            <param name="invoker">The method invocation callback.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.AddMethodGetter(System.String,System.Int32,Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{Microsoft.ClearScript.V8.FastProxy.V8FastHostMethod{`0}},Microsoft.ClearScript.V8.FastProxy.V8FastHostMethodInvoker{`0})">
            <summary>
            Adds a getter for a method with the specified required argument count and configuration callback.
            </summary>
            <param name="name">The method name.</param>
            <param name="requiredArgCount">The required argument count for the method.</param>
            <param name="configurator">A callback for preparing the method's configuration.</param>
            <param name="invoker">The method invocation callback.</param>
            <remarks>
            Properties configured by this method are not enumerable and cannot be assigned or
            deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetDynamicPropertiesGetter(System.Func{`0,Microsoft.ClearScript.V8.FastProxy.IV8FastHostDynamicProperties})">
            <summary>
            Sets a callback that gets the dynamic properties of a <typeparamref name="TObject"/> instance.
            </summary>
            <param name="getter">A callback that gets the dynamic properties of a <typeparamref name="TObject"/> instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetEnumeratorFactory(System.Func{`0,System.Collections.IEnumerator})">
            <summary>
            Sets a callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.IEnumerator"/></c> form.
            </summary>
            <param name="factory">A callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.IEnumerator"/></c> form.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetEnumeratorFactory``1(System.Func{`0,System.Collections.Generic.IEnumerator{``0}})">
            <summary>
            Sets a callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.Generic.IEnumerator`1"/></c> form.
            </summary>
            <typeparam name="TItem">The enumerator's item type.</typeparam>
            <param name="factory">A callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.Generic.IEnumerator`1"/></c> form.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetEnumeratorFactory(System.Func{`0,Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator})">
            <summary>
            Sets a callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator"/></c> form.
            </summary>
            <param name="factory">A callback that creates an enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastEnumerator"/></c> form.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetAsyncEnumeratorFactory``1(System.Func{`0,System.Collections.Generic.IAsyncEnumerator{``0}})">
            <summary>
            Sets a callback that creates an asynchronous enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.Generic.IAsyncEnumerator`1"/></c> form.
            </summary>
            <typeparam name="TItem">The asynchronous enumerator's item type.</typeparam>
            <param name="factory">A callback that creates an asynchronous enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:System.Collections.Generic.IAsyncEnumerator`1"/></c> form.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfiguration`1.SetAsyncEnumeratorFactory(System.Func{`0,Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator})">
            <summary>
            Sets a callback that creates an asynchronous enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator"/></c> form.
            </summary>
            <param name="factory">A callback that creates an asynchronous enumerator for a <typeparamref name="TObject"/> instance in <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastAsyncEnumerator"/></c> form.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1">
            <summary>
            Provides an implementation of <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.IV8FastHostObjectOperations"/></c> based on a private configuration.
            </summary>
            <typeparam name="TObject">The fast host object type.</typeparam>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1.#ctor">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1"/></c> instance.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1.#ctor(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1"/></c> instance with the specified configuration callback.
            </summary>
            <param name="configurator">A callback for preparing the configuration associated with the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1.Configure(Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectConfigurator{`0})">
            <summary>
            Prepares the configuration associated with the <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1"/></c> instance.
            </summary>
            <param name="configurator">A callback for preparing the configuration associated with the <c><see cref="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostObjectOperations`1"/></c> instance.</param>
            <remarks>
            Once prepared, a fast host object configuration cannot be modified.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags">
            <summary>
            Defines fast host property attributes.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.None">
            <summary>
            Indicates that no attributes are present.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Available">
            <summary>
            Indicates that the property exists.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Cacheable">
            <summary>
            Indicates that the property value is a constant that may be cached for faster retrieval.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Enumerable">
            <summary>
            Indicates that the property is enumerable via mechanisms such as <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in">for...in</see></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Writable">
            <summary>
            Indicates that the property can be assigned.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.FastProxy.V8FastHostPropertyFlags.Deletable">
            <summary>
            Indicates that the property can be deleted.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.FastProxy.V8FastResult">
            <summary>
            Represents a result returned from a fast host property getter, method, or function.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.FastProxy.V8FastResult.IsSet">
            <summary>
            Determines whether the result has been set.
            </summary>
            <remarks>
            Once set, a result cannot be modified.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.SetUndefined">
            <summary>
            Sets the result to <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined">undefined</see></c>.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.SetNull">
            <summary>
            Sets the result to <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/null">null</see></c>.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Boolean)">
            <summary>
            Sets the result to a <c><see cref="T:System.Boolean"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Boolean"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Char)">
            <summary>
            Sets the result to a <c><see cref="T:System.Char"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Char"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.SByte)">
            <summary>
            Sets the result to a <c><see cref="T:System.SByte"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.SByte"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Byte)">
            <summary>
            Sets the result to a <c><see cref="T:System.Byte"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Byte"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Int16)">
            <summary>
            Sets the result to a <c><see cref="T:System.Int16"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Int16"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.UInt16)">
            <summary>
            Sets the result to a <c><see cref="T:System.UInt16"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.UInt16"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Int32)">
            <summary>
            Sets the result to a <c><see cref="T:System.Int32"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Int32"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.UInt32)">
            <summary>
            Sets the result to a <c><see cref="T:System.UInt32"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.UInt32"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Int64)">
            <summary>
            Sets the result to a <c><see cref="T:System.Int64"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Int64"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.UInt64)">
            <summary>
            Sets the result to a <c><see cref="T:System.UInt64"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.UInt64"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Single)">
            <summary>
            Sets the result to a <c><see cref="T:System.Single"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Single"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Double)">
            <summary>
            Sets the result to a <c><see cref="T:System.Double"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Double"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Decimal)">
            <summary>
            Sets the result to a <c><see cref="T:System.Decimal"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Decimal"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.String)">
            <summary>
            Sets the result to a string value.
            </summary>
            <param name="value">The string value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.ReadOnlySpan{System.Char})">
            <summary>
            Sets the result to a string value, specified as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.
            </summary>
            <param name="value">The string value to assign to the result, specified as a <c><see href="https://learn.microsoft.com/en-us/dotnet/api/system.readonlyspan-1">ReadOnlySpan&#x3C;char&#x3E;</see></c>.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.DateTime)">
            <summary>
            Sets the result to a <c><see cref="T:System.DateTime"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.DateTime"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set(System.Numerics.BigInteger)">
            <summary>
            Sets the result to a <c><see cref="T:System.Numerics.BigInteger"/></c> value.
            </summary>
            <param name="value">The <c><see cref="T:System.Numerics.BigInteger"/></c> value to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set``1(System.Nullable{``0})">
            <summary>
            Sets the result to a nullable value of the given underlying type.
            </summary>
            <typeparam name="T">The underlying type of the nullable value to assign.</typeparam>
            <param name="value">A nullable value of underlying type <typeparamref name="T"/> to assign to the result.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.FastProxy.V8FastResult.Set``1(``0)">
            <summary>
            Sets the result to a value of the given type.
            </summary>
            <typeparam name="T">The type of value to assign to the result.</typeparam>
            <param name="value">A value of type <typeparamref name="T"/> to assign to the result.</param>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CacheKind">
            <summary>
            Defines caching options for V8 script compilation.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheKind.None">
            <summary>
            Specifies that no cache data is to be generated or consumed during V8 script
            compilation. This option results in the most efficient script compilation when no cache
            data is available.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheKind.Parser">
            <summary>
            Selects parser caching. Parser cache data is smaller and less expensive to generate
            than code cache data, but it is less effective at accelerating recompilation.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheKind.Code">
            <summary>
            Selects code caching. Code cache data is larger and more expensive to generate than
            parser cache data, but it is more effective at accelerating recompilation.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CacheResult">
            <summary>
            Defines cache data processing results for V8 script compilation.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheResult.Disabled">
            <summary>
            Indicates that cache data processing was disabled because the caller specified
            <c><see cref="T:Microsoft.ClearScript.V8.V8CacheKind">V8CacheKind.None</see></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheResult.Accepted">
            <summary>
            Indicates that the provided cache data was accepted and used to accelerate script
            compilation.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheResult.Verified">
            <summary>
            Indicates that script compilation was bypassed because a suitable compiled script was
            found in the V8 runtime's memory, but the provided cache data was verified to be
            correct.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheResult.Updated">
            <summary>
            Indicates that the provided cache data was updated because it was empty, stale, or
            invalid.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CacheResult.UpdateFailed">
            <summary>
            Indicates that the provided cache data was empty, stale, or invalid, but new cache data
            could not be generated, and no additional information was provided by the V8 runtime.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CpuProfile">
            <summary>
            Represents a V8 CPU profile.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Name">
            <summary>
            Gets the profile's name.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.StartTimestamp">
            <summary>
            Gets the profile's starting timestamp in microseconds.
            </summary>
            <remarks>
            The timestamp specifies an offset relative to an unspecified moment in the past. All
            timestamps within the profile are relative to the same moment.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.EndTimestamp">
            <summary>
            Gets the profile's ending timestamp in microseconds.
            </summary>
            <remarks>
            The timestamp specifies an offset relative to an unspecified moment in the past. All
            timestamps within the profile are relative to the same moment.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.RootNode">
            <summary>
            Gets the root node of the profile's call tree.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Samples">
            <summary>
            Gets the profile's sample collection.
            </summary>
            <remarks>
            This property returns <c>null</c> if the profile contains no samples.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8CpuProfile.ToJson">
            <summary>
            Returns a JSON representation of the profile.
            </summary>
            <remarks>
            See the
            <see href="https://github.com/v8/v8/blob/4b9b23521e6fd42373ebbcb20ebe03bf445494f9/src/inspector/js_protocol-1.3.json">V8 Inspector JSON Protocol</see>
            for schema details.
            </remarks>
            <returns>A JSON representation of the profile in V8 Inspector format.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8CpuProfile.WriteJson(System.IO.TextWriter)">
            <summary>
            Writes a JSON representation of the profile to the given text writer.
            </summary>
            <param name="writer">The text writer to which to write the profile.</param>
            <remarks>
            See the
            <see href="https://github.com/v8/v8/blob/4b9b23521e6fd42373ebbcb20ebe03bf445494f9/src/inspector/js_protocol-1.3.json">V8 Inspector JSON Protocol</see>
            for schema details.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CpuProfile.Node">
            <summary>
            Represents a node in a V8 CPU profile's call tree.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.NodeId">
            <summary>
            Gets the node's numeric identifier.
            </summary>
            <remarks>
            This value is unique within the profile.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.ScriptId">
            <summary>
            Gets the numeric identifier of the document containing the node's script function.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.ScriptName">
            <summary>
            Gets the name or URL of the document containing the node's script function.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.FunctionName">
            <summary>
            Gets the name of the node's script function.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.LineNumber">
            <summary>
            Gets the 1-based line number of the start of the node's script function.
            </summary>
            <remarks>
            A value of zero indicates that no line number is available.
            </remarks>
            <c><seealso cref="T:Microsoft.ClearScript.V8.V8CpuProfileFlags"/></c>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.ColumnNumber">
            <summary>
            Gets the 1-based column number of the start of the node's script function.
            </summary>
            <remarks>
            A value of zero indicates that no column number is available.
            </remarks>
            <c><seealso cref="T:Microsoft.ClearScript.V8.V8CpuProfileFlags"/></c>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.HitCount">
            <summary>
            Gets the node's hit count.
            </summary>
            <remarks>
            This value represents the number of times the CPU profiler observed the node's
            script function at the top of the call stack.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.BailoutReason">
            <summary>
            Gets an optional string describing the reason why the node's script function was not optimized.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.HitLines">
            <summary>
            Gets the node's hit line collection.
            </summary>
            <remarks>
            This property returns <c>null</c> if the node contains no hit lines.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Node.ChildNodes">
            <summary>
            Gets the node's child node collection.
            </summary>
            <remarks>
            This property returns <c>null</c> if the node has no child nodes.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CpuProfile.Node.HitLine">
            <summary>
            Represents a script line observed by the V8 CPU profiler.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CpuProfile.Node.HitLine.LineNumber">
            <summary>
            Gets the 1-based line number.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CpuProfile.Node.HitLine.HitCount">
            <summary>
            Gets the hit count for the script line.
            </summary>
            <remarks>
            This value represents the number of times the CPU profiler observed the current
            script line at the top of the call stack.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CpuProfile.Sample">
            <summary>
            Represents a V8 CPU profile sample.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Sample.Node">
            <summary>
            Gets the sample's node within the profile's call tree.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8CpuProfile.Sample.Timestamp">
            <summary>
            Gets the sample's timestamp in microseconds.
            </summary>
            <remarks>
            The timestamp specifies an offset relative to an unspecified moment in the past. All
            timestamps within the profile are relative to the same moment.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8CpuProfileFlags">
            <summary>
            Defines options for creating a V8 CPU profile.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CpuProfileFlags.None">
            <summary>
            Specifies that no options are selected.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8CpuProfileFlags.EnableSampleCollection">
            <summary>
            Specifies that automatic sample collection is to be enabled.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8GlobalFlags">
            <summary>
            Defines global V8 options.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8GlobalFlags.None">
            <summary>
            Specifies that no options are selected.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8GlobalFlags.EnableTopLevelAwait">
            <summary>
            Specifies that <see href="https://github.com/tc39/proposal-top-level-await">Top-Level Await</see> is to be enabled.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8GlobalFlags.DisableJITCompilation">
            <summary>
            Specifies that just-in-time compilation is to be disabled.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8GlobalFlags.DisableBackgroundWork">
            <summary>
            Specifies that background work is to be disabled. By default, V8 performs various tasks
            in the background, accelerating garbage collection, just-in-time compilation, and other
            activities. Use this option if you encounter issues related to V8's background work.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8RuntimeViolationPolicy">
            <summary>
            Defines options for V8 runtime behavior in response to a violation.
            </summary>
            <c><seealso cref="P:Microsoft.ClearScript.V8.V8Runtime.MaxHeapSize"/></c>
            <c><seealso cref="P:Microsoft.ClearScript.V8.V8ScriptEngine.MaxRuntimeHeapSize"/></c>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeViolationPolicy.Interrupt">
            <summary>
            Specifies that the runtime is to interrupt script execution and throw a managed
            exception. Additionally, further script execution is to be blocked until the host sets
            the exceeded limit to a new value. This is the default behavior and the most effective
            option for preventing process termination.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeViolationPolicy.Exception">
            <summary>
            Specifies that the runtime is to throw a script exception and disable monitoring until
            the host sets the exceeded limit to a new value. This option is less effective at
            preventing process termination than <c><see cref="F:Microsoft.ClearScript.V8.V8RuntimeViolationPolicy.Interrupt"/></c>, but it is more friendly to
            asynchronous JavaScript, which relies on post-error processing for mechanisms such as
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">promise</see>
            rejection.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8Runtime">
            <summary>
            Represents an instance of the V8 runtime.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor">
            <summary>
            Initializes a new V8 runtime instance.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String)">
            <summary>
            Initializes a new V8 runtime instance with the specified name.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints)">
            <summary>
            Initializes a new V8 runtime instance with the specified resource constraints.
            </summary>
            <param name="constraints">Resource constraints for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints)">
            <summary>
            Initializes a new V8 runtime instance with the specified name and resource constraints.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the instance.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(Microsoft.ClearScript.V8.V8RuntimeFlags)">
            <summary>
            Initializes a new V8 runtime instance with the specified options.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(Microsoft.ClearScript.V8.V8RuntimeFlags,System.Int32)">
            <summary>
            Initializes a new V8 runtime instance with the specified options and debug port.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeFlags)">
            <summary>
            Initializes a new V8 runtime instance with the specified name and options.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeFlags,System.Int32)">
            <summary>
            Initializes a new V8 runtime instance with the specified name, options, and debug port.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8RuntimeFlags)">
            <summary>
            Initializes a new V8 runtime instance with the specified resource constraints and options.
            </summary>
            <param name="constraints">Resource constraints for the instance.</param>
            <param name="flags">A value that selects options for the operation.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8RuntimeFlags,System.Int32)">
            <summary>
            Initializes a new V8 runtime instance with the specified resource constraints, options, and debug port.
            </summary>
            <param name="constraints">Resource constraints for the instance.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8RuntimeFlags)">
            <summary>
            Initializes a new V8 runtime instance with the specified name, resource constraints, and options.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the instance.</param>
            <param name="flags">A value that selects options for the operation.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8RuntimeFlags,System.Int32)">
            <summary>
            Initializes a new V8 runtime instance with the specified name, resource constraints, options, and debug port.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the instance.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
        </member>
        <member name="E:Microsoft.ClearScript.V8.V8Runtime.DebuggerConnected">
            <summary>
            Occurs when a debugger connects to a V8 runtime.
            </summary>
        </member>
        <member name="E:Microsoft.ClearScript.V8.V8Runtime.DebuggerDisconnected">
            <summary>
            Occurs when a debugger disconnects from a V8 runtime.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.Name">
            <summary>
            Gets the name associated with the V8 runtime instance.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.FormatCode">
            <summary>
            Enables or disables script code formatting.
            </summary>
            <remarks>
            When this property is set to <c>true</c>, the V8 runtime may format script code before
            executing or compiling it. This is intended to facilitate interactive debugging. The
            formatting operation currently includes stripping leading and trailing blank lines and
            removing global indentation.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.MaxHeapSize">
            <summary>
            Gets or sets a soft limit for the size of the V8 runtime's heap.
            </summary>
            <remarks>
            <para>
            This property is specified in bytes. When it is set to the default value, heap size
            monitoring is disabled, and scripts with memory leaks or excessive memory usage
            can cause unrecoverable errors and process termination.
            </para>
            <para>
            A V8 runtime unconditionally terminates the process when it exceeds its resource
            constraints (see <c><see cref="T:Microsoft.ClearScript.V8.V8RuntimeConstraints"/></c>). This property enables external
            heap size monitoring that can prevent termination in some scenarios. To be effective,
            it should be set to a value that is significantly lower than
            <c><see cref="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxOldSpaceSize"/></c>. Note that enabling heap size
            monitoring results in slower script execution.
            </para>
            <para>
            Exceeding this limit causes the V8 runtime to behave in accordance with
            <c><see cref="P:Microsoft.ClearScript.V8.V8Runtime.HeapSizeViolationPolicy"/></c>.
            </para>
            <para>
            Note that
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer">ArrayBuffer</see></c>
            memory is allocated outside the runtime's heap and is therefore not tracked by heap
            size monitoring. See <c><see cref="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxArrayBufferAllocation"/></c> for
            additional information.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.HeapSizeSampleInterval">
            <summary>
            Gets or sets the minimum time interval between consecutive heap size samples.
            </summary>
            <remarks>
            This property is effective only when heap size monitoring is enabled (see
            <c><see cref="P:Microsoft.ClearScript.V8.V8Runtime.MaxHeapSize"/></c>).
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.MaxStackUsage">
            <summary>
            Gets or sets the maximum amount by which the stack is permitted to grow during script execution.
            </summary>
            <remarks>
            <para>
            This property is specified in bytes. When it is set to the default value, no stack
            usage limit is enforced, and scripts with unchecked recursion or other excessive stack
            usage can cause unrecoverable errors and process termination.
            </para>
            <para>
            Note that the V8 runtime does not monitor stack usage while a host call is in progress.
            Monitoring is resumed when control returns to the runtime.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.DocumentSettings">
            <summary>
            Gets or sets the V8 runtime's document settings.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.EnableInterruptPropagation">
            <summary>
            Enables or disables interrupt propagation in the V8 runtime.
            </summary>
            <remarks>
            By default, when nested script execution is interrupted via
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Interrupt"/></c>, an instance of
            <c><see cref="T:Microsoft.ClearScript.ScriptInterruptedException"/></c>, if not handled by the host, is wrapped and
            delivered to the parent script frame as a normal exception that JavaScript code can
            catch. Setting this property to <c>true</c> causes the V8 runtime to remain in the
            interrupted state until its outermost script frame has been processed.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.HeapSizeViolationPolicy">
            <summary>
            Gets or sets the V8 runtime's behavior in response to a violation of the maximum heap size.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine">
            <summary>
            Creates a new V8 script engine instance.
            </summary>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine(System.String)">
            <summary>
            Creates a new V8 script engine instance with the specified name.
            </summary>
            <param name="engineName">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine(Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Creates a new V8 script engine instance with the specified options.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            <para>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </para>
            <para>
            V8 supports one script debugger per runtime. If script debugging has been enabled in
            the current runtime, additional script engine instances cannot disable it or change its
            TCP port, nor can they enable script debugging on a different port.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine(Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Creates a new V8 script engine instance with the specified options and debug port.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            <para>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </para>
            <para>
            V8 supports one script debugger per runtime. If script debugging has been enabled in
            the current runtime, additional script engine instances cannot disable it or change its
            TCP port, nor can they enable script debugging on a different port.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine(System.String,Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Creates a new V8 script engine instance with the specified name and options.
            </summary>
            <param name="engineName">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            <para>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </para>
            <para>
            V8 supports one script debugger per runtime. If script debugging has been enabled in
            the current runtime, additional script engine instances cannot disable it or change its
            TCP port, nor can they enable script debugging on a different port.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CreateScriptEngine(System.String,Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Creates a new V8 script engine instance with the specified name, options, and debug port.
            </summary>
            <param name="engineName">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <returns>A new V8 script engine instance.</returns>
            <remarks>
            <para>
            The new script engine instance shares the V8 runtime with other instances created by
            this method and any of its overloads.
            </para>
            <para>
            V8 supports one script debugger per runtime. If script debugging has been enabled in
            the current runtime, additional script engine instances cannot disable it or change its
            TCP port, nor can they enable script debugging on a different port.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String)">
            <summary>
            Creates a compiled script.
            </summary>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String)">
            <summary>
            Creates a compiled script with an associated document name.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String)">
            <summary>
            Creates a compiled script with the specified document meta-information.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script, generating cache data for accelerated recompilation.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script with an associated document name, generating cache data for accelerated recompilation.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script with the specified document meta-information, generating cache data for accelerated recompilation.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script, consuming previously generated cache data.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script with an associated document name, consuming previously generated cache data.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script with the specified document meta-information, consuming previously generated cache data.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script with an associated document name, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script with the specified document meta-information, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String)">
            <summary>
            Loads and compiles a script document.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory)">
            <summary>
            Loads and compiles a document with the specified category.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback)">
            <summary>
            Loads and compiles a document with the specified category and context callback.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a script document, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a document with the specified category, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a script document, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a document with the specified category, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a script document, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a document with the specified category, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.GetHeapInfo">
            <summary>
            Returns memory usage information.
            </summary>
            <returns>A <c><see cref="T:Microsoft.ClearScript.V8.V8RuntimeHeapInfo"/></c> object containing memory usage information.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CollectGarbage(System.Boolean)">
            <summary>
            Performs garbage collection.
            </summary>
            <param name="exhaustive"><c>True</c> to perform exhaustive garbage collection, <c>false</c> to favor speed over completeness.</param>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.BeginCpuProfile(System.String)">
            <summary>
            Begins collecting a new CPU profile.
            </summary>
            <param name="name">A name for the profile.</param>
            <returns><c>True</c> if the profile was created successfully, <c>false</c> otherwise.</returns>
            <remarks>
            A V8 runtime can collect multiple CPU profiles simultaneously.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.BeginCpuProfile(System.String,Microsoft.ClearScript.V8.V8CpuProfileFlags)">
            <summary>
            Begins collecting a new CPU profile with the specified options.
            </summary>
            <param name="name">A name for the profile.</param>
            <param name="flags">Options for creating the profile.</param>
            <returns><c>True</c> if the profile was created successfully, <c>false</c> otherwise.</returns>
            <remarks>
            A V8 runtime can collect multiple CPU profiles simultaneously.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.EndCpuProfile(System.String)">
            <summary>
            Completes and returns a CPU profile.
            </summary>
            <param name="name">The name of the profile.</param>
            <returns>The profile if it was found and completed successfully, <c>null</c> otherwise.</returns>
            <remarks>
            An empty <paramref name="name"/> argument selects the most recently created CPU profile.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.CollectCpuProfileSample">
            <summary>
            Collects a sample in all CPU profiles active in the V8 runtime.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Runtime.CpuProfileSampleInterval">
            <summary>
            Gets or sets the time interval between automatic CPU profile samples, in microseconds.
            </summary>
            <remarks>
            Assigning this property has no effect on CPU profiles already active in the V8 runtime.
            The default value is 1000.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.WriteHeapSnapshot(System.IO.Stream)">
            <summary>
            Writes a heap snapshot to the given stream.
            </summary>
            <param name="stream">The stream to which to write the heap snapshot.</param>
            <remarks>
            This method generates a heap snapshot in JSON format with ASCII encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Runtime.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8RuntimeConstraints">
            <summary>
            Specifies resource constraints for a V8 runtime.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8RuntimeConstraints.#ctor">
            <summary>
            Initializes a new <c><see cref="T:Microsoft.ClearScript.V8.V8RuntimeConstraints"/></c> instance.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxNewSpaceSize">
            <summary>
            Gets or sets the maximum size of the new object heap in
            <see href="http://en.wikipedia.org/wiki/Mebibyte">MiB</see>.
            </summary>
            <remarks>
            For maximum compatibility with hosts that predate an inadvertent breaking change in
            ClearScript 5.4.1, values greater than 1048576
            (1 <see href="http://en.wikipedia.org/wiki/Tebibyte">TiB</see>) are assumed to be in
            bytes rather than MiB. For example, the values 16 and 16777216 both specify a limit
            of 16 MiB.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxOldSpaceSize">
            <summary>
            Gets or sets the maximum size of the old object heap in
            <see href="http://en.wikipedia.org/wiki/Mebibyte">MiB</see>.
            </summary>
            <remarks>
            For maximum compatibility with hosts that predate an inadvertent breaking change in
            ClearScript 5.4.1, values greater than 1048576
            (1 <see href="http://en.wikipedia.org/wiki/Tebibyte">TiB</see>) are assumed to be in
            bytes rather than MiB. For example, the values 16 and 16777216 both specify a limit
            of 16 MiB.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxExecutableSize">
            <summary>
            Gets or sets the maximum size of the executable code heap in
            <see href="http://en.wikipedia.org/wiki/Mebibyte">MiB</see>.
            </summary>
            <remarks>
            For maximum compatibility with hosts that predate an inadvertent breaking change in
            ClearScript 5.4.1, values greater than 1048576
            (1 <see href="http://en.wikipedia.org/wiki/Tebibyte">TiB</see>) are assumed to be in
            bytes rather than MiB. For example, the values 16 and 16777216 both specify a limit
            of 16 MiB.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxYoungSpaceSize">
            <summary>
            Gets or sets the maximum size of the young object heap in
            <see href="http://en.wikipedia.org/wiki/Mebibyte">MiB</see>.
            </summary>
            <remarks>
            For maximum compatibility with hosts that predate an inadvertent breaking change in
            ClearScript 5.4.1, values greater than 1048576
            (1 <see href="http://en.wikipedia.org/wiki/Tebibyte">TiB</see>) are assumed to be in
            bytes rather than MiB. For example, the values 16 and 16777216 both specify a limit
            of 16 MiB.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.HeapExpansionMultiplier">
            <summary>
            Gets or sets the heap expansion multiplier.
            </summary>
            <remarks>
            When set to a value greater than 1, this property enables on-demand heap expansion,
            which automatically increases the maximum heap size by the specified multiplier
            whenever the script engine is close to exceeding the current limit. Note that a buggy
            or malicious script can still cause an application to fail by exhausting its address
            space or total available memory. On-demand heap expansion is recommended for use in
            conjunction with heap size monitoring (see <c><see cref="P:Microsoft.ClearScript.V8.V8Runtime.MaxHeapSize"/></c>,
            <c><see cref="P:Microsoft.ClearScript.V8.V8ScriptEngine.MaxRuntimeHeapSize"/></c>) to help contain runaway scripts.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxArrayBufferAllocation">
            <summary>
            Gets or sets the maximum amount of
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer">ArrayBuffer</see></c>
            memory the runtime may allocate.
            </summary>
            <remarks>
            This property is specified in bytes. <c>ArrayBuffer</c> memory is allocated outside the
            runtime's heap and released when its garbage collector reclaims the corresponding
            JavaScript <c>ArrayBuffer</c> object. Leave this property at its default value to
            enforce no limit.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8RuntimeDebuggerEventArgs">
            <summary>
            Provides data for debugger events associated with V8 runtimes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeDebuggerEventArgs.Name">
            <summary>
            Gets the name associated with the V8 runtime instance.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeDebuggerEventArgs.Port">
            <summary>
            Gets the TCP port of the debugger connection.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8RuntimeFlags">
            <summary>
            Defines options for initializing a new V8 runtime instance.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeFlags.None">
            <summary>
            Specifies that no options are selected.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeFlags.EnableDebugging">
            <summary>
            Specifies that script debugging features are to be enabled.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeFlags.EnableRemoteDebugging">
            <summary>
            Specifies that remote script debugging is to be enabled. This option is ignored if
            <c><see cref="F:Microsoft.ClearScript.V8.V8RuntimeFlags.EnableDebugging"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8RuntimeFlags.EnableDynamicModuleImports">
            <summary>
            Specifies that
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Dynamic_Imports">dynamic module imports</see>
            are to be enabled. This is an experimental feature and may be removed in a future release.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8RuntimeHeapInfo">
            <summary>
            Contains memory usage information for a V8 runtime.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.TotalHeapSize">
            <summary>
            Gets the total heap size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.TotalHeapSizeExecutable">
            <summary>
            Gets the total executable heap size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.TotalPhysicalSize">
            <summary>
            Gets the total physical memory size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.TotalAvailableSize">
            <summary>
            Gets the total available memory size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.UsedHeapSize">
            <summary>
            Gets the used heap size in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.HeapSizeLimit">
            <summary>
            Gets the heap size limit in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8RuntimeHeapInfo.TotalExternalSize">
            <summary>
            Gets the total external memory size in bytes.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8Script">
            <summary>
            Represents a compiled script that can be executed multiple times without recompilation.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Script.Name">
            <summary>
            Gets the document name associated with the compiled script.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Script.DocumentInfo">
            <summary>
            Gets the document meta-information for the compiled script.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8Script.Dispose">
            <summary>
            Releases all resources used by the compiled script.
            </summary>
            <remarks>
            Call <c>Dispose()</c> when you are finished using the compiled script. <c>Dispose()</c>
            leaves the compiled script in an unusable state. After calling <c>Dispose()</c>, you
            must release all references to the compiled script so the garbage collector can reclaim
            the memory that the compiled script was occupying.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8ScriptEngine">
            <summary>
            Represents an instance of the V8 JavaScript engine.
            </summary>
            <remarks>
            Unlike <c>WindowsScriptEngine</c> instances, V8ScriptEngine instances do not have
            thread affinity. The underlying script engine is not thread-safe, however, so this class
            uses internal locks to automatically serialize all script code execution for a given
            instance. Script delegates and event handlers are invoked on the calling thread without
            marshaling.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor">
            <summary>
            Initializes a new V8 script engine instance.
            </summary>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String)">
            <summary>
            Initializes a new V8 script engine instance with the specified name.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints)">
            <summary>
            Initializes a new V8 script engine instance with the specified resource constraints.
            </summary>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints)">
            <summary>
            Initializes a new V8 script engine instance with the specified name and resource constraints.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Initializes a new V8 script engine instance with the specified options.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Initializes a new V8 script engine instance with the specified options and debug port.
            </summary>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String,Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Initializes a new V8 script engine instance with the specified name and options.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String,Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Initializes a new V8 script engine instance with the specified name, options, and debug port.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Initializes a new V8 script engine instance with the specified resource constraints and options.
            </summary>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <param name="flags">A value that selects options for the operation.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Initializes a new V8 script engine instance with the specified resource constraints, options, and debug port.
            </summary>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8ScriptEngineFlags)">
            <summary>
            Initializes a new V8 script engine instance with the specified name, resource constraints, and options.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <param name="flags">A value that selects options for the operation.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.#ctor(System.String,Microsoft.ClearScript.V8.V8RuntimeConstraints,Microsoft.ClearScript.V8.V8ScriptEngineFlags,System.Int32)">
            <summary>
            Initializes a new V8 script engine instance with the specified name, resource constraints, options, and debug port.
            </summary>
            <param name="name">A name to associate with the instance. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="constraints">Resource constraints for the V8 runtime (see remarks).</param>
            <param name="flags">A value that selects options for the operation.</param>
            <param name="debugPort">A TCP port on which to listen for a debugger connection.</param>
            <remarks>
            A separate V8 runtime is created for the new script engine instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CancelAwaitDebugger">
            <summary>
            Resumes script execution if the script engine is waiting for a debugger connection.
            </summary>
            <remarks>
            This method can be called safely from any thread.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.MaxRuntimeHeapSize">
            <summary>
            Gets or sets a soft limit for the size of the V8 runtime's heap.
            </summary>
            <remarks>
            <para>
            This property is specified in bytes. When it is set to the default value, heap size
            monitoring is disabled, and scripts with memory leaks or excessive memory usage
            can cause unrecoverable errors and process termination.
            </para>
            <para>
            A V8 runtime unconditionally terminates the process when it exceeds its resource
            constraints (see <c><see cref="T:Microsoft.ClearScript.V8.V8RuntimeConstraints"/></c>). This property enables external
            heap size monitoring that can prevent termination in some scenarios. To be effective,
            it should be set to a value that is significantly lower than
            <c><see cref="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxOldSpaceSize"/></c>. Note that enabling heap size
            monitoring results in slower script execution.
            </para>
            <para>
            Exceeding this limit causes the V8 runtime to behave in accordance with
            <c><see cref="P:Microsoft.ClearScript.V8.V8ScriptEngine.RuntimeHeapSizeViolationPolicy"/></c>.
            </para>
            <para>
            Note that
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer">ArrayBuffer</see></c>
            memory is allocated outside the runtime's heap and is therefore not tracked by heap
            size monitoring. See <c><see cref="P:Microsoft.ClearScript.V8.V8RuntimeConstraints.MaxArrayBufferAllocation"/></c> for
            additional information.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.RuntimeHeapSizeSampleInterval">
            <summary>
            Gets or sets the minimum time interval between consecutive heap size samples.
            </summary>
            <remarks>
            This property is effective only when heap size monitoring is enabled (see
            <c><see cref="P:Microsoft.ClearScript.V8.V8ScriptEngine.MaxRuntimeHeapSize"/></c>).
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.MaxRuntimeStackUsage">
            <summary>
            Gets or sets the maximum amount by which the V8 runtime is permitted to grow the stack during script execution.
            </summary>
            <remarks>
            <para>
            This property is specified in bytes. When it is set to the default value, no stack
            usage limit is enforced, and scripts with unchecked recursion or other excessive stack
            usage can cause unrecoverable errors and process termination.
            </para>
            <para>
            Note that the V8 runtime does not monitor stack usage while a host call is in progress.
            Monitoring is resumed when control returns to the runtime.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.SuppressInstanceMethodEnumeration">
            <summary>
            Enables or disables instance method enumeration.
            </summary>
            <remarks>
            By default, a host object's instance methods are exposed as enumerable properties.
            Setting this property to <c>true</c> causes instance methods to be excluded from
            property enumeration. This affects all host objects exposed in the current script
            engine. Note that instance methods remain both retrievable and invocable regardless of
            this property's value.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.SuppressExtensionMethodEnumeration">
            <summary>
            Enables or disables extension method enumeration.
            </summary>
            <remarks>
            <para>
            By default, all exposed extension methods appear as enumerable properties of all host
            objects, regardless of type. Setting this property to <c>true</c> causes extension
            methods to be excluded from property enumeration. This affects all host objects exposed
            in the current script engine. Note that extension methods remain both retrievable and
            invocable regardless of this property's value.
            </para>
            <para>
            This property has no effect if <c><see cref="P:Microsoft.ClearScript.V8.V8ScriptEngine.SuppressInstanceMethodEnumeration"/></c> is set
            to <c>true</c>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.EnableRuntimeInterruptPropagation">
            <summary>
            Enables or disables interrupt propagation in the V8 runtime.
            </summary>
            <remarks>
            By default, when nested script execution is interrupted via <c><see cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Interrupt"/></c>, an
            instance of <c><see cref="T:Microsoft.ClearScript.ScriptInterruptedException"/></c>, if not handled by the host, is
            wrapped and delivered to the parent script frame as a normal exception that JavaScript
            code can catch. Setting this property to <c>true</c> causes the V8 runtime to remain in
            the interrupted state until its outermost script frame has been processed.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.RuntimeHeapSizeViolationPolicy">
            <summary>
            Gets or sets the V8 runtime's behavior in response to a violation of the maximum heap size.
            </summary>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String)">
            <summary>
            Creates a compiled script.
            </summary>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String)">
            <summary>
            Creates a compiled script with an associated document name.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String)">
            <summary>
            Creates a compiled script with the specified document meta-information.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script, generating cache data for accelerated recompilation.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 script
            engines and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script with an associated document name, generating cache data for accelerated recompilation.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 script
            engines and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Creates a compiled script with the specified document meta-information, generating cache data for accelerated recompilation.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 script
            engines and application processes.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script, consuming previously generated cache data.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script with an associated document name, consuming previously generated cache data.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Creates a compiled script with an associated document name, consuming previously generated cache data.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(System.String,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script with an associated document name, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="documentName">A document name for the compiled script. Currently, this name is used only as a label in presentation contexts such as debugger user interfaces.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Compile(Microsoft.ClearScript.DocumentInfo,System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Creates a compiled script with the specified document meta-information, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="documentInfo">A structure containing meta-information for the script document.</param>
            <param name="code">The script code to compile.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed multiple times without recompilation.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String)">
            <summary>
            Loads and compiles a script document.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory)">
            <summary>
            Loads and compiles a document with the specified category.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback)">
            <summary>
            Loads and compiles a document with the specified category and context callback.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a script document, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a document with the specified category, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, generating cache data for accelerated recompilation.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be generated.</param>
            <param name="cacheBytes">Cache data for accelerated recompilation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            The generated cache data can be stored externally and is usable in other V8 runtimes
            and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a script document, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a document with the specified category, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[],System.Boolean@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, consuming previously generated cache data.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be consumed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheAccepted"><c>True</c> if <paramref name="cacheBytes"/> was accepted and used to accelerate script compilation, <c>false</c> otherwise.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. Note that script compilation may be bypassed if a suitable compiled
            script already exists in the V8 runtime's memory. In that case, the cache data is
            ignored and <paramref name="cacheAccepted"/> is set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a script document, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a document with the specified category, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CompileDocument(System.String,Microsoft.ClearScript.DocumentCategory,Microsoft.ClearScript.DocumentContextCallback,Microsoft.ClearScript.V8.V8CacheKind,System.Byte[]@,Microsoft.ClearScript.V8.V8CacheResult@)">
            <summary>
            Loads and compiles a document with the specified category and context callback, consuming previously generated cache data and updating it if necessary.
            </summary>
            <param name="specifier">A string specifying the document to be loaded and compiled.</param>
            <param name="category">An optional category for the requested document.</param>
            <param name="contextCallback">An optional context callback for the requested document.</param>
            <param name="cacheKind">The kind of cache data to be processed.</param>
            <param name="cacheBytes">Cache data for accelerated compilation.</param>
            <param name="cacheResult">The cache data processing result for the operation.</param>
            <returns>A compiled script that can be executed by multiple V8 script engine instances.</returns>
            <remarks>
            To be accepted, the cache data must have been generated for identical script code by
            the same V8 build. If returned, the updated cache data can be stored externally and is
            usable in other V8 script engines and application processes.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Evaluate(Microsoft.ClearScript.V8.V8Script)">
            <summary>
            Evaluates a compiled script.
            </summary>
            <param name="script">The compiled script to evaluate.</param>
            <returns>The result value.</returns>
            <remarks>
            For information about the types of result values that script code can return, see
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Evaluate(System.String,System.Boolean,System.String)"/></c>.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Execute(Microsoft.ClearScript.V8.V8Script)">
            <summary>
            Executes a compiled script.
            </summary>
            <param name="script">The compiled script to execute.</param>
            <remarks>
            This method is similar to <c><see cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Evaluate(Microsoft.ClearScript.V8.V8Script)"/></c> with the exception that it
            does not marshal a result value to the host. It can provide a performance advantage
            when the result value is not needed.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CancelInterrupt">
            <summary>
            Cancels any pending request to interrupt script execution.
            </summary>
            <remarks>
            This method can be called safely from any thread.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.Interrupt"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.GetRuntimeHeapInfo">
            <summary>
            Returns memory usage information for the V8 runtime.
            </summary>
            <returns>A <c><see cref="T:Microsoft.ClearScript.V8.V8RuntimeHeapInfo"/></c> object containing memory usage information for the V8 runtime.</returns>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.BeginCpuProfile(System.String)">
            <summary>
            Begins collecting a new CPU profile.
            </summary>
            <param name="name">A name for the profile.</param>
            <returns><c>True</c> if the profile was created successfully, <c>false</c> otherwise.</returns>
            <remarks>
            A V8 script engine can collect multiple CPU profiles simultaneously.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.BeginCpuProfile(System.String,Microsoft.ClearScript.V8.V8CpuProfileFlags)">
            <summary>
            Begins collecting a new CPU profile with the specified options.
            </summary>
            <param name="name">A name for the profile.</param>
            <param name="flags">Options for creating the profile.</param>
            <returns><c>True</c> if the profile was created successfully, <c>false</c> otherwise.</returns>
            <remarks>
            A V8 script engine can collect multiple CPU profiles simultaneously.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.EndCpuProfile(System.String)">
            <summary>
            Completes and returns a CPU profile.
            </summary>
            <param name="name">The name of the profile.</param>
            <returns>The profile if it was found and completed successfully, <c>null</c> otherwise.</returns>
            <remarks>
            An empty <paramref name="name"/> argument selects the most recently created CPU profile.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CollectCpuProfileSample">
            <summary>
            Collects a sample in all CPU profiles active in the V8 runtime.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.CpuProfileSampleInterval">
            <summary>
            Gets or sets the time interval between automatic CPU profile samples, in microseconds.
            </summary>
            <remarks>
            Assigning this property has no effect on CPU profiles already active in the V8 runtime.
            The default value is 1000.
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.WriteRuntimeHeapSnapshot(System.IO.Stream)">
            <summary>
            Writes a snapshot of the V8 runtime's heap to the given stream.
            </summary>
            <param name="stream">The stream to which to write the heap snapshot.</param>
            <remarks>
            This method generates a heap snapshot in JSON format with ASCII encoding.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.FileNameExtension">
            <summary>
            Gets the script engine's recommended file name extension for script files.
            </summary>
            <remarks>
            <c><see cref="T:Microsoft.ClearScript.V8.V8ScriptEngine"/></c> instances return "js" for this property.
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.Script">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8ScriptEngine.Global">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.ExecuteCommand(System.String)">
            <summary>
            Executes script code as a command.
            </summary>
            <param name="command">The script command to execute.</param>
            <returns>The command output.</returns>
            <remarks>
            <para>
            This method is similar to <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Evaluate(System.String)"/></c> but optimized for
            command consoles. The specified command must be limited to a single expression or
            statement. Script engines can override this method to customize command execution as
            well as the process of converting the result to a string for console output.
            </para>
            <para>
            The <c><see cref="T:Microsoft.ClearScript.V8.V8ScriptEngine"/></c> version of this method attempts to use
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/tostring">toString</see></c>
            to convert the return value.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.GetStackTrace">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Interrupt">
            <summary>
            Interrupts script execution and causes the script engine to throw an exception.
            </summary>
            <remarks>
            This method can be called safely from any thread.
            </remarks>
            <c><seealso cref="M:Microsoft.ClearScript.V8.V8ScriptEngine.CancelInterrupt"/></c>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.CollectGarbage(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the script engine and optionally releases the managed resources.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
            <remarks>
            This method is called by the public <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Dispose"/></c> method and the
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Finalize">Finalize</see></c> method.
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Dispose"/></c> invokes the protected <c>Dispose(Boolean)</c>
            method with the <paramref name="disposing"/> parameter set to <c>true</c>.
            <c><see cref="M:Microsoft.ClearScript.ScriptEngine.Finalize">Finalize</see></c> invokes <c>Dispose(Boolean)</c> with
            <paramref name="disposing"/> set to <c>false</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper">
            <exclude/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper.#ctor(Microsoft.ClearScript.V8.V8ScriptEngine)">
            <exclude/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper.ToJson(System.Object,System.Object)">
            <exclude/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <exclude/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <exclude/>
        </member>
        <member name="M:Microsoft.ClearScript.V8.V8ScriptEngine.JsonHelper.CanConvert(System.Type)">
            <exclude/>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8ScriptEngineFlags">
            <summary>
            Defines options for initializing a new V8 JavaScript engine instance.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.None">
            <summary>
            Specifies that no options are selected.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableDebugging">
            <summary>
            Specifies that script debugging features are to be enabled.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.DisableGlobalMembers">
            <summary>
            Specifies that support for <c><see cref="F:Microsoft.ClearScript.HostItemFlags.GlobalMembers"/></c> behavior is to be
            disabled. This option yields a significant performance benefit for global item access.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableRemoteDebugging">
            <summary>
            Specifies that remote script debugging is to be enabled. This option is ignored if
            <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableDebugging"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.AwaitDebuggerAndPauseOnStart">
            <summary>
            Specifies that the script engine is to wait for a debugger connection and schedule a
            pause before executing the first line of application script code. This option is
            ignored if <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableDebugging"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableDateTimeConversion">
            <summary>
            Specifies that the script engine is to perform automatic conversion between
            .NET <c><see cref="T:System.DateTime"/></c> objects and JavaScript
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">Date</see></c>
            objects. This conversion is bidirectional and lossy. A <c>DateTime</c> object
            constructed from a JavaScript <c>Date</c> object always represents a Coordinated
            Universal Time (UTC) and has its <c><see cref="P:System.DateTime.Kind"/></c> property set to
            <c><see cref="F:System.DateTimeKind.Utc"/></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableDynamicModuleImports">
            <summary>
            Specifies that
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import">dynamic module imports</see>
            are to be enabled. This is an experimental feature and may be removed in a future release.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalUnsafeInt64AsBigInt">
            <summary>
            Specifies that 64-bit integers with values greater than
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER">Number.MAX_SAFE_INTEGER</see></c>
            or less than
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER">Number.MIN_SAFE_INTEGER</see></c>
            are to be marshaled as
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt">BigInt</see></c>.
            This option is ignored if <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalAllInt64AsBigInt"/></c> is specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalUnsafeLongAsBigInt">
            <summary>
            Equivalent to <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalUnsafeInt64AsBigInt"/></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalAllInt64AsBigInt">
            <summary>
            Specifies that all 64-bit integers are to be marshaled as
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt">BigInt</see></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalAllLongAsBigInt">
            <summary>
            Equivalent to <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.MarshalAllInt64AsBigInt"/></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableTaskPromiseConversion">
            <summary>
            Specifies that the script engine is to perform automatic conversion between
            .NET <c><see cref="T:System.Threading.Tasks.Task"/></c> objects and JavaScript
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">promises</see>.
            This conversion is bidirectional and lossy. A <c>Task</c> object constructed from a
            JavaScript promise always has a result type of <c><see cref="T:System.Object"/></c>.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableValueTaskPromiseConversion">
            <summary>
            Specifies that the script engine is to perform automatic conversion from
            .NET
            <c><see href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask">ValueTask</see></c> and
            <c><see href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1">ValueTask&lt;TResult&gt;</see></c>
            structures to JavaScript
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">promises</see>.
            This conversion is unidirectional and lossy. This option is ignored if
            <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableTaskPromiseConversion"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.UseCaseInsensitiveMemberBinding">
            <summary>
            Specifies that access to host object and class members is to be case-insensitive. This
            option can introduce ambiguity if the host resource has distinct members whose names
            differ only in case, so it should be used with caution.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableStringifyEnhancements">
            <summary>
            Specifies that
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify">JSON.stringify</see></c>
            enhancements are to be enabled. These enhancements add support for host objects via the
            <see href="https://www.newtonsoft.com/json">Json.NET</see> library.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.HideHostExceptions">
            <summary>
            Specifies that host exceptions are to be hidden from script code. If an exception
            thrown by the host reaches the script engine, it is caught automatically, and an
            <c><see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error">Error</see></c>
            object is thrown in its place. By default, ClearScript makes the managed exception
            accessible to script code via the <c>Error</c> object's <c>hostException</c> property.
            This option suppresses that behavior.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.UseSynchronizationContexts">
            <summary>
            Specifies that support for synchronization contexts is to be enabled for task-promise
            interoperability. This option is ignored if
            <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableTaskPromiseConversion"/></c> is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.AddPerformanceObject">
            <summary>
            Specifies that the
            <c><see href="https://microsoft.github.io/ClearScript/2024/03/21/performance-api.html">Performance</see></c>
            object is to be added to the script engine's global namespace. This object provides a
            set of low-level native facilities for performance-sensitive scripts.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.SetTimerResolution">
            <summary>
            Specifies that native timers are to be set to the highest available resolution while
            the current <c><see cref="T:Microsoft.ClearScript.V8.V8ScriptEngine"/></c> instance is active. This option is
            ignored if <c><see cref="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.AddPerformanceObject"/></c> is not specified. It is only a
            hint and may be ignored on some systems. On platforms that support it, this option can
            degrade overall system performance or power efficiency, so caution is recommended.
            </summary>
        </member>
        <member name="F:Microsoft.ClearScript.V8.V8ScriptEngineFlags.EnableArrayConversion">
            <summary>
            Specifies that the script engine is to perform automatic conversion between .NET and
            JavaScript arrays. This conversion is bidirectional and lossy. A .NET array constructed
            from a JavaScript array always has an element type of <c><see cref="T:System.Object"/></c>,
            making it impossible for script code to specify a strongly typed array as a .NET method
            argument or property value. Excessive copying of array contents can also impact
            application performance and/or memory consumption. Caution is recommended.
            </summary>
        </member>
        <member name="T:Microsoft.ClearScript.V8.V8Settings">
            <summary>
            Defines properties that comprise ClearScript's V8 configuration.
            </summary>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Settings.EnableTopLevelAwait">
            <summary>
            Enables or disables Top-Level Await.
            </summary>
            <remarks>
            <para>
            <see href="https://github.com/tc39/proposal-top-level-await">Top-Level Await</see>
            enables code at the outermost scope of an
            <see href="https://www.ecma-international.org/ecma-262/6.0/#sec-modules">ECMAScript 6</see>
            module to be executed as an
            <see href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function">async function</see>.
            When this feature is enabled, modules can <c>await</c> resources, causing importers to
            delay evaluation as necessary.
            </para>
            <para>
            To enable Top-Level Await, set this property to <c>true</c> before instantiating
            <c><see cref="T:Microsoft.ClearScript.V8.V8ScriptEngine"/></c> or <c><see cref="T:Microsoft.ClearScript.V8.V8Runtime"/></c> for the first time. Subsequent
            reassignment will have no effect.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ClearScript.V8.V8Settings.GlobalFlags">
            <summary>
            Gets or sets global V8 options.
            </summary>
            <remarks>
            To override the default global options, set this property before instantiating
            <c><see cref="T:Microsoft.ClearScript.V8.V8ScriptEngine"/></c> or <c><see cref="T:Microsoft.ClearScript.V8.V8Runtime"/></c> for the first time. Subsequent
            reassignment will have no effect.
            </remarks>
        </member>
    </members>
</doc>

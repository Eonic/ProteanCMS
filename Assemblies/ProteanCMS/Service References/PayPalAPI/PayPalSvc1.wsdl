<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:ns="urn:ebay:api:PayPalAPI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ed="urn:ebay:apis:EnhancedDataTypes" xmlns:cc="urn:ebay:apis:CoreComponentTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" ns:version="216.0" targetNamespace="urn:ebay:api:PayPalAPI" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ebay:api:PayPalAPI">
      <xs:import schemaLocation="CoreComponentTypes.xsd" namespace="urn:ebay:apis:CoreComponentTypes" />
      <xs:import schemaLocation="eBLBaseComponents.xsd" namespace="urn:ebay:apis:eBLBaseComponents" />
      <xs:import schemaLocation="EnhancedDataTypes.xsd" namespace="urn:ebay:apis:EnhancedDataTypes" />
      <xs:element name="RequesterCredentials" type="ebl:CustomSecurityHeaderType" />
      <xs:complexType name="InstallmentDetailsType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="BillingPeriod" type="ebl:BillingPeriodType">
            <xs:annotation>
              <xs:documentation>
							Installment Period.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="BillingFrequency" type="xs:int">
            <xs:annotation>
              <xs:documentation>
							Installment Frequency.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="TotalBillingCycles" type="xs:int">
            <xs:annotation>
              <xs:documentation>
							Installment Cycles.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Amount" type="xs:string">
            <xs:annotation>
              <xs:documentation>
							Installment Amount.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ShippingAmount" type="xs:string">
            <xs:annotation>
              <xs:documentation>
							Installment Amount.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="TaxAmount" type="xs:string">
            <xs:annotation>
              <xs:documentation>
							Installment Amount.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OptionSelectionDetailsType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="OptionSelection" type="xs:string">
            <xs:annotation>
              <xs:documentation>
								Option Selection.
								<br /><b>Required</b><br />
								Character length and limitations: 12 single-byte alphanumeric characters
							</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Price" type="xs:string">
            <xs:annotation>
              <xs:documentation>
								Option Price.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="OptionType" type="ebl:OptionTypeListType">
            <xs:annotation>
              <xs:documentation>
								Option Type
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="10" name="PaymentPeriod" type="ns:InstallmentDetailsType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OptionDetailsType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="OptionName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
								Option Name.
								<br /><b>Optional</b><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="100" name="OptionSelectionDetails" type="ns:OptionSelectionDetailsType" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="BMCreateButtonRequest" type="ns:BMCreateButtonRequestType" />
      <xs:element name="BMCreateButtonResponse" type="ns:BMCreateButtonResponseType" />
      <xs:element name="BMCreateButtonReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMCreateButtonRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMCreateButtonRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonType" type="ebl:ButtonTypeType">
                <xs:annotation>
                  <xs:documentation>
										Type of Button to create.
										<br /><br /><b>Required</b><br /><br />
						Must be one of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCode" type="ebl:ButtonCodeType">
                <xs:annotation>
                  <xs:documentation>
										button code.
										<br /><br /><b>optional</b><br /><br />
						Must be one of the following: hosted, encrypted or cleartext
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                <xs:annotation>
                  <xs:documentation>
										Button sub type.
										<br /><br /><b>optional for button types buynow and cart only</b><br /><br />
						Must Be either PRODUCTS or SERVICES
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1000" name="ButtonVar" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button Variable information
										<br /><br /><b>At least one required recurring</b><br /><br />
						Character length and limitations: 63 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="5" name="OptionDetails" type="ns:OptionDetailsType" />
              <xs:element minOccurs="0" maxOccurs="2" name="TextBox" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Details of each option for the button.
										<br /><br /><b>Optional</b><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImage" type="ebl:ButtonImageType">
                <xs:annotation>
                  <xs:documentation>
										Button image to use.
										<br /><br /><b>Optional</b><br /><br />
						Must be one of: REG, SML, or CC
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImageURL" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button URL for custom button image.
										<br /><br /><b>Optional</b><br /><br />
						Character length and limitations: 127 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BuyNowText" type="ebl:BuyNowTextType">
                <xs:annotation>
                  <xs:documentation>
										Text to use on Buy Now Button.
										<br /><br /><b>Optional</b><br /><br />
						Must be either BUYNOW or PAYNOW
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="SubscribeText" type="ebl:SubscribeTextType">
                <xs:annotation>
                  <xs:documentation>
										Text to use on Subscribe button.
										<br /><br /><b>Optional</b><br /><br />
						Must be either BUYNOW or SUBSCRIBE
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCountry" type="ebl:CountryCodeType">
                <xs:annotation>
                  <xs:documentation>
										Button Country.
										<br /><br /><b>Optional</b><br /><br />
						Must be valid ISO country code
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonLanguage" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button language code.
										<br /><br /><b>Optional</b><br /><br />
						Character length and limitations: 3 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMCreateButtonResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Website" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Email" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Mobile" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="HostedButtonID" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMUpdateButtonRequest" type="ns:BMUpdateButtonRequestType" />
      <xs:element name="BMUpdateButtonResponse" type="ns:BMUpdateButtonResponseType" />
      <xs:element name="BMUpdateButtonReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMUpdateButtonRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMUpdateButtonRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="HostedButtonID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Hosted Button id of the button to update.
										<br /><br /><b>Required</b><br /><br />
					Character length and limitations: 10 single-byte numeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonType" type="ebl:ButtonTypeType">
                <xs:annotation>
                  <xs:documentation>
										Type of Button to create.
										<br /><br /><b>Required</b><br /><br />
						Must be one of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCode" type="ebl:ButtonCodeType">
                <xs:annotation>
                  <xs:documentation>
										button code.
										<br /><br /><b>optional</b><br /><br />
						Must be one of the following: hosted, encrypted or cleartext
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                <xs:annotation>
                  <xs:documentation>
										Button sub type.
										<br /><br /><b>optional for button types buynow and cart only</b><br /><br />
						Must Be either PRODUCTS or SERVICES
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1000" name="ButtonVar" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button Variable information
										<br /><br /><b>At least one required recurring</b><br /><br />
						Character length and limitations: 63 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="5" name="OptionDetails" type="ns:OptionDetailsType" />
              <xs:element minOccurs="0" maxOccurs="2" name="TextBox" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Details of each option for the button.
										<br /><br /><b>Optional</b><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImage" type="ebl:ButtonImageType">
                <xs:annotation>
                  <xs:documentation>
										Button image to use.
										<br /><br /><b>Optional</b><br /><br />
						Must be one of: REG, SML, or CC
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImageURL" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button URL for custom button image.
										<br /><br /><b>Optional</b><br /><br />
						Character length and limitations: 127 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BuyNowText" type="ebl:BuyNowTextType">
                <xs:annotation>
                  <xs:documentation>
										Text to use on Buy Now Button.
										<br /><br /><b>Optional</b><br /><br />
						Must be either BUYNOW or PAYNOW
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="SubscribeText" type="ebl:SubscribeTextType">
                <xs:annotation>
                  <xs:documentation>
										Text to use on Subscribe button.
										<br /><br /><b>Optional</b><br /><br />
						Must be either BUYNOW or SUBSCRIBE
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCountry" type="ebl:CountryCodeType">
                <xs:annotation>
                  <xs:documentation>
										Button Country.
										<br /><br /><b>Optional</b><br /><br />
						Must be valid ISO country code
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonLanguage" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button language code.
										<br /><br /><b>Optional</b><br /><br />
						Character length and limitations: 2 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMUpdateButtonResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Website" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Email" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Mobile" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="HostedButtonID" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMManageButtonStatusRequest" type="ns:BMManageButtonStatusRequestType" />
      <xs:element name="BMManageButtonStatusResponse" type="ns:BMManageButtonStatusResponseType" />
      <xs:element name="BMManageButtonStatusReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMManageButtonStatusRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMManageButtonStatusRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="HostedButtonID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button ID of Hosted button.
										<br /><br /><b>Required</b><br /><br />
				Character length and limitations: 10 single-byte numeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonStatus" type="ebl:ButtonStatusType">
                <xs:annotation>
                  <xs:documentation>
										Requested Status change for hosted button.
										<br /><br /><b>Required</b><br /><br />
				Character length and limitations: 1 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMManageButtonStatusResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMGetButtonDetailsRequest" type="ns:BMGetButtonDetailsRequestType" />
      <xs:element name="BMGetButtonDetailsResponse" type="ns:BMGetButtonDetailsResponseType" />
      <xs:element name="BMGetButtonDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMGetButtonDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMGetButtonDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="HostedButtonID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Button ID of button to return.
										<br /><br /><b>Required</b><br /><br />
				Character length and limitations: 10 single-byte numeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMGetButtonDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="Website" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Email" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="Mobile" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="HostedButtonID" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonType" type="ebl:ButtonTypeType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Type of button.
                                                                                <br /><br />
                                                                                One of the following: BUYNOW, CART, GIFTCERTIFICATE. SUBSCRIBE, PAYMENTPLAN, AUTOBILLING, DONATE, VIEWCART or UNSUBSCRIBE
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCode" type="ebl:ButtonCodeType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Type of button code.
                                                                                <br /><br />
                                                                                One of the following: hosted, encrypted or cleartext
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonSubType" type="ebl:ButtonSubTypeType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button sub type.
                                                                                <br /><br /><b>optional for button types buynow and cart only</b><br /><br />
                                                                                Either PRODUCTS or SERVICES
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1000" name="ButtonVar" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button Variable information
                                                                                <br /><br />
                                                                                Character length and limitations: 63 single-byte alphanumeric characters
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="5" name="OptionDetails" type="ns:OptionDetailsType" />
              <xs:element minOccurs="0" maxOccurs="2" name="TextBox" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
                                                                                Text field
                                                                                <br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImage" type="ebl:ButtonImageType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button image to use.
                                                                                <br /><br />
                                                                                One of: REG, SML, or CC
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonImageURL" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button URL for custom button image.
                                                                                <br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BuyNowText" type="ebl:BuyNowTextType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Text to use on Buy Now Button.
                                                                                <br /><br />
                                                                                Either BUYNOW or PAYNOW
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="SubscribeText" type="ebl:SubscribeTextType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Text to use on Subscribe button.
                                                                                <br /><br />
                                                                                Must be either BUYNOW or SUBSCRIBE
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonCountry" type="ebl:CountryCodeType">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button Country.
                                                                                <br /><br />
                                                                                Valid ISO country code or 'International'
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonLanguage" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
                                                                                Button language code.
                                                                                <br /><br />
                                                                                Character length and limitations: 3 single-byte alphanumeric characters
                                                                        </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMSetInventoryRequest" type="ns:BMSetInventoryRequestType" />
      <xs:element name="BMSetInventoryResponse" type="ns:BMSetInventoryResponseType" />
      <xs:element name="BMSetInventoryReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMSetInventoryRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMSetInventoryRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="HostedButtonID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Hosted Button ID of button you wish to change.
										<br /><br /><b>Required</b><br /><br />
				Character length and limitations: 10 single-byte numeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="TrackInv" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Is Inventory tracked.
										<br /><br /><b>Required</b><br /><br />
				0 or 1
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="TrackPnl" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Is PNL Tracked.
										<br /><br /><b>Required</b><br /><br />
				0 or 1
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:ItemTrackingDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="OptionIndex" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Option Index.
										<br /><br /><b>Optional</b><br /><br />
				Character length and limitations: 1 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="10" ref="ebl:OptionTrackingDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="SoldoutURL" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										URL of page to display when an item is soldout.
										<br /><br /><b>Optional</b><br /><br />
				Character length and limitations: 127 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ReuseDigitalDownloadKeys" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Whether to use the same digital download key repeatedly.
										<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="AppendDigitalDownloadKeys" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Whether to append these keys to the list or not (replace).
										<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1000" name="DigitalDownloadKeys" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Zero or more digital download keys to distribute to customers after transaction is completed.
										<br /><br /><b>Optional</b><br /><br />
				Character length and limitations: 1000 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMSetInventoryResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMGetInventoryRequest" type="ns:BMGetInventoryRequestType" />
      <xs:element name="BMGetInventoryResponse" type="ns:BMGetInventoryResponseType" />
      <xs:element name="BMGetInventoryReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMGetInventoryRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMGetInventoryRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="HostedButtonID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Hosted Button ID of the button to return inventory for.
										<br /><br /><b>Required</b><br /><br />
				Character length and limitations: 10 single-byte numeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMGetInventoryResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="HostedButtonID" type="xs:string" />
              <xs:element minOccurs="1" maxOccurs="1" name="TrackInv" type="xs:string" />
              <xs:element minOccurs="1" maxOccurs="1" name="TrackPnl" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:ItemTrackingDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="OptionIndex" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="OptionName" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="10" ref="ebl:OptionTrackingDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="SoldoutURL" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1000" name="DigitalDownloadKeys" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BMButtonSearchRequest" type="ns:BMButtonSearchRequestType" />
      <xs:element name="BMButtonSearchResponse" type="ns:BMButtonSearchResponseType" />
      <xs:element name="BMButtonSearchReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BMButtonSearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BMButtonSearchRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="StartDate" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>
										The earliest transaction date at which to start the search. No wildcards are allowed. 
										<br /><br /><b>Required</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="EndDate" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>
										The latest transaction date to be included in the search 
										<br /><br />
										Optional
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BMButtonSearchResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="100" ref="ebl:ButtonSearchResult" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="RefundTransactionRequest" type="ns:RefundTransactionRequestType" />
      <xs:element name="RefundTransactionResponse" type="ns:RefundTransactionResponseType" />
      <xs:element name="RefundTransactionReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:RefundTransactionRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="RefundTransactionRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="ebl:TransactionId">
                <xs:annotation>
                  <xs:documentation>Unique identifier of the  transaction you are refunding.
<br /><br /><b>Optional</b><br /><br />
Character length and limitations: 17 single-byte alphanumeric characters 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="PayerID" type="ebl:UserIDType">
                <xs:annotation>
                  <xs:documentation>Encrypted PayPal customer account identification number.
										<br /><br /><b>Optional</b><br /><br />
Character length and limitations: 127 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InvoiceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Invoice number corresponding to transaction details for tracking the refund of a payment. This parameter is passed by the merchant or recipient while refunding the transaction. This parameter does not affect the business logic, it is persisted in the DB for transaction reference
										<br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="RefundType" type="ebl:RefundType">
                <xs:annotation>
                  <xs:documentation>Type of refund you are making
<br /><br /><b>Required</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Refund amount. 
<br /><br />
Amount is <b>required</b>  if RefundType is Partial.
<br /><br />
NOTE: If RefundType is Full, do not set Amount.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ShippingAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Shipping amount. 
										<br /><br />
										Optional
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TaxAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Tax amount. 
										<br /><br />
										Optional
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Memo" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Custom memo about the refund. 
<br /><br />
Optional
<br /><br />
Character length and limitations: 255 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="RetryUntil" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>The maximum time till which refund must be tried.
									<br /><br />
									Optional
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="RefundSource" type="ebl:RefundSourceCodeType">
                <xs:annotation>
                  <xs:documentation>The type of funding source for refund.
									<br /><br />
									Optional
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="RefundAdvice" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Flag to indicate that the customer was already given store credit for a given transaction. This will allow us to make sure we do not double refund.
									<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:MerchantStoreDetails">
                <xs:annotation>
                  <xs:documentation>To pass the Merchant store information<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="ebl:RefundItemDetails">
                <xs:annotation>
                  <xs:documentation>Information about the individual details of the items to be refunded.<br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:MerchantData">
                <xs:annotation>
                  <xs:documentation>This holds key-value pair which merchants wants to pass it to the open wallet-PLCC processor<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RefundTransactionResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="RefundTransactionID" nillable="true" type="ebl:TransactionId">
                <xs:annotation>
                  <xs:documentation>Unique transaction ID of the refund. 
<br /><br />
Character length and limitations:17 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="NetRefundAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount subtracted from PayPal balance of original recipient of payment to make this refund 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="FeeRefundAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Transaction fee refunded to original recipient of payment 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="GrossRefundAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount of money refunded to original payer </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TotalRefundedAmount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Total of all previous refunds</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:RefundInfo">
                <xs:annotation>
                  <xs:documentation>Contains Refund Payment status information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ReceiptData" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Any general information like offer details that is reinstated or any other marketing data</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Return msgsubid back to merchant</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="InitiateRecoupRequest" type="ns:InitiateRecoupRequestType" />
      <xs:element name="InitiateRecoupResponse" type="ns:InitiateRecoupResponseType" />
      <xs:element name="InitiateRecoupReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:InitiateRecoupRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="InitiateRecoupRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ed:EnhancedInitiateRecoupRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InitiateRecoupResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CompleteRecoupRequest" type="ns:CompleteRecoupRequestType" />
      <xs:element name="CompleteRecoupResponse" type="ns:CompleteRecoupResponseType" />
      <xs:element name="CompleteRecoupReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:CompleteRecoupRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CompleteRecoupRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ed:EnhancedCompleteRecoupRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CompleteRecoupResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ed:EnhancedCompleteRecoupResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CancelRecoupRequest" type="ns:CancelRecoupRequestType" />
      <xs:element name="CancelRecoupResponse" type="ns:CancelRecoupResponseType" />
      <xs:element name="CancelRecoupReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:CancelRecoupRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CancelRecoupRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ed:EnhancedCancelRecoupRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CancelRecoupResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetTransactionDetailsRequest" type="ns:GetTransactionDetailsRequestType" />
      <xs:element name="GetTransactionDetailsResponse" type="ns:GetTransactionDetailsResponseType" />
      <xs:element name="GetTransactionDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetTransactionDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetTransactionDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element name="TransactionID" type="ebl:TransactionId">
                <xs:annotation>
                  <xs:documentation>Unique identifier of a transaction. 
<br /><br /><b>Required</b><br /><br />
The details for some kinds of transactions cannot be retrieved with GetTransactionDetailsRequest. You cannot obtain details of bank transfer withdrawals, for example. 
<br /><br />
Character length and limitations: 17 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetTransactionDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:PaymentTransactionDetails" />
              <xs:element ref="ebl:ThreeDSecureDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BillUserRequest" type="ns:BillUserRequestType" />
      <xs:element name="BillUserResponse" type="ns:BillUserResponseType" />
      <xs:element name="BillUserReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BillUserRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BillUserRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element ref="ebl:MerchantPullPaymentDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="ReturnFMFDetails" type="xs:int">
                <xs:annotation>
                  <xs:documentation>This flag indicates that the response should include FMFDetails</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BillUserResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:BillUserResponseDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="FMFDetails" type="ebl:FMFDetailsType" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="TransactionSearchRequest" type="ns:TransactionSearchRequestType" />
      <xs:element name="TransactionSearchResponse" type="ns:TransactionSearchResponseType" />
      <xs:element name="TransactionSearchReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:TransactionSearchRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="TransactionSearchRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="StartDate" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>The earliest transaction date at which to start the search. No wildcards are allowed. 
<br /><br /><b>Required</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="EndDate" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>The latest transaction date to be included in the search 
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Payer" type="ebl:EmailAddressType">
                <xs:annotation>
                  <xs:documentation>Search by the buyer's email address 
<br /><br />
Optional
<br /><br />
Character length and limitations: 127 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Receiver" type="ebl:EmailAddressType">
                <xs:annotation>
                  <xs:documentation>Search by the receiver's email address. If the merchant account has only one email, this is the primary email. Can also be a non-primary email.
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ReceiptID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Search by the PayPal Account Optional receipt ID
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="ebl:TransactionId">
                <xs:annotation>
                  <xs:documentation>Search by the transaction ID. 
<br /><br />
Optional
<br /><br />
The returned results are from the merchant's transaction records. 
<br /><br />
Character length and limitations: 19 single-byte characters maximum
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ProfileID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Search by Recurring Payment Profile id.  The ProfileID is returned as part of the CreateRecurringPaymentsProfile API response. 
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="PayerName" type="ebl:PersonNameType">
                <xs:annotation>
                  <xs:documentation>Search by the buyer's name 
<br /><br />
Optional
<br /><br />
Salutation: 20 single-byte character limit.
<br /><br />
FirstName: 25 single-byte character limit.
<br /><br />
MiddleName: 25 single-byte character limit.
<br /><br />
LastName: 25 single-byte character limit.
<br /><br />
Suffix: 12 single-byte character limit.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="AuctionItemNumber" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Search by item number of the purchased goods.
<br /><br />
Optional
<br /><br />
To search for purchased items not related to auctions, set the AuctionItemNumber element to the value of the HTML item_number variable set in the shopping cart for the original transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InvoiceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Search by invoice identification key, as set by you for the original transaction. InvoiceID searches the invoice records for items sold by the merchant, not the items purchased. 
<br /><br />
Optional
<br /><br />
The value for InvoiceID must exactly match an invoice identification number. No wildcards are allowed. 
<br /><br />
Character length and limitations: 127 single-byte characters maximum</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="CardNumber" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionClass" type="ebl:PaymentTransactionClassCodeType">
                <xs:annotation>
                  <xs:documentation>
								Search by classification of transaction. Some kinds of possible classes of transactions are not searchable with TransactionSearchRequest. You cannot search for bank transfer withdrawals, for example. 
<br /><br />
Optional
<br /><br />
All: all transaction classifications.
<br /><br />
Sent: only payments sent.
<br /><br />
Received: only payments received.
<br /><br />
MassPay: only mass payments.
<br /><br />
MoneyRequest: only money requests.
<br /><br />
FundsAdded: only funds added to balance.
<br /><br />
FundsWithdrawn: only funds withdrawn from balance.
<br /><br />
Referral: only transactions involving referrals.
<br /><br />
Fee: only transactions involving fees.
<br /><br />
Subscription: only transactions involving subscriptions.
<br /><br />
Dividend: only transactions involving dividends.
<br /><br />
Billpay: only transactions involving BillPay Transactions.
<br /><br />
Refund: only transactions involving funds.
<br /><br />
CurrencyConversions: only transactions involving currency conversions.
<br /><br />
BalanceTransfer: only transactions involving balance transfers.
<br /><br />
Reversal: only transactions involving BillPay reversals.
<br /><br />
Shipping: only transactions involving UPS shipping fees.
<br /><br />
BalanceAffecting: only transactions that affect the account balance.
<br /><br />
ECheck: only transactions involving eCheck
<br /><br />
ForcedPostTransaction: forced post transaction.
<br /><br />
NonReferencedRefunds: non-referenced refunds.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Search by transaction amount 
<br /><br />
Optional
<br /><br />
You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="CurrencyCode" type="ebl:CurrencyCodeType">
                <xs:annotation>
                  <xs:documentation>Search by currency code
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Status" type="ebl:PaymentTransactionStatusCodeType">
                <xs:annotation>
                  <xs:documentation>Search by transaction status 
<br /><br />
Optional
<br /><br />
Pending: The payment is pending. The specific reason the payment is pending is returned by the GetTransactionDetails APIPendingReason element. For more information, see PendingReason.
<br /><br />
Processing: The payment is being processed.
<br /><br />
Success: The payment has been completed and the funds have been added successfully to your account balance.
<br /><br />
Denied: You denied the payment. This happens only if the payment was previously pending.
<br /><br />
Reversed: A payment was reversed due to a chargeback or other type of reversal. The funds have been removed from your account balance and returned to the buyer.
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionSearchResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="ebl:PaymentTransactions">
                <xs:annotation>
                  <xs:documentation>Results of a Transaction Search.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="MassPayRequest" type="ns:MassPayRequestType" />
      <xs:element name="MassPayResponse" type="ns:MassPayResponseType" />
      <xs:element name="MassPayReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:MassPayRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="MassPayRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="EmailSubject" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Subject line of the email sent to all recipients. This subject is not contained in the input file; you must create it with your application. 
<br /><br />
Optional
<br /><br />
Character length and limitations: 255 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ReceiverType" type="ebl:ReceiverInfoCodeType">
                <xs:annotation>
                  <xs:documentation>Indicates how you identify the recipients of payments in all MassPayItems: either by EmailAddress (ReceiverEmail in MassPayItem), PhoneNumber (ReceiverPhone in MassPayItem), or by UserID (ReceiverID in MassPayItem). 
<br /><br /><b>Required. </b>You must specify one or the other of EmailAddress or UserID.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ButtonSource" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Known as BN code, to track the partner referred merchant transactions. 
<br /><br />
Optional
<br /><br />
Character length and limitations: 32 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="250" name="MassPayItem" type="ns:MassPayRequestItemType">
                <xs:annotation>
                  <xs:documentation>Details of each payment. A single MassPayRequest can include up to 250 MassPayItems. 
<br /><br /><b>Required</b></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MassPayResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MassPayRequestItemType">
        <xs:annotation>
          <xs:documentation>
					MassPayRequestItemType
				</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ReceiverEmail" type="ebl:EmailAddressType">
            <xs:annotation>
              <xs:documentation>Email address of recipient. 
<br /><br /><b>Required</b><br /><br />
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br /><br />
Character length and limitations: 127 single-byte characters maximum.
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ReceiverPhone" type="xs:string">
            <xs:annotation>
              <xs:documentation>Phone number of recipient. 
<br /><br /><b>Required</b><br /><br />
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br /><br /></xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ReceiverID" type="ebl:UserIDType">
            <xs:annotation>
              <xs:documentation>Unique PayPal customer account number. This value corresponds to the value of PayerID returned by GetTransactionDetails. 
<br /><br /><b>Required</b><br /><br />
You must specify ReceiverEmail, ReceiverPhone, or ReceiverID, but all MassPayItems in a request must use the same field to specify recipients.
<br /><br />
Character length and limitations: 17 single-byte characters maximum.
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
            <xs:annotation>
              <xs:documentation>Payment amount. You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies. 
<br /><br /><b>Required</b><br /><br />
You cannot mix currencies in a single MassPayRequest. A single request must include items that are of the same currency.
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="UniqueId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Transaction-specific identification number for tracking in an accounting system. 
<br /><br />
Optional
<br /><br />
Character length and limitations: 30 single-byte characters. No whitespace allowed.
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Note" type="xs:string">
            <xs:annotation>
              <xs:documentation>Custom note for each recipient. 
<br /><br />
Optional
<br /><br />
Character length and limitations: 4,000 single-byte alphanumeric characters
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="BAUpdateRequest" type="ns:BAUpdateRequestType" />
      <xs:element name="BAUpdateResponse" type="ns:BAUpdateResponseType" />
      <xs:element name="BillAgreementUpdateReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BAUpdateRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BAUpdateRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="ReferenceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BillingAgreementDescription" type="xs:string">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BillingAgreementStatus" type="ebl:MerchantPullStatusCodeType">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BillingAgreementCustom" type="xs:string">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="BillingAgreementType" type="ebl:BillingCodeType">
                <xs:annotation>
                  <xs:documentation>
										Billing Agreement Type to change the billing agreement type to. ChannelInitiatedBillingAgreement is the only valid value. All other values are ignored.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BAUpdateResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:BAUpdateResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="AddressVerifyRequest" type="ns:AddressVerifyRequestType" />
      <xs:element name="AddressVerifyResponse" type="ns:AddressVerifyResponseType" />
      <xs:element name="AddressVerifyReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:AddressVerifyRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="AddressVerifyRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Email" type="ebl:EmailAddressType">
                <xs:annotation>
                  <xs:documentation>Email address of buyer to be verified. 
<br /><br /><b>Required</b><br /><br />
Maximum string length: 255 single-byte characters Input mask: ?@?.??

</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Street" type="xs:string">
                <xs:annotation>
                  <xs:documentation>First line of buyer’s billing or shipping street address to be verified. 
<br /><br /><b>Required</b><br /><br />For verification, input value of street address must match the first three single-byte characters of the street address on file for the PayPal account.
<br /><br />
Maximum string length: 35 single-byte characters Alphanumeric plus - , . ‘ # \ Whitespace and case of input value are ignored.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Zip" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Postal code to be verified. 
<br /><br /><b>Required</b><br /><br />

For verification, input value of postal code must match the first five single-byte characters of the postal code on file for the PayPal account.
<br /><br />
Maximum string length: 16 single-byte characters Whitespace and case of input value are ignored.
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AddressVerifyResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="ConfirmationCode" type="ebl:AddressStatusCodeType">
                <xs:annotation>
                  <xs:documentation>Confirmation of a match, with one of the following tokens:
							<br /><br />
None: The input value of the Email object does not match any email address on file at PayPal.
	<br /><br />
Confirmed: If the value of the StreetMatch object is Matched, PayPal responds that the entire postal address is confirmed.
	<br /><br />
Unconfirmed: PayPal responds that the postal address is unconfirmed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="StreetMatch" type="ebl:MatchStatusCodeType">
                <xs:annotation>
                  <xs:documentation>PayPal has compared the postal address you want to verify with the postal address on file at PayPal.
								<br /><br />
								None: The input value of the Email object does not match any email address on file at PayPal. In addition, an error response is returned. No further comparison of other input values has been made.
									<br /><br />
Matched: The street address matches the street address on file at PayPal.
	<br /><br />
Unmatched: The street address does not match the street address on file at PayPal. 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ZipMatch" type="ebl:MatchStatusCodeType">
                <xs:annotation>
                  <xs:documentation>PayPal has compared the zip code you want to verify with the zip code on file for the email address. 
								<br /><br />
								None: The street address was unmatched. No further comparison of other input values has been made.
																<br /><br />Matched: The zip code matches the zip code on file at PayPal.
																								<br /><br />Unmatched: The zip code does not match the zip code on file at PayPal. 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="CountryCode" type="ebl:CountryCodeType">
                <xs:annotation>
                  <xs:documentation>Two-character country code (ISO 3166) on file for the PayPal email address. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="PayPalToken" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The token prevents a buyer from using any street address other than the address on file at PayPal during additional purchases he might make from the merchant. It contains encrypted information about the user’s street address and email address. You can pass the value of the token with the Buy Now button HTML address_api_token variable so that PayPal prevents the buyer from using any street address or email address other than those verified by PayPal. The token is valid for 24 hours. 
								<br />
Character length and limitations: 94 single-byte characters
								</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EnterBoardingRequest" type="ns:EnterBoardingRequestType" />
      <xs:element name="EnterBoardingResponse" type="ns:EnterBoardingResponseType" />
      <xs:element name="EnterBoardingReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:EnterBoardingRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EnterBoardingRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:EnterBoardingRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EnterBoardingResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation>
								A unique token that identifies this boarding session. 
Use this token with the GetBoarding Details API call.
<br /><br />
Character length and limitations: 64 alphanumeric characters. The token has the following format:
<br /><br />
OB-61characterstring</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetBoardingDetailsRequest" type="ns:GetBoardingDetailsRequestType" />
      <xs:element name="GetBoardingDetailsResponse" type="ns:GetBoardingDetailsResponseType" />
      <xs:element name="GetBoardingDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetBoardingDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetBoardingDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation>
								A unique token returned by the EnterBoarding API call that identifies this boarding session. 
<br /><br /><b>Required</b><br /><br />
Character length and limitations: 64 alphanumeric characters. The token has the following format:
<br /><br />
OB-61characterstring</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetBoardingDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetBoardingDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SetAuthFlowParamRequest" type="ns:SetAuthFlowParamRequestType" />
      <xs:element name="SetAuthFlowParamResponse" type="ns:SetAuthFlowParamResponseType" />
      <xs:element name="SetAuthFlowParamReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:SetAuthFlowParamRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SetAuthFlowParamRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:SetAuthFlowParamRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetAuthFlowParamResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token by which you identify to PayPal that you are processing this user. The token expires after three hours.
								<br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAuthDetailsRequest" type="ns:GetAuthDetailsRequestType" />
      <xs:element name="GetAuthDetailsResponse" type="ns:GetAuthDetailsResponseType" />
      <xs:element name="GetAuthDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetAuthDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetAuthDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token, the value of which was returned by SetAuthFlowParam Response. 
<br /><br /><b>Required</b><br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetAuthDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetAuthDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SetAccessPermissionsRequest" type="ns:SetAccessPermissionsRequestType" />
      <xs:element name="SetAccessPermissionsResponse" type="ns:SetAccessPermissionsResponseType" />
      <xs:element name="SetAccessPermissionsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:SetAccessPermissionsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SetAccessPermissionsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:SetAccessPermissionsRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetAccessPermissionsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token by which you identify to PayPal that you are processing this user. The token expires after three hours.
								<br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateAccessPermissionsRequest" type="ns:UpdateAccessPermissionsRequestType" />
      <xs:element name="UpdateAccessPermissionsResponse" type="ns:UpdateAccessPermissionsResponseType" />
      <xs:element name="UpdateAccessPermissionsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:UpdateAccessPermissionsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="UpdateAccessPermissionsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="PayerID" type="ebl:UserIDType">
                <xs:annotation>
                  <xs:documentation>Unique PayPal customer account number, the value of which was returned by GetAuthDetails Response.
									<br /><br /><b>Required</b><br /><br />
									Character length and limitations: 20 single-byte characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateAccessPermissionsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Status" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The status of the update call, Success/Failure.
									<br /><br />
									Character length and limitations: 20 single-byte characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetAccessPermissionDetailsRequest" type="ns:GetAccessPermissionDetailsRequestType" />
      <xs:element name="GetAccessPermissionDetailsResponse" type="ns:GetAccessPermissionDetailsResponseType" />
      <xs:element name="GetAccessPermissionDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetAccessPermissionDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetAccessPermissionDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:AuthFlowTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token, the value of which was returned by SetAuthFlowParam Response. 
									<br /><br /><b>Required</b><br /><br />
									Character length and limitations: 20 single-byte characters
								</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetAccessPermissionDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetAccessPermissionDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetIncentiveEvaluationRequest" type="ns:GetIncentiveEvaluationRequestType" />
      <xs:element name="GetIncentiveEvaluationResponse" type="ns:GetIncentiveEvaluationResponseType" />
      <xs:element name="GetIncentiveEvaluationReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetIncentiveEvaluationRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetIncentiveEvaluationRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetIncentiveEvaluationRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetIncentiveEvaluationResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetIncentiveEvaluationResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SetExpressCheckoutRequest" type="ns:SetExpressCheckoutRequestType" />
      <xs:element name="SetExpressCheckoutResponse" type="ns:SetExpressCheckoutResponseType" />
      <xs:element name="SetExpressCheckoutReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:SetExpressCheckoutRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SetExpressCheckoutRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:SetExpressCheckoutRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetExpressCheckoutResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token by which you identify to PayPal that you are processing this payment with Express Checkout. The token expires after three hours. If you set Token in the SetExpressCheckoutRequest, the value of Token in the response is identical to the value in the request. 
								<br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ExecuteCheckoutOperationsRequest" type="ns:ExecuteCheckoutOperationsRequestType" />
      <xs:element name="ExecuteCheckoutOperationsResponse" type="ns:ExecuteCheckoutOperationsResponseType" />
      <xs:element name="ExecuteCheckoutOperationsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:ExecuteCheckoutOperationsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ExecuteCheckoutOperationsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:ExecuteCheckoutOperationsRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExecuteCheckoutOperationsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:ExecuteCheckoutOperationsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetExpressCheckoutDetailsRequest" type="ns:GetExpressCheckoutDetailsRequestType" />
      <xs:element name="GetExpressCheckoutDetailsResponse" type="ns:GetExpressCheckoutDetailsResponseType" />
      <xs:element name="GetExpressCheckoutDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetExpressCheckoutDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetExpressCheckoutDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation>A timestamped token, the value of which was returned by SetExpressCheckoutResponse. 
<br /><br /><b>Required</b><br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetExpressCheckoutDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetExpressCheckoutDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoExpressCheckoutPaymentRequest" type="ns:DoExpressCheckoutPaymentRequestType" />
      <xs:element name="DoExpressCheckoutPaymentResponse" type="ns:DoExpressCheckoutPaymentResponseType" />
      <xs:element name="DoExpressCheckoutPaymentReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoExpressCheckoutPaymentRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoExpressCheckoutPaymentRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoExpressCheckoutPaymentRequestDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="ReturnFMFDetails" type="xs:int">
                <xs:annotation>
                  <xs:documentation>This flag indicates that the response should include FMFDetails</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoExpressCheckoutPaymentResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoExpressCheckoutPaymentResponseDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="FMFDetails" type="ebl:FMFDetailsType" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoUATPExpressCheckoutPaymentRequest" type="ns:DoUATPExpressCheckoutPaymentRequestType" />
      <xs:element name="DoUATPExpressCheckoutPaymentResponse" type="ns:DoUATPExpressCheckoutPaymentResponseType" />
      <xs:element name="DoUATPExpressCheckoutPaymentReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoUATPExpressCheckoutPaymentRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoUATPExpressCheckoutPaymentRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ns:DoExpressCheckoutPaymentRequestType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoUATPExpressCheckoutPaymentResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ns:DoExpressCheckoutPaymentResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:UATPDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ManagePendingTransactionStatusRequest" type="ns:ManagePendingTransactionStatusRequestType" />
      <xs:element name="ManagePendingTransactionStatusResponse" type="ns:ManagePendingTransactionStatusResponseType" />
      <xs:element name="ManagePendingTransactionStatusReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:ManagePendingTransactionStatusRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ManagePendingTransactionStatusRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="TransactionID" type="ebl:TransactionId" />
              <xs:element minOccurs="1" maxOccurs="1" name="Action" type="ebl:FMFPendingTransactionActionType" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ManagePendingTransactionStatusResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="ebl:TransactionId" />
              <xs:element minOccurs="0" maxOccurs="1" name="Status" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoDirectPaymentRequest" type="ns:DoDirectPaymentRequestType" />
      <xs:element name="DoDirectPaymentResponse" type="ns:DoDirectPaymentResponseType" />
      <xs:element name="DoDirectPaymentReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoDirectPaymentRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoDirectPaymentRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoDirectPaymentRequestDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="ReturnFMFDetails" type="xs:int">
                <xs:annotation>
                  <xs:documentation>This flag indicates that the response should include FMFDetails</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoDirectPaymentResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
							The amount of the payment as specified by you on DoDirectPaymentRequest.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="AVSCode" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
					Address Verification System response code. Character limit: One single-byte alphanumeric character
				<table><tr><th>AVS Code</th><th>Meaning</th><th>Matched Details</th></tr><tr><td>A </td><td>Address</td><td>Address only (no ZIP) </td></tr><tr><td>B </td><td>International “A”</td><td>Address only (no ZIP)</td></tr><tr><td>C</td><td>International “N”</td><td> None </td></tr><tr><td>D</td><td>International “X” </td><td>Address and Postal Code</td></tr><tr><td>E </td><td>Not allowed for MOTO (Internet/Phone) transactions </td><td>Not applicable</td></tr><tr><td>F </td><td>UK-specific “X”</td><td>Address and Postal Code </td></tr><tr><td>G </td><td>Global Unavailable</td><td> Not applicable </td></tr><tr><td>I </td><td>International Unavailable</td><td>Not applicable </td></tr><tr><td>N </td><td>No</td><td>None</td></tr><tr><td>P</td><td>Postal (International “Z”)</td><td>Postal Code only (no Address) </td></tr><tr><td>R</td><td>Retry</td><td>Not applicable</td></tr><tr><td>S </td><td>Service not Supported </td><td>Not applicable </td></tr><tr><td>U </td><td>Unavailable</td><td>Not applicable </td></tr><tr><td>W </td><td>Whole ZIP</td><td>Nine-digit ZIP code (no Address) </td></tr><tr><td>X </td><td>Exact match </td><td>Address and nine-digit ZIP code</td></tr><tr><td>Y </td><td>Yes</td><td>Address and five-digit ZIP</td></tr><tr><td>Z </td><td>ZIP</td><td> Five-digit ZIP code (no Address)</td></tr><tr><td>All others </td><td>Error Not applicable</td><td></td></tr></table></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="CVV2Code" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Result of the CVV2 check by PayPal.
								<table><tr><th>CVV2 Code</th><th>Meaning</th><th>Matched Details</th></tr><tr><td>M </td><td>Match</td><td>CVV2 </td></tr><tr><td>N </td><td>No match </td><td>None</td></tr><tr><td>P </td><td>Not Processed</td><td>Not applicable</td></tr><tr><td>S</td><td>Service not Supported</td><td>Not applicable</td></tr><tr><td>U </td><td>Unavailable</td><td>Not applicable</td></tr><tr><td>X</td><td>No response</td><td>  Not applicable</td></tr><tr><td>All others </td><td>Error</td><td>Not applicable </td></tr></table></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="ebl:TransactionId">
                <xs:annotation>
                  <xs:documentation>
							Transaction identification number.
							<br /><br />
							Character length and limitations: 19 characters maximum.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionPendingReason" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										pending reason for IC+ interchange plus
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PendingReason" type="ebl:PendingStatusCodeType">
                <xs:annotation>
                  <xs:documentation>
							The reason why a particular transaction went in pending.
							</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PaymentStatus" type="ebl:PaymentStatusCodeType">
                <xs:annotation>
                  <xs:documentation>
							This will identify the actual transaction status.
							</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="FMFDetails" type="ebl:FMFDetailsType" />
              <xs:element minOccurs="0" maxOccurs="1" name="ThreeDSecureResponse" type="ebl:ThreeDSecureResponseType" />
              <xs:element minOccurs="0" maxOccurs="1" name="PaymentAdviceCode" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
							    	Response code from the processor when a recurring transaction is declined.
						  		</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoCancelRequest" type="ns:DoCancelRequestType" />
      <xs:element name="DoCancelResponse" type="ns:DoCancelResponseType" />
      <xs:element name="DoCancelReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoCancelRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoCancelRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="CancelMsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Msg Sub Id that was used for the orginal operation. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="APIType" type="ebl:APIType">
                <xs:annotation>
                  <xs:documentation>Original API's type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
											<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoCancelResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Return msgsubid back to merchant</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoCaptureRequest" type="ns:DoCaptureRequestType" />
      <xs:element name="DoCaptureResponse" type="ns:DoCaptureResponseType" />
      <xs:element name="DoCaptureReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoCaptureRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoCaptureRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="AuthorizationID" type="ebl:AuthorizationId">
                <xs:annotation>
                  <xs:documentation>The authorization identification number of the payment you want to capture. 
<br /><br /><b>Required</b><br /><br />
Character length and limits: 19 single-byte characters maximum
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount to authorize. You must set the currencyID attribute to USD. 
<br /><br /><b>Required</b><br /><br />
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,)
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="CompleteType" type="ebl:CompleteCodeType">
                <xs:annotation>
                  <xs:documentation>Indicates if this capture is the last capture you intend to make. The default is Complete. If CompleteType is Complete, any remaining amount of the original reauthorized transaction is automatically voided. 
<br /><br /><b>Required</b><br /><br />
Character length and limits: 12 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Note" type="xs:string">
                <xs:annotation>
                  <xs:documentation>An informational note about this settlement that is displayed to the payer in email and in  transaction history. 
<br /><br />
Optional
<br /><br />
Character length and limits: 255 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InvoiceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Your invoice number or other identification number. 
<br /><br />
The InvoiceID value is recorded only if the authorization you are capturing is an order authorization, not a basic authorization.
<br /><br />
Optional
<br /><br />
Character length and limits: 127 single-byte alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:EnhancedData">
                <xs:annotation>
                  <xs:documentation>Contains enhanced data like airline itinerary information.
										<br /><br /><b>Not Required</b><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Descriptor" type="xs:string">
                <xs:annotation>
                  <xs:documentation>dynamic descriptor
										<br /><br />
Dynamic descriptor is used for merchant to provide detail of a transaction appears on statement
										<br /><br /><b>Optional</b><br /><br />
Character length and limits: &lt;18 characters alphanumeric characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:MerchantStoreDetails">
                <xs:annotation>
                  <xs:documentation>To pass the Merchant store information<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:MerchantData">
                <xs:annotation>
                  <xs:documentation>This holds key-value pair which merchants wants to pass it to the open wallet-PLCC processor<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoCaptureResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoCaptureResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoReauthorizationRequest" type="ns:DoReauthorizationRequestType" />
      <xs:element name="DoReauthorizationResponse" type="ns:DoReauthorizationResponseType" />
      <xs:element name="DoReauthorizationReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoReauthorizationRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoReauthorizationRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="AuthorizationID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The value of a previously authorized transaction identification number returned by a PayPal product. You can obtain a buyer's transaction number from the TransactionID element of the PayerInfo structure returned by GetTransactionDetailsResponse. 
<br /><br /><b>Required</b><br /><br />
Character length and limits: 19 single-byte characters maximum
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount to reauthorize. 
<br /><br /><b>Required</b><br /><br />
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoReauthorizationResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="AuthorizationID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>A new authorization identification number.
								<br /><br />Character length and limits: 19 single-byte characters 
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:AuthorizationInfo" />
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Return msgsubid back to merchant</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoVoidRequest" type="ns:DoVoidRequestType" />
      <xs:element name="DoVoidResponse" type="ns:DoVoidResponseType" />
      <xs:element name="DoVoidReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoVoidRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoVoidRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="AuthorizationID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The value of the original authorization identification number returned by a PayPal product. 
<br /><br />
If you are voiding a transaction that has been reauthorized, use the ID from the original authorization, and not the reauthorization.
<br /><br /><b>Required</b><br /><br />
Character length and limits: 19 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Note" type="xs:string">
                <xs:annotation>
                  <xs:documentation>An informational note about this settlement that is displayed to the payer in email and in  transaction history. 
<br /><br />
Optional
<br /><br />
Character length and limits: 255 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
											<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoVoidResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="AuthorizationID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The authorization identification number you specified in the request. 
<br /><br />
Character length and limits: 19 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Return msgsubid back to merchant</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoAuthorizationRequest" type="ns:DoAuthorizationRequestType" />
      <xs:element name="DoAuthorizationResponse" type="ns:DoAuthorizationResponseType" />
      <xs:element name="DoAuthorizationReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoAuthorizationRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoAuthorizationRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="TransactionID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The value of the order’s transaction identification number returned by a PayPal product. 
<br /><br /><b>Required</b><br /><br />Character length and limits: 19 single-byte characters maximum
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionEntity" type="ebl:TransactionEntityType">
                <xs:annotation>
                  <xs:documentation>Type of transaction to authorize. The only allowable value is <b>Order</b>, which means that the transaction represents a customer order that can be fulfilled over 29 days. 
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount to authorize. 
<br /><br /><b>Required</b><br /><br />
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:ShipToAddress">
                <xs:annotation>
                  <xs:documentation>
										Address the order will be shipped to.
										<br /><br />
										Optional
										<br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="ebl:PaymentDetailsItem">
                <xs:annotation>
                  <xs:documentation>
										Information about the individual purchased items
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ItemTotal" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Sum of cost of all items in this order.
										You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies.
										<br /><br />
										Optional
										<br /><br />Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
										<br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ShippingTotal" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Total shipping costs for this order.
										You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies.
										<br /><br />
										Optional
										<br /><br />Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="HandlingTotal" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Total handling costs for this order.
										You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies.
										<br /><br />
										Optional
										<br /><br />Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TaxTotal" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Sum of tax for all items in this order.
										You must set the currencyID attribute to one of the three-character currency codes for any of the supported PayPal currencies.
										<br /><br />
										Optional
										<br /><br />Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InsuranceTotal" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Total shipping insurance costs for this order.<br />
										Optional<br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ShippingDiscount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
										Shipping discount for this order, specified as a negative number.<br />
										Optional<br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="OrderDescription" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										Description of items the customer is purchasing.
										<br /><br />
										Optional
										<br /><br />Character length and limitations: 127 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Custom" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										A free-form field for your own use.
										<br /><br />
										Optional
										<br /><br />Character length and limitations: 256 single-byte alphanumeric characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="IPAddress" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										IP Address of the buyer
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ShipToStore" type="xs:string">
                <xs:annotation>
                  <xs:documentation>A flag indicating that this transaction is a Ship to Store transaction.
									<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoAuthorizationResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>An authorization identification number. 
								<br /><br />
Character length and limits: 19 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>
									The amount and currency you specified in the request. 
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:AuthorizationInfo" />
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Return msgsubid back to merchant</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateAuthorizationRequest" type="ns:UpdateAuthorizationRequestType" />
      <xs:element name="UpdateAuthorizationResponse" type="ns:UpdateAuthorizationResponseType" />
      <xs:element name="UpdateAuthorizationReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:UpdateAuthorizationRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="UpdateAuthorizationRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="TransactionID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>The value of the authorizationâtransaction identification number returned by a PayPal product.
										<br /><br /><b>Required</b><br /><br />Character length and limits: 19 single-byte characters maximum
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:ShipToAddress">
                <xs:annotation>
                  <xs:documentation>
										Shipping Address for this transaction.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="IPAddress" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										IP Address of the buyer
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ShipToStore" type="xs:string">
                <xs:annotation>
                  <xs:documentation>A flag indicating that this transaction is a Ship to Store transaction.
									<br /><br /><b>Optional</b></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateAuthorizationResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>An authorization identification number.
										<br /><br />
										Character length and limits: 19 single-byte characters
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" ref="ebl:AuthorizationInfo" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoUATPAuthorizationRequest" type="ns:DoUATPAuthorizationRequestType" />
      <xs:element name="DoUATPAuthorizationResponse" type="ns:DoUATPAuthorizationResponseType" />
      <xs:element name="DoUATPAuthorizationReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoUATPAuthorizationRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoUATPAuthorizationRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:UATPDetails">
                <xs:annotation>
                  <xs:documentation>UATP card details
<br /><br /><b>Required</b><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="TransactionEntity" type="ebl:TransactionEntityType">
                <xs:annotation>
                  <xs:documentation>Type of transaction to authorize. The only allowable value is <b>Order</b>, which means that the transaction represents a customer order that can be fulfilled over 29 days. 
<br /><br />
Optional
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="Amount" type="cc:BasicAmountType">
                <xs:annotation>
                  <xs:documentation>Amount to authorize. 
<br /><br /><b>Required</b><br /><br />
Limitations: Must not exceed $10,000 USD in any currency. No currency symbol. Decimal separator must be a period (.), and the thousands separator must be a comma (,).
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InvoiceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation> Invoice ID. A pass through.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoUATPAuthorizationResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ns:DoAuthorizationResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:UATPDetails" />
              <xs:element minOccurs="1" maxOccurs="1" name="AuthorizationCode" type="xs:string">
                <xs:annotation>
                  <xs:documentation> Auth Authorization Code.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="InvoiceID" type="xs:string">
                <xs:annotation>
                  <xs:documentation> Invoice ID. A pass through.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="MsgSubID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Unique id for each API request to prevent duplicate payments.
										<br /><br /><b>Optional</b><br />Character length and limits: 38 single-byte characters maximum.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateMobilePaymentRequest" type="ns:CreateMobilePaymentRequestType" />
      <xs:element name="CreateMobilePaymentResponse" type="ns:CreateMobilePaymentResponseType" />
      <xs:element name="CreateMobilePaymentReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:CreateMobilePaymentRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CreateMobilePaymentRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:CreateMobilePaymentRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreateMobilePaymentResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetMobileStatusRequest" type="ns:GetMobileStatusRequestType" />
      <xs:element name="GetMobileStatusResponse" type="ns:GetMobileStatusResponseType" />
      <xs:element name="GetMobileStatusReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetMobileStatusRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetMobileStatusRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetMobileStatusRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetMobileStatusResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="IsActivated" type="xs:integer">
                <xs:annotation>
                  <xs:documentation>Indicates whether the phone is activated for mobile payments
<br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="IsPasswordSet" type="xs:integer">
                <xs:annotation>
                  <xs:documentation>Indicates whether the password is enabled for particular account
<br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="1" maxOccurs="1" name="PaymentPending" type="xs:integer">
                <xs:annotation>
                  <xs:documentation>Indicates whether there is a payment pending from the phone
<br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SetMobileCheckoutRequest" type="ns:SetMobileCheckoutRequestType" />
      <xs:element name="SetMobileCheckoutResponse" type="ns:SetMobileCheckoutResponseType" />
      <xs:element name="SetMobileCheckoutReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:SetMobileCheckoutRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SetMobileCheckoutRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:SetMobileCheckoutRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetMobileCheckoutResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="xs:string">
                <xs:annotation>
                  <xs:documentation>A timestamped token by which you identify to PayPal that you are processing this payment with Mobile Checkout. The token expires after three hours.
								<br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoMobileCheckoutPaymentRequest" type="ns:DoMobileCheckoutPaymentRequestType" />
      <xs:element name="DoMobileCheckoutPaymentResponse" type="ns:DoMobileCheckoutPaymentResponseType" />
      <xs:element name="DoMobileCheckoutPaymentReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoMobileCheckoutPaymentRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoMobileCheckoutPaymentRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="xs:string">
                <xs:annotation>
                  <xs:documentation>A timestamped token, the value of which was returned by SetMobileCheckoutResponse. 
<br /><br /><b>Required</b><br /><br />
Character length and limitations: 20 single-byte characters
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoMobileCheckoutPaymentResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoMobileCheckoutPaymentResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetBalanceRequest" type="ns:GetBalanceRequestType" />
      <xs:element name="GetBalanceResponse" type="ns:GetBalanceResponseType" />
      <xs:element name="GetBalanceReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetBalanceRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetBalanceRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="1" name="ReturnAllCurrencies" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetBalanceResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Balance" type="cc:BasicAmountType" />
              <xs:element minOccurs="1" maxOccurs="1" name="BalanceTimeStamp" type="xs:dateTime" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="BalanceHoldings" type="cc:BasicAmountType" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SetCustomerBillingAgreementRequest" type="ns:SetCustomerBillingAgreementRequestType" />
      <xs:element name="SetCustomerBillingAgreementResponse" type="ns:SetCustomerBillingAgreementResponseType" />
      <xs:element name="SetCustomerBillingAgreementReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:SetCustomerBillingAgreementRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SetCustomerBillingAgreementRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:SetCustomerBillingAgreementRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetCustomerBillingAgreementResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetBillingAgreementCustomerDetailsRequest" type="ns:GetBillingAgreementCustomerDetailsRequestType" />
      <xs:element name="GetBillingAgreementCustomerDetailsResponse" type="ns:GetBillingAgreementCustomerDetailsResponseType" />
      <xs:element name="GetBillingAgreementCustomerDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetBillingAgreementCustomerDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetBillingAgreementCustomerDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetBillingAgreementCustomerDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:GetBillingAgreementCustomerDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateBillingAgreementRequest" type="ns:CreateBillingAgreementRequestType" />
      <xs:element name="CreateBillingAgreementResponse" type="ns:CreateBillingAgreementResponseType" />
      <xs:element name="CreateBillingAgreementReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:CreateBillingAgreementRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CreateBillingAgreementRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Token" type="ebl:ExpressCheckoutTokenType">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreateBillingAgreementResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="BillingAgreementID" type="xs:string">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoReferenceTransactionRequest" type="ns:DoReferenceTransactionRequestType" />
      <xs:element name="DoReferenceTransactionResponse" type="ns:DoReferenceTransactionResponseType" />
      <xs:element name="DoReferenceTransactionReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoReferenceTransactionRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoReferenceTransactionRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoReferenceTransactionRequestDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="ReturnFMFDetails" type="xs:int">
                <xs:annotation>
                  <xs:documentation>This flag indicates that the response should include FMFDetails</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoReferenceTransactionResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoReferenceTransactionResponseDetails" />
              <xs:element minOccurs="0" maxOccurs="1" name="FMFDetails" type="ebl:FMFDetailsType" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="DoNonReferencedCreditRequest" type="ns:DoNonReferencedCreditRequestType" />
      <xs:element name="DoNonReferencedCreditResponse" type="ns:DoNonReferencedCreditResponseType" />
      <xs:element name="DoNonReferencedCreditReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:DoNonReferencedCreditRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DoNonReferencedCreditRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoNonReferencedCreditRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DoNonReferencedCreditResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:DoNonReferencedCreditResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="CreateRecurringPaymentsProfileRequest" type="ns:CreateRecurringPaymentsProfileRequestType" />
      <xs:element name="CreateRecurringPaymentsProfileResponse" type="ns:CreateRecurringPaymentsProfileResponseType" />
      <xs:element name="CreateRecurringPaymentsProfileReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:CreateRecurringPaymentsProfileRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CreateRecurringPaymentsProfileRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element ref="ebl:CreateRecurringPaymentsProfileRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreateRecurringPaymentsProfileResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:CreateRecurringPaymentsProfileResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetRecurringPaymentsProfileDetailsRequest" type="ns:GetRecurringPaymentsProfileDetailsRequestType" />
      <xs:element name="GetRecurringPaymentsProfileDetailsResponse" type="ns:GetRecurringPaymentsProfileDetailsResponseType" />
      <xs:element name="GetRecurringPaymentsProfileDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetRecurringPaymentsProfileDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetRecurringPaymentsProfileDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="ProfileID" type="xs:string">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetRecurringPaymentsProfileDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:GetRecurringPaymentsProfileDetailsResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ManageRecurringPaymentsProfileStatusRequest" type="ns:ManageRecurringPaymentsProfileStatusRequestType" />
      <xs:element name="ManageRecurringPaymentsProfileStatusResponse" type="ns:ManageRecurringPaymentsProfileStatusResponseType" />
      <xs:element name="ManageRecurringPaymentsProfileStatusReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:ManageRecurringPaymentsProfileStatusRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ManageRecurringPaymentsProfileStatusRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element ref="ebl:ManageRecurringPaymentsProfileStatusRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ManageRecurringPaymentsProfileStatusResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:ManageRecurringPaymentsProfileStatusResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="BillOutstandingAmountRequest" type="ns:BillOutstandingAmountRequestType" />
      <xs:element name="BillOutstandingAmountResponse" type="ns:BillOutstandingAmountResponseType" />
      <xs:element name="BillOutstandingAmountReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:BillOutstandingAmountRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="BillOutstandingAmountRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element ref="ebl:BillOutstandingAmountRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BillOutstandingAmountResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:BillOutstandingAmountResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="UpdateRecurringPaymentsProfileRequest" type="ns:UpdateRecurringPaymentsProfileRequestType" />
      <xs:element name="UpdateRecurringPaymentsProfileResponse" type="ns:UpdateRecurringPaymentsProfileResponseType" />
      <xs:element name="UpdateRecurringPaymentsProfileReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:UpdateRecurringPaymentsProfileRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="UpdateRecurringPaymentsProfileRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element ref="ebl:UpdateRecurringPaymentsProfileRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateRecurringPaymentsProfileResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element ref="ebl:UpdateRecurringPaymentsProfileResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetPalDetailsRequest" type="ns:GetPalDetailsRequestType" />
      <xs:element name="GetPalDetailsResponse" type="ns:GetPalDetailsResponseType" />
      <xs:element name="GetPalDetailsReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:GetPalDetailsRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="GetPalDetailsRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GetPalDetailsResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="Pal" type="xs:string" />
              <xs:element minOccurs="1" maxOccurs="1" name="Locale" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ReverseTransactionRequest" type="ns:ReverseTransactionRequestType" />
      <xs:element name="ReverseTransactionResponse" type="ns:ReverseTransactionResponseType" />
      <xs:element name="ReverseTransactionReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:ReverseTransactionRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ReverseTransactionRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:ReverseTransactionRequestDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReverseTransactionResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" ref="ebl:ReverseTransactionResponseDetails" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="ExternalRememberMeOptOutRequest" type="ns:ExternalRememberMeOptOutRequestType" />
      <xs:element name="ExternalRememberMeOptOutResponse" type="ns:ExternalRememberMeOptOutResponseType" />
      <xs:element name="ExternalRememberMeOptOutReq">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="ns:ExternalRememberMeOptOutRequest" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ExternalRememberMeOptOutRequestType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="1" maxOccurs="1" name="ExternalRememberMeID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
										The merchant passes in the ExternalRememberMeID to identify the user to opt out.  This is a 17-character
										alphanumeric (encrypted) string that identifies the buyer's remembered login with a merchant and has
										meaning only to the merchant.
										<br /><br /><b>Required</b><br /><br /></xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="1" name="ExternalRememberMeOwnerDetails" type="ebl:ExternalRememberMeOwnerDetailsType">
                <xs:annotation>
                  <xs:documentation>
										E-mail address or secure merchant account ID of merchant to associate with
										external remember-me.
									</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExternalRememberMeOptOutResponseType">
        <xs:complexContent mixed="false">
          <xs:extension base="ebl:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="RequesterCredentials">
    <wsdl:part name="RequesterCredentials" element="ns:RequesterCredentials" />
  </wsdl:message>
  <wsdl:message name="RefundTransactionRequest">
    <wsdl:part name="RefundTransactionRequest" element="ns:RefundTransactionReq" />
  </wsdl:message>
  <wsdl:message name="RefundTransactionResponse">
    <wsdl:part name="RefundTransactionResponse" element="ns:RefundTransactionResponse" />
  </wsdl:message>
  <wsdl:message name="InitiateRecoupRequest">
    <wsdl:part name="InitiateRecoupRequest" element="ns:InitiateRecoupReq" />
  </wsdl:message>
  <wsdl:message name="InitiateRecoupResponse">
    <wsdl:part name="InitiateRecoupResponse" element="ns:InitiateRecoupResponse" />
  </wsdl:message>
  <wsdl:message name="CompleteRecoupRequest">
    <wsdl:part name="CompleteRecoupRequest" element="ns:CompleteRecoupReq" />
  </wsdl:message>
  <wsdl:message name="CompleteRecoupResponse">
    <wsdl:part name="CompleteRecoupResponse" element="ns:CompleteRecoupResponse" />
  </wsdl:message>
  <wsdl:message name="CancelRecoupRequest">
    <wsdl:part name="CancelRecoupRequest" element="ns:CancelRecoupReq" />
  </wsdl:message>
  <wsdl:message name="CancelRecoupResponse">
    <wsdl:part name="CancelRecoupResponse" element="ns:CancelRecoupResponse" />
  </wsdl:message>
  <wsdl:message name="GetTransactionDetailsRequest">
    <wsdl:part name="GetTransactionDetailsRequest" element="ns:GetTransactionDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetTransactionDetailsResponse">
    <wsdl:part name="GetTransactionDetailsResponse" element="ns:GetTransactionDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="BMCreateButtonRequest">
    <wsdl:part name="BMCreateButtonRequest" element="ns:BMCreateButtonReq" />
  </wsdl:message>
  <wsdl:message name="BMCreateButtonResponse">
    <wsdl:part name="BMCreateButtonResponse" element="ns:BMCreateButtonResponse" />
  </wsdl:message>
  <wsdl:message name="BMUpdateButtonRequest">
    <wsdl:part name="BMUpdateButtonRequest" element="ns:BMUpdateButtonReq" />
  </wsdl:message>
  <wsdl:message name="BMUpdateButtonResponse">
    <wsdl:part name="BMUpdateButtonResponse" element="ns:BMUpdateButtonResponse" />
  </wsdl:message>
  <wsdl:message name="BMManageButtonStatusRequest">
    <wsdl:part name="BMManageButtonStatusRequest" element="ns:BMManageButtonStatusReq" />
  </wsdl:message>
  <wsdl:message name="BMManageButtonStatusResponse">
    <wsdl:part name="BMManageButtonStatusResponse" element="ns:BMManageButtonStatusResponse" />
  </wsdl:message>
  <wsdl:message name="BMGetButtonDetailsRequest">
    <wsdl:part name="BMGetButtonDetailsRequest" element="ns:BMGetButtonDetailsReq" />
  </wsdl:message>
  <wsdl:message name="BMGetButtonDetailsResponse">
    <wsdl:part name="BMGetButtonDetailsResponse" element="ns:BMGetButtonDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="BMSetInventoryRequest">
    <wsdl:part name="BMSetInventoryRequest" element="ns:BMSetInventoryReq" />
  </wsdl:message>
  <wsdl:message name="BMSetInventoryResponse">
    <wsdl:part name="BMSetInventoryResponse" element="ns:BMSetInventoryResponse" />
  </wsdl:message>
  <wsdl:message name="BMGetInventoryRequest">
    <wsdl:part name="BMGetInventoryRequest" element="ns:BMGetInventoryReq" />
  </wsdl:message>
  <wsdl:message name="BMGetInventoryResponse">
    <wsdl:part name="BMGetInventoryResponse" element="ns:BMGetInventoryResponse" />
  </wsdl:message>
  <wsdl:message name="BMButtonSearchRequest">
    <wsdl:part name="BMButtonSearchRequest" element="ns:BMButtonSearchReq" />
  </wsdl:message>
  <wsdl:message name="BMButtonSearchResponse">
    <wsdl:part name="BMButtonSearchResponse" element="ns:BMButtonSearchResponse" />
  </wsdl:message>
  <wsdl:message name="BillUserRequest">
    <wsdl:part name="BillUserRequest" element="ns:BillUserReq" />
  </wsdl:message>
  <wsdl:message name="BillUserResponse">
    <wsdl:part name="BillUserResponse" element="ns:BillUserResponse" />
  </wsdl:message>
  <wsdl:message name="TransactionSearchRequest">
    <wsdl:part name="TransactionSearchRequest" element="ns:TransactionSearchReq" />
  </wsdl:message>
  <wsdl:message name="TransactionSearchResponse">
    <wsdl:part name="TransactionSearchResponse" element="ns:TransactionSearchResponse" />
  </wsdl:message>
  <wsdl:message name="MassPayRequest">
    <wsdl:part name="MassPayRequest" element="ns:MassPayReq" />
  </wsdl:message>
  <wsdl:message name="MassPayResponse">
    <wsdl:part name="MassPayResponse" element="ns:MassPayResponse" />
  </wsdl:message>
  <wsdl:message name="BillAgreementUpdateRequest">
    <wsdl:part name="BillAgreementUpdateRequest" element="ns:BillAgreementUpdateReq" />
  </wsdl:message>
  <wsdl:message name="BAUpdateResponse">
    <wsdl:part name="body" element="ns:BAUpdateResponse" />
  </wsdl:message>
  <wsdl:message name="AddressVerifyRequest">
    <wsdl:part name="AddressVerifyRequest" element="ns:AddressVerifyReq" />
  </wsdl:message>
  <wsdl:message name="AddressVerifyResponse">
    <wsdl:part name="AddressVerifyResponse" element="ns:AddressVerifyResponse" />
  </wsdl:message>
  <wsdl:message name="EnterBoardingRequest">
    <wsdl:part name="EnterBoardingRequest" element="ns:EnterBoardingReq" />
  </wsdl:message>
  <wsdl:message name="EnterBoardingResponse">
    <wsdl:part name="EnterBoardingResponse" element="ns:EnterBoardingResponse" />
  </wsdl:message>
  <wsdl:message name="GetBoardingDetailsRequest">
    <wsdl:part name="GetBoardingDetailsRequest" element="ns:GetBoardingDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetBoardingDetailsResponse">
    <wsdl:part name="GetBoardingDetailsResponse" element="ns:GetBoardingDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="DoExpressCheckoutPaymentRequest">
    <wsdl:part name="DoExpressCheckoutPaymentRequest" element="ns:DoExpressCheckoutPaymentReq" />
  </wsdl:message>
  <wsdl:message name="DoExpressCheckoutPaymentResponse">
    <wsdl:part name="DoExpressCheckoutPaymentResponse" element="ns:DoExpressCheckoutPaymentResponse" />
  </wsdl:message>
  <wsdl:message name="DoUATPExpressCheckoutPaymentRequest">
    <wsdl:part name="DoUATPExpressCheckoutPaymentRequest" element="ns:DoUATPExpressCheckoutPaymentReq" />
  </wsdl:message>
  <wsdl:message name="DoUATPExpressCheckoutPaymentResponse">
    <wsdl:part name="DoUATPExpressCheckoutPaymentResponse" element="ns:DoUATPExpressCheckoutPaymentResponse" />
  </wsdl:message>
  <wsdl:message name="SetAuthFlowParamRequest">
    <wsdl:part name="SetAuthFlowParamRequest" element="ns:SetAuthFlowParamReq" />
  </wsdl:message>
  <wsdl:message name="SetAuthFlowParamResponse">
    <wsdl:part name="SetAuthFlowParamResponse" element="ns:SetAuthFlowParamResponse" />
  </wsdl:message>
  <wsdl:message name="GetAuthDetailsRequest">
    <wsdl:part name="GetAuthDetailsRequest" element="ns:GetAuthDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetAuthDetailsResponse">
    <wsdl:part name="GetAuthDetailsResponse" element="ns:GetAuthDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="SetAccessPermissionsRequest">
    <wsdl:part name="SetAccessPermissionsRequest" element="ns:SetAccessPermissionsReq" />
  </wsdl:message>
  <wsdl:message name="SetAccessPermissionsResponse">
    <wsdl:part name="SetAccessPermissionsResponse" element="ns:SetAccessPermissionsResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateAccessPermissionsRequest">
    <wsdl:part name="UpdateAccessPermissionsRequest" element="ns:UpdateAccessPermissionsReq" />
  </wsdl:message>
  <wsdl:message name="UpdateAccessPermissionsResponse">
    <wsdl:part name="UpdateAccessPermissionsResponse" element="ns:UpdateAccessPermissionsResponse" />
  </wsdl:message>
  <wsdl:message name="GetAccessPermissionDetailsRequest">
    <wsdl:part name="GetAccessPermissionDetailsRequest" element="ns:GetAccessPermissionDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetAccessPermissionDetailsResponse">
    <wsdl:part name="GetAccessPermissionDetailsResponse" element="ns:GetAccessPermissionDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="GetIncentiveEvaluationRequest">
    <wsdl:part name="GetIncentiveEvaluationRequest" element="ns:GetIncentiveEvaluationReq" />
  </wsdl:message>
  <wsdl:message name="GetIncentiveEvaluationResponse">
    <wsdl:part name="GetIncentiveEvaluationResponse" element="ns:GetIncentiveEvaluationResponse" />
  </wsdl:message>
  <wsdl:message name="SetExpressCheckoutRequest">
    <wsdl:part name="SetExpressCheckoutRequest" element="ns:SetExpressCheckoutReq" />
  </wsdl:message>
  <wsdl:message name="SetExpressCheckoutResponse">
    <wsdl:part name="SetExpressCheckoutResponse" element="ns:SetExpressCheckoutResponse" />
  </wsdl:message>
  <wsdl:message name="ExecuteCheckoutOperationsRequest">
    <wsdl:part name="ExecuteCheckoutOperationsRequest" element="ns:ExecuteCheckoutOperationsReq" />
  </wsdl:message>
  <wsdl:message name="ExecuteCheckoutOperationsResponse">
    <wsdl:part name="ExecuteCheckoutOperationsResponse" element="ns:ExecuteCheckoutOperationsResponse" />
  </wsdl:message>
  <wsdl:message name="GetExpressCheckoutDetailsRequest">
    <wsdl:part name="GetExpressCheckoutDetailsRequest" element="ns:GetExpressCheckoutDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetExpressCheckoutDetailsResponse">
    <wsdl:part name="GetExpressCheckoutDetailsResponse" element="ns:GetExpressCheckoutDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="DoDirectPaymentRequest">
    <wsdl:part name="DoDirectPaymentRequest" element="ns:DoDirectPaymentReq" />
  </wsdl:message>
  <wsdl:message name="DoDirectPaymentResponse">
    <wsdl:part name="DoDirectPaymentResponse" element="ns:DoDirectPaymentResponse" />
  </wsdl:message>
  <wsdl:message name="ManagePendingTransactionStatusRequest">
    <wsdl:part name="ManagePendingTransactionStatusRequest" element="ns:ManagePendingTransactionStatusReq" />
  </wsdl:message>
  <wsdl:message name="ManagePendingTransactionStatusResponse">
    <wsdl:part name="ManagePendingTransactionStatusResponse" element="ns:ManagePendingTransactionStatusResponse" />
  </wsdl:message>
  <wsdl:message name="DoCancelRequest">
    <wsdl:part name="DoCancelRequest" element="ns:DoCancelReq" />
  </wsdl:message>
  <wsdl:message name="DoCancelResponse">
    <wsdl:part name="DoCancelResponse" element="ns:DoCancelResponse" />
  </wsdl:message>
  <wsdl:message name="DoCaptureRequest">
    <wsdl:part name="DoCaptureRequest" element="ns:DoCaptureReq" />
  </wsdl:message>
  <wsdl:message name="DoCaptureResponse">
    <wsdl:part name="DoCaptureResponse" element="ns:DoCaptureResponse" />
  </wsdl:message>
  <wsdl:message name="DoReauthorizationRequest">
    <wsdl:part name="DoReauthorizationRequest" element="ns:DoReauthorizationReq" />
  </wsdl:message>
  <wsdl:message name="DoReauthorizationResponse">
    <wsdl:part name="DoReauthorizationResponse" element="ns:DoReauthorizationResponse" />
  </wsdl:message>
  <wsdl:message name="DoVoidRequest">
    <wsdl:part name="DoVoidRequest" element="ns:DoVoidReq" />
  </wsdl:message>
  <wsdl:message name="DoVoidResponse">
    <wsdl:part name="DoVoidResponse" element="ns:DoVoidResponse" />
  </wsdl:message>
  <wsdl:message name="DoAuthorizationRequest">
    <wsdl:part name="DoAuthorizationRequest" element="ns:DoAuthorizationReq" />
  </wsdl:message>
  <wsdl:message name="DoAuthorizationResponse">
    <wsdl:part name="DoAuthorizationResponse" element="ns:DoAuthorizationResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateAuthorizationRequest">
    <wsdl:part name="UpdateAuthorizationRequest" element="ns:UpdateAuthorizationReq" />
  </wsdl:message>
  <wsdl:message name="UpdateAuthorizationResponse">
    <wsdl:part name="UpdateAuthorizationResponse" element="ns:UpdateAuthorizationResponse" />
  </wsdl:message>
  <wsdl:message name="DoUATPAuthorizationRequest">
    <wsdl:part name="DoUATPAuthorizationRequest" element="ns:DoUATPAuthorizationReq" />
  </wsdl:message>
  <wsdl:message name="DoUATPAuthorizationResponse">
    <wsdl:part name="DoUATPAuthorizationResponse" element="ns:DoUATPAuthorizationResponse" />
  </wsdl:message>
  <wsdl:message name="CreateMobilePaymentRequest">
    <wsdl:part name="CreateMobilePaymentRequest" element="ns:CreateMobilePaymentReq" />
  </wsdl:message>
  <wsdl:message name="CreateMobilePaymentResponse">
    <wsdl:part name="CreateMobilePaymentResponse" element="ns:CreateMobilePaymentResponse" />
  </wsdl:message>
  <wsdl:message name="GetMobileStatusRequest">
    <wsdl:part name="GetMobileStatusRequest" element="ns:GetMobileStatusReq" />
  </wsdl:message>
  <wsdl:message name="GetMobileStatusResponse">
    <wsdl:part name="GetMobileStatusResponse" element="ns:GetMobileStatusResponse" />
  </wsdl:message>
  <wsdl:message name="SetCustomerBillingAgreementRequest">
    <wsdl:part name="SetCustomerBillingAgreementRequest" element="ns:SetCustomerBillingAgreementReq" />
  </wsdl:message>
  <wsdl:message name="SetCustomerBillingAgreementResponse">
    <wsdl:part name="SetCustomerBillingAgreementResponse" element="ns:SetCustomerBillingAgreementResponse" />
  </wsdl:message>
  <wsdl:message name="GetBillingAgreementCustomerDetailsRequest">
    <wsdl:part name="GetBillingAgreementCustomerDetailsRequest" element="ns:GetBillingAgreementCustomerDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetBillingAgreementCustomerDetailsResponse">
    <wsdl:part name="GetBillingAgreementCustomerDetailsResponse" element="ns:GetBillingAgreementCustomerDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="CreateBillingAgreementRequest">
    <wsdl:part name="CreateBillingAgreementRequest" element="ns:CreateBillingAgreementReq" />
  </wsdl:message>
  <wsdl:message name="CreateBillingAgreementResponse">
    <wsdl:part name="CreateBillingAgreementResponse" element="ns:CreateBillingAgreementResponse" />
  </wsdl:message>
  <wsdl:message name="DoReferenceTransactionRequest">
    <wsdl:part name="DoReferenceTransactionRequest" element="ns:DoReferenceTransactionReq" />
  </wsdl:message>
  <wsdl:message name="DoReferenceTransactionResponse">
    <wsdl:part name="DoReferenceTransactionResponse" element="ns:DoReferenceTransactionResponse" />
  </wsdl:message>
  <wsdl:message name="DoNonReferencedCreditRequest">
    <wsdl:part name="DoNonReferencedCreditRequest" element="ns:DoNonReferencedCreditReq" />
  </wsdl:message>
  <wsdl:message name="DoNonReferencedCreditResponse">
    <wsdl:part name="DoNonReferencedCreditResponse" element="ns:DoNonReferencedCreditResponse" />
  </wsdl:message>
  <wsdl:message name="SetMobileCheckoutRequest">
    <wsdl:part name="SetMobileCheckoutRequest" element="ns:SetMobileCheckoutReq" />
  </wsdl:message>
  <wsdl:message name="SetMobileCheckoutResponse">
    <wsdl:part name="SetMobileCheckoutResponse" element="ns:SetMobileCheckoutResponse" />
  </wsdl:message>
  <wsdl:message name="DoMobileCheckoutPaymentRequest">
    <wsdl:part name="DoMobileCheckoutPaymentRequest" element="ns:DoMobileCheckoutPaymentReq" />
  </wsdl:message>
  <wsdl:message name="DoMobileCheckoutPaymentResponse">
    <wsdl:part name="DoMobileCheckoutPaymentResponse" element="ns:DoMobileCheckoutPaymentResponse" />
  </wsdl:message>
  <wsdl:message name="GetBalanceRequest">
    <wsdl:part name="GetBalanceRequest" element="ns:GetBalanceReq" />
  </wsdl:message>
  <wsdl:message name="GetBalanceResponse">
    <wsdl:part name="GetBalanceResponse" element="ns:GetBalanceResponse" />
  </wsdl:message>
  <wsdl:message name="GetPalDetailsRequest">
    <wsdl:part name="GetPalDetailsRequest" element="ns:GetPalDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetPalDetailsResponse">
    <wsdl:part name="GetPalDetailsResponse" element="ns:GetPalDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="CreateRecurringPaymentsProfileRequest">
    <wsdl:part name="CreateRecurringPaymentsProfileRequest" element="ns:CreateRecurringPaymentsProfileReq" />
  </wsdl:message>
  <wsdl:message name="CreateRecurringPaymentsProfileResponse">
    <wsdl:part name="CreateRecurringPaymentsProfileResponse" element="ns:CreateRecurringPaymentsProfileResponse" />
  </wsdl:message>
  <wsdl:message name="GetRecurringPaymentsProfileDetailsRequest">
    <wsdl:part name="GetRecurringPaymentsProfileDetailsRequest" element="ns:GetRecurringPaymentsProfileDetailsReq" />
  </wsdl:message>
  <wsdl:message name="GetRecurringPaymentsProfileDetailsResponse">
    <wsdl:part name="GetRecurringPaymentsProfileDetailsResponse" element="ns:GetRecurringPaymentsProfileDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="ManageRecurringPaymentsProfileStatusRequest">
    <wsdl:part name="ManageRecurringPaymentsProfileStatusRequest" element="ns:ManageRecurringPaymentsProfileStatusReq" />
  </wsdl:message>
  <wsdl:message name="ManageRecurringPaymentsProfileStatusResponse">
    <wsdl:part name="ManageRecurringPaymentsProfileStatusResponse" element="ns:ManageRecurringPaymentsProfileStatusResponse" />
  </wsdl:message>
  <wsdl:message name="BillOutstandingAmountRequest">
    <wsdl:part name="BillOutstandingAmountRequest" element="ns:BillOutstandingAmountReq" />
  </wsdl:message>
  <wsdl:message name="BillOutstandingAmountResponse">
    <wsdl:part name="BillOutstandingAmountResponse" element="ns:BillOutstandingAmountResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateRecurringPaymentsProfileRequest">
    <wsdl:part name="UpdateRecurringPaymentsProfileRequest" element="ns:UpdateRecurringPaymentsProfileReq" />
  </wsdl:message>
  <wsdl:message name="UpdateRecurringPaymentsProfileResponse">
    <wsdl:part name="UpdateRecurringPaymentsProfileResponse" element="ns:UpdateRecurringPaymentsProfileResponse" />
  </wsdl:message>
  <wsdl:message name="ReverseTransactionRequest">
    <wsdl:part name="ReverseTransactionRequest" element="ns:ReverseTransactionReq" />
  </wsdl:message>
  <wsdl:message name="ReverseTransactionResponse">
    <wsdl:part name="ReverseTransactionResponse" element="ns:ReverseTransactionResponse" />
  </wsdl:message>
  <wsdl:message name="ExternalRememberMeOptOutRequest">
    <wsdl:part name="ExternalRememberMeOptOutRequest" element="ns:ExternalRememberMeOptOutReq" />
  </wsdl:message>
  <wsdl:message name="ExternalRememberMeOptOutResponse">
    <wsdl:part name="ExternalRememberMeOptOutResponse" element="ns:ExternalRememberMeOptOutResponse" />
  </wsdl:message>
  <wsdl:portType name="PayPalAPIInterface">
    <wsdl:operation name="RefundTransaction">
      <wsdl:input message="ns:RefundTransactionRequest" />
      <wsdl:output message="ns:RefundTransactionResponse" />
    </wsdl:operation>
    <wsdl:operation name="InitiateRecoup">
      <wsdl:input message="ns:InitiateRecoupRequest" />
      <wsdl:output message="ns:InitiateRecoupResponse" />
    </wsdl:operation>
    <wsdl:operation name="CompleteRecoup">
      <wsdl:input message="ns:CompleteRecoupRequest" />
      <wsdl:output message="ns:CompleteRecoupResponse" />
    </wsdl:operation>
    <wsdl:operation name="CancelRecoup">
      <wsdl:input message="ns:CancelRecoupRequest" />
      <wsdl:output message="ns:CancelRecoupResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetTransactionDetails">
      <wsdl:input message="ns:GetTransactionDetailsRequest" />
      <wsdl:output message="ns:GetTransactionDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMCreateButton">
      <wsdl:input message="ns:BMCreateButtonRequest" />
      <wsdl:output message="ns:BMCreateButtonResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMUpdateButton">
      <wsdl:input message="ns:BMUpdateButtonRequest" />
      <wsdl:output message="ns:BMUpdateButtonResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMManageButtonStatus">
      <wsdl:input message="ns:BMManageButtonStatusRequest" />
      <wsdl:output message="ns:BMManageButtonStatusResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMGetButtonDetails">
      <wsdl:input message="ns:BMGetButtonDetailsRequest" />
      <wsdl:output message="ns:BMGetButtonDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMSetInventory">
      <wsdl:input message="ns:BMSetInventoryRequest" />
      <wsdl:output message="ns:BMSetInventoryResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMGetInventory">
      <wsdl:input message="ns:BMGetInventoryRequest" />
      <wsdl:output message="ns:BMGetInventoryResponse" />
    </wsdl:operation>
    <wsdl:operation name="BMButtonSearch">
      <wsdl:input message="ns:BMButtonSearchRequest" />
      <wsdl:output message="ns:BMButtonSearchResponse" />
    </wsdl:operation>
    <wsdl:operation name="BillUser">
      <wsdl:input message="ns:BillUserRequest" />
      <wsdl:output message="ns:BillUserResponse" />
    </wsdl:operation>
    <wsdl:operation name="TransactionSearch">
      <wsdl:input message="ns:TransactionSearchRequest" />
      <wsdl:output message="ns:TransactionSearchResponse" />
    </wsdl:operation>
    <wsdl:operation name="MassPay">
      <wsdl:input message="ns:MassPayRequest" />
      <wsdl:output message="ns:MassPayResponse" />
    </wsdl:operation>
    <wsdl:operation name="BillAgreementUpdate">
      <wsdl:input message="ns:BillAgreementUpdateRequest" />
      <wsdl:output message="ns:BAUpdateResponse" />
    </wsdl:operation>
    <wsdl:operation name="AddressVerify">
      <wsdl:input message="ns:AddressVerifyRequest" />
      <wsdl:output message="ns:AddressVerifyResponse" />
    </wsdl:operation>
    <wsdl:operation name="EnterBoarding">
      <wsdl:input message="ns:EnterBoardingRequest" />
      <wsdl:output message="ns:EnterBoardingResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetBoardingDetails">
      <wsdl:input message="ns:GetBoardingDetailsRequest" />
      <wsdl:output message="ns:GetBoardingDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="CreateMobilePayment">
      <wsdl:input message="ns:CreateMobilePaymentRequest" />
      <wsdl:output message="ns:CreateMobilePaymentResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetMobileStatus">
      <wsdl:input message="ns:GetMobileStatusRequest" />
      <wsdl:output message="ns:GetMobileStatusResponse" />
    </wsdl:operation>
    <wsdl:operation name="SetMobileCheckout">
      <wsdl:input message="ns:SetMobileCheckoutRequest" />
      <wsdl:output message="ns:SetMobileCheckoutResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoMobileCheckoutPayment">
      <wsdl:input message="ns:DoMobileCheckoutPaymentRequest" />
      <wsdl:output message="ns:DoMobileCheckoutPaymentResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetBalance">
      <wsdl:input message="ns:GetBalanceRequest" />
      <wsdl:output message="ns:GetBalanceResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetPalDetails">
      <wsdl:input message="ns:GetPalDetailsRequest" />
      <wsdl:output message="ns:GetPalDetailsResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="PayPalAPIAAInterface">
    <wsdl:operation name="DoExpressCheckoutPayment">
      <wsdl:input message="ns:DoExpressCheckoutPaymentRequest" />
      <wsdl:output message="ns:DoExpressCheckoutPaymentResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoUATPExpressCheckoutPayment">
      <wsdl:input message="ns:DoUATPExpressCheckoutPaymentRequest" />
      <wsdl:output message="ns:DoUATPExpressCheckoutPaymentResponse" />
    </wsdl:operation>
    <wsdl:operation name="SetAuthFlowParam">
      <wsdl:input message="ns:SetAuthFlowParamRequest" />
      <wsdl:output message="ns:SetAuthFlowParamResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetAuthDetails">
      <wsdl:input message="ns:GetAuthDetailsRequest" />
      <wsdl:output message="ns:GetAuthDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="SetAccessPermissions">
      <wsdl:input message="ns:SetAccessPermissionsRequest" />
      <wsdl:output message="ns:SetAccessPermissionsResponse" />
    </wsdl:operation>
    <wsdl:operation name="UpdateAccessPermissions">
      <wsdl:input message="ns:UpdateAccessPermissionsRequest" />
      <wsdl:output message="ns:UpdateAccessPermissionsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetAccessPermissionDetails">
      <wsdl:input message="ns:GetAccessPermissionDetailsRequest" />
      <wsdl:output message="ns:GetAccessPermissionDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetIncentiveEvaluation">
      <wsdl:input message="ns:GetIncentiveEvaluationRequest" />
      <wsdl:output message="ns:GetIncentiveEvaluationResponse" />
    </wsdl:operation>
    <wsdl:operation name="SetExpressCheckout">
      <wsdl:input message="ns:SetExpressCheckoutRequest" />
      <wsdl:output message="ns:SetExpressCheckoutResponse" />
    </wsdl:operation>
    <wsdl:operation name="ExecuteCheckoutOperations">
      <wsdl:input message="ns:ExecuteCheckoutOperationsRequest" />
      <wsdl:output message="ns:ExecuteCheckoutOperationsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetExpressCheckoutDetails">
      <wsdl:input message="ns:GetExpressCheckoutDetailsRequest" />
      <wsdl:output message="ns:GetExpressCheckoutDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoDirectPayment">
      <wsdl:input message="ns:DoDirectPaymentRequest" />
      <wsdl:output message="ns:DoDirectPaymentResponse" />
    </wsdl:operation>
    <wsdl:operation name="ManagePendingTransactionStatus">
      <wsdl:input message="ns:ManagePendingTransactionStatusRequest" />
      <wsdl:output message="ns:ManagePendingTransactionStatusResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoCancel">
      <wsdl:input message="ns:DoCancelRequest" />
      <wsdl:output message="ns:DoCancelResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoCapture">
      <wsdl:input message="ns:DoCaptureRequest" />
      <wsdl:output message="ns:DoCaptureResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoReauthorization">
      <wsdl:input message="ns:DoReauthorizationRequest" />
      <wsdl:output message="ns:DoReauthorizationResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoVoid">
      <wsdl:input message="ns:DoVoidRequest" />
      <wsdl:output message="ns:DoVoidResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoAuthorization">
      <wsdl:input message="ns:DoAuthorizationRequest" />
      <wsdl:output message="ns:DoAuthorizationResponse" />
    </wsdl:operation>
    <wsdl:operation name="UpdateAuthorization">
      <wsdl:input message="ns:UpdateAuthorizationRequest" />
      <wsdl:output message="ns:UpdateAuthorizationResponse" />
    </wsdl:operation>
    <wsdl:operation name="SetCustomerBillingAgreement">
      <wsdl:input message="ns:SetCustomerBillingAgreementRequest" />
      <wsdl:output message="ns:SetCustomerBillingAgreementResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetBillingAgreementCustomerDetails">
      <wsdl:input message="ns:GetBillingAgreementCustomerDetailsRequest" />
      <wsdl:output message="ns:GetBillingAgreementCustomerDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="CreateBillingAgreement">
      <wsdl:input message="ns:CreateBillingAgreementRequest" />
      <wsdl:output message="ns:CreateBillingAgreementResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoReferenceTransaction">
      <wsdl:input message="ns:DoReferenceTransactionRequest" />
      <wsdl:output message="ns:DoReferenceTransactionResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoNonReferencedCredit">
      <wsdl:input message="ns:DoNonReferencedCreditRequest" />
      <wsdl:output message="ns:DoNonReferencedCreditResponse" />
    </wsdl:operation>
    <wsdl:operation name="DoUATPAuthorization">
      <wsdl:input message="ns:DoUATPAuthorizationRequest" />
      <wsdl:output message="ns:DoUATPAuthorizationResponse" />
    </wsdl:operation>
    <wsdl:operation name="CreateRecurringPaymentsProfile">
      <wsdl:input message="ns:CreateRecurringPaymentsProfileRequest" />
      <wsdl:output message="ns:CreateRecurringPaymentsProfileResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetRecurringPaymentsProfileDetails">
      <wsdl:input message="ns:GetRecurringPaymentsProfileDetailsRequest" />
      <wsdl:output message="ns:GetRecurringPaymentsProfileDetailsResponse" />
    </wsdl:operation>
    <wsdl:operation name="ManageRecurringPaymentsProfileStatus">
      <wsdl:input message="ns:ManageRecurringPaymentsProfileStatusRequest" />
      <wsdl:output message="ns:ManageRecurringPaymentsProfileStatusResponse" />
    </wsdl:operation>
    <wsdl:operation name="BillOutstandingAmount">
      <wsdl:input message="ns:BillOutstandingAmountRequest" />
      <wsdl:output message="ns:BillOutstandingAmountResponse" />
    </wsdl:operation>
    <wsdl:operation name="UpdateRecurringPaymentsProfile">
      <wsdl:input message="ns:UpdateRecurringPaymentsProfileRequest" />
      <wsdl:output message="ns:UpdateRecurringPaymentsProfileResponse" />
    </wsdl:operation>
    <wsdl:operation name="ReverseTransaction">
      <wsdl:input message="ns:ReverseTransactionRequest" />
      <wsdl:output message="ns:ReverseTransactionResponse" />
    </wsdl:operation>
    <wsdl:operation name="ExternalRememberMeOptOut">
      <wsdl:input message="ns:ExternalRememberMeOptOutRequest" />
      <wsdl:output message="ns:ExternalRememberMeOptOutResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PayPalAPISoapBinding" type="ns:PayPalAPIInterface">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="RefundTransaction">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InitiateRecoup">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CompleteRecoup">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelRecoup">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMCreateButton">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMUpdateButton">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMSetInventory">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMGetButtonDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMGetInventory">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMManageButtonStatus">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BMButtonSearch">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BillUser">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TransactionSearch">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="MassPay">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BillAgreementUpdate">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddressVerify">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EnterBoarding">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetBoardingDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateMobilePayment">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMobileStatus">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetMobileCheckout">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoMobileCheckoutPayment">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetBalance">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPalDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PayPalAPIAASoapBinding" type="ns:PayPalAPIAAInterface">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="DoExpressCheckoutPayment">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoUATPExpressCheckoutPayment">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetAuthFlowParam">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAuthDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetAccessPermissions">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAccessPermissions">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccessPermissionDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIncentiveEvaluation">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetExpressCheckout">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExecuteCheckoutOperations">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetExpressCheckoutDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoDirectPayment">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ManagePendingTransactionStatus">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoCancel">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoCapture">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoReauthorization">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoVoid">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoAuthorization">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAuthorization">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoUATPAuthorization">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetCustomerBillingAgreement">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetBillingAgreementCustomerDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateBillingAgreement">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoReferenceTransaction">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateRecurringPaymentsProfile">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRecurringPaymentsProfileDetails">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ManageRecurringPaymentsProfileStatus">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BillOutstandingAmount">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRecurringPaymentsProfile">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DoNonReferencedCredit">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReverseTransaction">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExternalRememberMeOptOut">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:header message="ns:RequesterCredentials" part="RequesterCredentials" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PayPalAPIInterfaceService">
    <wsdl:port name="PayPalAPI" binding="ns:PayPalAPISoapBinding">
      <wsdlsoap:address location="https://api.sandbox.paypal.com/2.0/" />
    </wsdl:port>
    <wsdl:port name="PayPalAPIAA" binding="ns:PayPalAPIAASoapBinding">
      <wsdlsoap:address location="https://api-aa.sandbox.paypal.com/2.0/" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>